bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(decPos  +  1,  expPos  +  1);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	17	None	replace
2	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  decPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	17	None	replace
3	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  expPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  expPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	17	None	replace
4	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  decPos);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(expPos  +  1,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(expPos  +  1,  decPos);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	17	None	replace
5	[BUG]  [BUGGY]  String  str  =  numeric;  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric;	  String    str    =    dec;    	non-compiled	[CE]  	53	None	replace
6	[BUG]  [BUGGY]  String  str  =  numeric.substring(decPos);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.substring(decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric.substring(decPos);	  String    str    =    dec;    	non-compiled	[CE]  	53	None	replace
7	[BUG]  [BUGGY]  e.printStackTrace(System.err);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  e.printStackTrace(System.err);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	e.printStackTrace(System.err);	  e.printStackTrace();    	non-compiled	[CE]  	2	None	replace
8	[BUG]  [BUGGY]  nfe.printStackTrace();  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  nfe.printStackTrace();  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	nfe.printStackTrace();	  e.printStackTrace();    	non-compiled	[CE]  	2	None	replace
9	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ");  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( " ");	  e.printStackTrace();    	non-compiled	[CE]  	2	None	replace
10	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  1,  expPos);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  decPos  +  1,  expPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  decPos  +  1,  expPos);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  	18	None	replace
11	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos  +  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  decPos  +  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  decPos  +  2);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  	18	None	replace
12	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	32	None	replace
13	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  char  expPos  =  str.length();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	32	None	replace
14	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  exp);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  exp);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ",    dec);    	non-compiled	[CE]  	54	None	replace
15	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  null);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  null);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException(null,  null);	  NumberFormatException    str    =    new    NumberFormatException(null);    	non-compiled	[CE]  	48	None	replace
16	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  e);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException(null,  e);	  NumberFormatException    str    =    new    NumberFormatException(null);    	non-compiled	[CE]  	48	None	replace
17	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(str);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException(str);	  NumberFormatException    str    =    new    NumberFormatException(null);    	non-compiled	[CE]  	48	None	replace
18	[BUG]  [BUGGY]  String  str  =  str.substring(prefix  +  1,  str.length()  -  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(prefix  +  1,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(prefix  +  1,  str.length()  -  1);	  String    str    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	12	None	replace
19	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  mant);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  	31	None	replace
20	[BUG]  [BUGGY]  throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(mant  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  	31	None	replace
21	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  null);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  	31	None	replace
22	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ",  dec);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  	31	None	replace
23	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  decPos);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(decPos  +  1,  decPos);	  String    str    =    str.substring(decPos    +    2);    	non-compiled	[CE]  	19	None	replace
24	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ");  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( " "  +  nfe  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(   "   "    +    dec    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  	23	None	replace
25	[BUG]  [BUGGY]  String  str  =  nfe.toString();  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  nfe.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  nfe.toString();	  String    str    =    nfe.getMessage();    	non-compiled	[CE]  	15	None	replace
26	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ";	  String    str    =    nfe.getMessage();    	non-compiled	[CE]  	15	None	replace
27	[BUG]  [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  nfe.getMessage()  + "  is  not  a  valid  number.   ");	  String    str    =    nfe.getMessage();    	non-compiled	[CE]  	15	None	replace
28	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	45	None	replace
29	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	45	None	replace
30	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   ",  nfe);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  	29	None	replace
31	[BUG]  [BUGGY]  NumberFormatException  str  =  this.numeric.getMessage(),  e);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  this.numeric.getMessage(),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  this.numeric.getMessage(),  e);	  NumberFormatException    str    =    this.numeric.getMessage();    	non-compiled	[CE]  	24	None	replace
32	[BUG]  [BUGGY]  NumberFormatException  str  =  this.mant.getMessage();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  this.mant.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  this.mant.getMessage();	  NumberFormatException    str    =    this.numeric.getMessage();    	non-compiled	[CE]  	24	None	replace
33	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( " "  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  	40	None	replace
34	[BUG]  [BUGGY]  exp  =  str.substring(0,  decPos);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  decPos);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  decPos);	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
35	[BUG]  [BUGGY]  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	||(dec  ==  null  &&  exp.length()  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
36	[BUG]  [BUGGY]  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
37	[BUG]  [BUGGY]  ||(dec  ==  null  &&  exp.length()  >  0)||(dec  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  ||(dec  ==  null  &&  exp.length()  >  0)||(dec  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	||(dec  ==  null  &&  exp.length()  >  0)||(dec  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
38	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
39	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
40	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
41	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
42	[BUG]  [BUGGY]  String  str  =  str.toString();  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.toString();	  String    str    =    numeric.toString();    	non-compiled	[CE]  	5	None	replace
43	[BUG]  [BUGGY]  String  str  =  mant.toString();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  mant.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  mant.toString();	  String    str    =    numeric.toString();    	non-compiled	[CE]  	5	None	replace
44	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(str.length());  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(str.length());  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(str.length());	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
45	[BUG]  [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
46	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(dec.length());  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(dec.length());  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(dec.length());	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
47	[BUG]  [BUGGY]  decimal  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(str.length());  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  decimal  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(str.length());  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	decimal  =  str.substring(0,  str.length()  -  1);  exp  =  str.substring(str.length());	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
48	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe;  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe;	  NumberFormatException    str    =    null;    	non-compiled	[CE]  	36	None	replace
49	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException();	  NumberFormatException    str    =    null;    	non-compiled	[CE]  	36	None	replace
50	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( ", ",  nfe);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( ", ",  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException( ", ",  nfe);	  NumberFormatException    str    =    new    NumberFormatException(   "   ",    nfe);    	non-compiled	[CE]  	20	None	replace
51	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " "  +  nfe);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " "  +  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException( " "  +  nfe);	  NumberFormatException    str    =    new    NumberFormatException(   "   ",    e);    	non-compiled	[CE]  	22	None	replace
52	[BUG]  [BUGGY]  String  str  =  str.getMessage();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.getMessage();	  String    str    =    numeric.getMessage();    	non-compiled	[CE]  	14	None	replace
53	[BUG]  [BUGGY]  String  str  =  mant.getMessage();  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  mant.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  mant.getMessage();	  String    str    =    numeric.getMessage();    	non-compiled	[CE]  	14	None	replace
54	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	52	None	replace
55	[BUG]  [BUGGY]  bucket  ==  null  &&  dec!=  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  ==  null  &&  dec!=  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  ==  null  &&  dec!=  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	52	None	replace
56	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]                            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	52	None	replace
57	[BUG]  [BUGGY]  decimal  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]                              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  decimal  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	decimal  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	52	None	replace
58	[BUG]  [BUGGY]  String  str  =  str.toLowerCase();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.toLowerCase();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.toLowerCase();	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  	6	None	replace
59	[BUG]  [BUGGY]  String  str  =  mant.toLowerCase();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  mant.toLowerCase();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  mant.toLowerCase();	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  	6	None	replace
60	[BUG]  [BUGGY]  String  str  =  numeric.toLowerCase(LONG_MINUS_ONE);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.toLowerCase(LONG_MINUS_ONE);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric.toLowerCase(LONG_MINUS_ONE);	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  	6	None	replace
61	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage( " ");  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage( " ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.createMessage( " ");	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  	26	None	replace
62	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(lastChar);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(lastChar);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.createMessage(lastChar);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  	26	None	replace
63	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number.n ");  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number.n ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number.n ");	  NumberFormatException    str    =    new    NumberFormatException(   "The    number    is    not    a    valid    number.       ");    	non-compiled	[CE]  	59	None	replace
64	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number. ",  e);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number. ",  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number. ",  e);	  NumberFormatException    str    =    new    NumberFormatException(   "The    number    is    not    a    valid    number.       ");    	non-compiled	[CE]  	59	None	replace
65	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  -  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	41	None	replace
66	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  +  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	41	None	replace
67	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  -  2));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	41	None	replace
68	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.withMessage(),  e);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.withMessage(),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.withMessage(),  e);	  NumberFormatException    str    =    nfe.withMessage();    	non-compiled	[CE]  	57	None	replace
69	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  	58	None	replace
70	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  	58	None	replace
71	[BUG]  [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist.   ");  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist.   ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  	58	None	replace
72	[BUG]  [BUGGY]  return  createLong(numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  return  createLong(numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	return  createLong(numeric);	  return    createBigDecimal(numeric);    	non-compiled	[CE]  	4	None	replace
73	[BUG]  [BUGGY]  return  createBigInteger(numeric);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  return  createBigInteger(numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	return  createBigInteger(numeric);	  return    createBigDecimal(numeric);    	non-compiled	[CE]  	4	None	replace
74	[BUG]  [BUGGY]  return  createInteger(numeric);  [CE]  [FE]                            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  return  createInteger(numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	return  createInteger(numeric);	  return    createBigDecimal(numeric);    	non-compiled	[CE]  	4	None	replace
75	[BUG]  [BUGGY]  String  str  =  str.trim();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.trim();	  String    str    =    numeric.trim();    	non-compiled	[CE]  	44	None	replace
76	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  return  createNumber(numeric);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  return  createNumber(numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  exp  =  str.substring(0,  str.length()  -  1);  return  createNumber(numeric);	  String    exp    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(numeric);    	non-compiled	[CE]  	3	None	replace
77	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length());  return  createNumber(numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  exp  =  str.substring(0,  str.length());  return  createNumber(numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  exp  =  str.substring(0,  str.length());  return  createNumber(numeric);	  String    exp    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(numeric);    	non-compiled	[CE]  	3	None	replace
78	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  return  createDecimal(numeric);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  return  createDecimal(numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  exp  =  str.substring(0,  str.length()  -  1);  return  createDecimal(numeric);	  String    exp    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(numeric);    	non-compiled	[CE]  	3	None	replace
79	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1,  str.length());  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  +  1,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  	13	None	replace
80	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  	13	None	replace
81	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  	13	None	replace
82	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.lastIndexOf('.',  dec);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	34	None	replace
83	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.');  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.');  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.indexOf('.');	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	34	None	replace
84	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.lastIndexOf('.',  1);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	34	None	replace
85	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.lastIndexOf('.',  -1);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	34	None	replace
86	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  str.length());  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.substring(0,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric.substring(0,  str.length());	  String    str    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	7	None	replace
87	[BUG]  [BUGGY]  String  str  =  str.substring(0,  null.length());  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  null.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  null.length());	  String    str    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	7	None	replace
88	[BUG]  [BUGGY]  String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(Decimal.MIN_VALUE,  decPos  +  1,  str.length());	  String    str    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  	47	None	replace
89	[BUG]  [BUGGY]  bucket!=  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket!=  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket!=  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    	non-compiled	[CE]  	51	None	replace
90	[BUG]  [BUGGY]  Expr  exp  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Expr  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	Expr  exp  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    	non-compiled	[CE]  	51	None	replace
91	[BUG]  [BUGGY]  bucket  ==  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  ==  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  ==  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    	non-compiled	[CE]  	51	None	replace
92	[BUG]  [BUGGY]  bucket  <  0  ||  exp  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(numeric);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  exp  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(numeric);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  exp  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(numeric);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
93	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  exp.length()  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
94	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  >=  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
95	[BUG]  [BUGGY]  String  str  =  str.substring(0,  numeric.length());  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  numeric.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  numeric.length());	  String    str    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  	43	None	replace
96	[BUG]  [BUGGY]  String  str  =  str.substring(0,  numeric.length()  -  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  numeric.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  numeric.length()  -  1);	  String    str    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  	43	None	replace
97	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  numeric.length());  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.substring(0,  numeric.length());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric.substring(0,  numeric.length());	  String    str    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  	43	None	replace
98	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length());  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  exp  =  str.substring(0,  str.length());  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  exp  =  str.substring(0,  str.length());	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
99	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  exp  =  str.substring(0,  str.length()  +  1);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  exp  =  str.substring(0,  str.length()  +  1);	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
100	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length())+  1;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  exp  =  str.substring(0,  str.length())+  1;  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  exp  =  str.substring(0,  str.length())+  1;	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
101	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getMessage(),  null);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getMessage(),  null);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.getMessage(),  null);	  NumberFormatException    str    =    nfe.getMessage(),    e);    	non-compiled	[CE]  	25	None	replace
102	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getMessage(),  this);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getMessage(),  this);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.getMessage(),  this);	  NumberFormatException    str    =    nfe.getMessage(),    e);    	non-compiled	[CE]  	25	None	replace
103	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getMessage(),  dec);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getMessage(),  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.getMessage(),  dec);	  NumberFormatException    str    =    nfe.getMessage(),    e);    	non-compiled	[CE]  	25	None	replace
104	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getMessage(),  e,  null);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getMessage(),  e,  null);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.getMessage(),  e,  null);	  NumberFormatException    str    =    nfe.getMessage(),    e);    	non-compiled	[CE]  	25	None	replace
105	[BUG]  [BUGGY]  String  str  =  e.getMessage()  + "  is  not  a  valid  number. ",  nfe);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  e.getMessage()  + "  is  not  a  valid  number. ",  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  e.getMessage()  + "  is  not  a  valid  number. ",  nfe);	  String    str    =    e.getMessage()    +   "    is    not    a    valid    number.       ";    	non-compiled	[CE]  	16	None	replace
106	[BUG]  [BUGGY]  NumberFormatException  str  =  null.toString();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  null.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  null.toString();	  NumberFormatException    str    =    nfe.toString();    	non-compiled	[CE]  	35	None	replace
107	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.toString()  + "  is  not  a  valid  number.   ");  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.toString()  + "  is  not  a  valid  number.   ");  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.toString()  + "  is  not  a  valid  number.   ");	  NumberFormatException    str    =    nfe.toString();    	non-compiled	[CE]  	35	None	replace
108	[BUG]  [BUGGY]  bucket!=  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket!=  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket!=  null  &&  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
109	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  }  else  {  exp  =  str.substring(str.length());  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  }  else  {  exp  =  str.substring(str.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  str.length()  -  1);  }  else  {  exp  =  str.substring(str.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
110	[BUG]  [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
111	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  null);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  null);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  null);	  NumberFormatException    str    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  	21	None	replace
112	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  numeric);	  NumberFormatException    str    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  	21	None	replace
113	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.withMessage(0);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.withMessage(0);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.withMessage(0);	  NumberFormatException    str    =    nfe.withMessage();    	non-compiled	[CE]  	57	None	replace
114	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.       ",    str);    	non-compiled	[CE]  	31	None	replace
115	[BUG]  [BUGGY]  String  str  =  numeric.toLowerCase(LONG_ZERO);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.toLowerCase(LONG_ZERO);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric.toLowerCase(LONG_ZERO);	  String    str    =    numeric.toLowerCase();    	non-compiled	[CE]  	6	None	replace
116	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  NUMBER_ZERO);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( " ",  NUMBER_ZERO);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException( " ",  NUMBER_ZERO);	  NumberFormatException    str    =    new    NumberFormatException(   ",   ");    	non-compiled	[CE]  	21	None	replace
117	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  	29	None	replace
118	[BUG]  [BUGGY]  if(numeric!=  null)  {  e.printStackTrace();  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  if(numeric!=  null)  {  e.printStackTrace();  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	if(numeric!=  null)  {  e.printStackTrace();  }	  e.printStackTrace();    	non-compiled	[CE]  	2	None	replace
119	[BUG]  [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  dec.length()  -  1);	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    	non-compiled	[CE]  	51	None	replace
120	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    	non-compiled	[CE]  	51	None	replace
121	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length());  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    	non-compiled	[CE]  	51	None	replace
122	[BUG]  [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  e);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(null  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  	55	None	replace
123	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  	55	None	replace
124	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
125	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
126	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(0)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length()  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(0)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length()  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(0)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length()	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
127	[BUG]  [BUGGY]  return  createNumber(numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  return  createNumber(numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	return  createNumber(numeric);	  return    createBigDecimal(numeric);    	non-compiled	[CE]  	4	None	replace
128	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
129	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
130	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
131	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  dec.length()  >  0)||(dec.charAt(dec.length()  -  1)!=  '-'))  {  exp  =  str.substring(0,  dec.length()  -  1	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
132	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	8	None	replace
133	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  nfe);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException(null,  nfe);	  NumberFormatException    str    =    new    NumberFormatException(null);    	non-compiled	[CE]  	48	None	replace
134	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
135	[BUG]  [BUGGY]  bucket  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(decPos  +  1,  str.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
136	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
137	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
138	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.lastIndexOf('.',  DEC);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	34	None	replace
139	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos).trim();  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos).trim();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(decPos  +  1,  expPos).trim();	  String    str    =    str.substring(decPos    +    1).trim();    	non-compiled	[CE]  	56	None	replace
140	[BUG]  [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(dec  + "  is  not  a  valid  number.   ",  str);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ",    dec);    	non-compiled	[CE]  	54	None	replace
141	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(decPos  +  1,  expPos  -  1);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	17	None	replace
142	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(null,  null  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  	40	None	replace
143	[BUG]  [BUGGY]  String  str  =  str.substring(0,  null.length()  -  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  null.length()  -  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  null.length()  -  1);	  String    str    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	7	None	replace
144	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(numeric);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(numeric);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(numeric);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
145	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(nu  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(nu  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(nu	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
146	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(n  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(n  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  else  {  return  createBigDecimal(n	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
147	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.getNumberFormatException();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.getNumberFormatException();	  NumberFormatException    str    =    nfe.toString();    	non-compiled	[CE]  	35	None	replace
148	[BUG]  [BUGGY]  String  str  =  str.substring(0,  prefixPos  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  prefixPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  prefixPos  +  1);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  	18	None	replace
149	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  expPos  +  1);	  String    str    =    str.substring(0,    decPos    +    1);    	non-compiled	[CE]  	18	None	replace
150	[BUG]  [BUGGY]  if(dec  ==  null)  {  String  exp  =  str.substring(0,  str.length()  -  1);  return  createBigDecimal(numeric);  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  if(dec  ==  null)  {  String  exp  =  str.substring(0,  str.length()  -  1);  return  createBigDecimal(numeric);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	if(dec  ==  null)  {  String  exp  =  str.substring(0,  str.length()  -  1);  return  createBigDecimal(numeric);  }	  String    exp    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(numeric);    	non-compiled	[CE]  	3	None	replace
151	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  decPos  >  -1  &&  expPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
152	[BUG]  [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||(dec  ==  null  &&  decPos  >  0)||(decPos  <  str.length()  -  1))  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
153	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
154	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  2);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  exp  =  str.substring(0,  str.length()  -  2);	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
155	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  exp  =  str.substring(0,  str.length()  -  1  +  1);	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
156	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( " "  +  mant  + "  is  not  a  valid  number.n ");	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.n   ");    	non-compiled	[CE]  	28	None	replace
157	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(numeric);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.createMessage(numeric);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  	26	None	replace
158	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(null,  numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  	58	None	replace
159	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.toString());  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric.toString());  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException(numeric.toString());	  NumberFormatException    str    =    e.toString();    	non-compiled	[CE]  	11	None	replace
160	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number.   ",  nfe);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number.   ",  nfe);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException( "The  number  is  not  a  valid  number.   ",  nfe);	  NumberFormatException    str    =    new    NumberFormatException(   "The    number    is    not    a    valid    number.       ");    	non-compiled	[CE]  	59	None	replace
161	[BUG]  [BUGGY]  String  str  =  this.numeric.toString();  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.numeric.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  this.numeric.toString();	  String    str    =    numeric.toString();    	non-compiled	[CE]  	5	None	replace
162	[BUG]  [BUGGY]  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	{  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
163	[BUG]  [BUGGY]  Expr  <  N,  V>  exp  =  str.substring(0,  decPos);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Expr  <  N,  V>  exp  =  str.substring(0,  decPos);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	Expr  <  N,  V>  exp  =  str.substring(0,  decPos);	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
164	[BUG]  [BUGGY]  Expr  {  exp  =  str.substring(0,  decPos);  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Expr  {  exp  =  str.substring(0,  decPos);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	Expr  {  exp  =  str.substring(0,  decPos);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    	non-compiled	[CE]  	39	None	replace
165	[BUG]  [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
166	[BUG]  [BUGGY]  Expr  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Expr  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	Expr  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(dec.length());	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
167	[BUG]  [BUGGY]  MutableString  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(exp.length());  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  MutableString  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(exp.length());  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	MutableString  exp  =  str.substring(0,  dec.length()  -  1);  exp  =  str.substring(exp.length());	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	49	None	replace
168	[BUG]  [BUGGY]  NumberFormatException  str  =(numeric  ==  null)?  this.numeric.getMessage()  :  null;  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =(numeric  ==  null)?  this.numeric.getMessage()  :  null;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =(numeric  ==  null)?  this.numeric.getMessage()  :  null;	  NumberFormatException    str    =    this.numeric.getMessage();    	non-compiled	[CE]  	24	None	replace
169	[BUG]  [BUGGY]  NumberFormatException  str  =  this.numeric.toString();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  this.numeric.toString();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  this.numeric.toString();	  NumberFormatException    str    =    this.numeric.getMessage();    	non-compiled	[CE]  	24	None	replace
170	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(decPos  +  1,  str.length();	  String    str    =    str.substring(decPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  	47	None	replace
171	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(numeric  + ",  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ");	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.    Please    check    that    the    dec    does    not    exist.   ");    	non-compiled	[CE]  	58	None	replace
172	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(decPos  +  1,  expPos  +  2);	  String    str    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  	17	None	replace
173	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.lastIndexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	32	None	replace
174	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.indexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	32	None	replace
175	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.lastIndexOf('.')+  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	32	None	replace
176	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  e);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.  Please  check  that  the  dec  does  not  exist. ",  e);	  throw    new    NumberFormatException(numeric    +   "    is    not    a    valid    number.   ",    e);    	non-compiled	[CE]  	55	None	replace
177	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(),  e);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(),  e);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.createMessage(),  e);	  NumberFormatException    str    =    nfe.getMessage(),    e);    	non-compiled	[CE]  	25	None	replace
178	[BUG]  [BUGGY]  throw  new  NumberFormatException(null,  dec  + "  is  not  a  valid  number.   ");  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(null,  dec  + "  is  not  a  valid  number.   ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(null,  dec  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(null    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  	40	None	replace
179	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);	  String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  	13	None	replace
180	[BUG]  [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	52	None	replace
181	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  str.length()  -  1);  }  else  {  return  createBigDecimal(numeric);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	52	None	replace
182	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createNumber();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createNumber();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.createNumber();	  NumberFormatException    str    =    nfe.toString();    	non-compiled	[CE]  	35	None	replace
183	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.toString(dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.toString(dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.toString(dec);	  NumberFormatException    str    =    nfe.toString();    	non-compiled	[CE]  	35	None	replace
184	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  dec);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(null,  dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException(null,  dec);	  NumberFormatException    str    =    new    NumberFormatException(null);    	non-compiled	[CE]  	48	None	replace
185	[BUG]  [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  new  NumberFormatException(numeric);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  new  NumberFormatException(numeric);	  NumberFormatException    str    =    new    NumberFormatException(null);    	non-compiled	[CE]  	48	None	replace
186	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.   ",  e);	  throw    new    NumberFormatException(   "   "    +    str    +   "    is    not    a    valid    number.       ",    e);    	non-compiled	[CE]  	29	None	replace
187	[BUG]  [BUGGY]  String  str  =  this.numeric.getMessage();  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  this.numeric.getMessage();  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  this.numeric.getMessage();	  String    str    =    nfe.getMessage();    	non-compiled	[CE]  	15	None	replace
188	[BUG]  [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec,  e);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec,  e);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ",  dec,  e);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ",    dec);    	non-compiled	[CE]  	54	None	replace
189	[BUG]  [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(expPos  +  1,  str.length());  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(expPos  +  1,  str.length());  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	bucket  <  0  ||  dec  ==  null)  {  exp  =  str.substring(0,  decPos);  }  else  {  exp  =  str.substring(expPos  +  1,  str.length());  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    exp    =    str.substring(decPos    +    1,    str.length());    }    	non-compiled	[CE]  	37	None	replace
190	[BUG]  [BUGGY]  String  str  =  numeric.substring(0,  decPos);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.substring(0,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric.substring(0,  decPos);	  String    str    =    dec;    	non-compiled	[CE]  	53	None	replace
191	[BUG]  [BUGGY]  String  str  =  numeric.substring(decPos  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.substring(decPos  +  1);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric.substring(decPos  +  1);	  String    str    =    dec;    	non-compiled	[CE]  	53	None	replace
192	[BUG]  [BUGGY]  String  str  =  numeric.substring(decPos  +  1,  decPos);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  numeric.substring(decPos  +  1,  decPos);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  numeric.substring(decPos  +  1,  decPos);	  String    str    =    dec;    	non-compiled	[CE]  	53	None	replace
193	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC)+  1;  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC)+  1;  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	int  expPos  =  str.lastIndexOf('.',  DEC)+  1;	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	34	None	replace
194	[BUG]  [BUGGY]  exp  =  str.substring(0,  dec.length());  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  dec.length());  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  dec.length());	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    	non-compiled	[CE]  	51	None	replace
195	[BUG]  [BUGGY]  {  exp  =  str.substring(0,  str.length()  -  1);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  {  exp  =  str.substring(0,  str.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	{  exp  =  str.substring(0,  str.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    	non-compiled	[CE]  	51	None	replace
196	[BUG]  [BUGGY]  }  else  if(dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  }  else  if(dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	}  else  if(dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
197	[BUG]  [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	exp  =  str.substring(0,  dec.length()  -  1);  }  else  {  exp  =  str.substring(dec.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
198	[BUG]  [BUGGY]  }  else  if(dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  }  else  if(dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	}  else  if(dec  ==  null)  {  exp  =  str.substring(0,  dec.length()  -  1);  }	  if(dec    ==    null)    {    exp    =    str.substring(0,    dec.length()    -    1);    }    else    {    exp    =    str.substring(dec.length()    -    1);    }    	non-compiled	[CE]  	50	None	replace
199	[BUG]  [BUGGY]  NeighborDecimal  exp  =  str.substring(0,  decPos);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NeighborDecimal  exp  =  str.substring(0,  decPos);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NeighborDecimal  exp  =  str.substring(0,  decPos);	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
200	[BUG]  [BUGGY]  Neighbor  dec  =  str.substring(0,  decPos);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  Neighbor  dec  =  str.substring(0,  decPos);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	Neighbor  dec  =  str.substring(0,  decPos);	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
201	[BUG]  [BUGGY]  NeighborDecimal  exp  =  createBigDecimal(numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NeighborDecimal  exp  =  createBigDecimal(numeric);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NeighborDecimal  exp  =  createBigDecimal(numeric);	  if(dec    ==    null)    {    exp    =    str.substring(0,    decPos);    }    else    {    return    createBigDecimal(numeric);    }    	non-compiled	[CE]  	38	None	replace
202	[BUG]  [BUGGY]  e.printStackTrace(System.out);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  e.printStackTrace(System.out);  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	e.printStackTrace(System.out);	  e.printStackTrace();    	non-compiled	[CE]  	2	None	replace
203	[BUG]  [BUGGY]  String  str  =  e.getMessage()  + ",  is  not  a  valid  number.   ";  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  String  str  =  e.getMessage()  + ",  is  not  a  valid  number.   ";  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	String  str  =  e.getMessage()  + ",  is  not  a  valid  number.   ";	  String    str    =    e.getMessage()    +   "    is    not    a    valid    number.       ";    	non-compiled	[CE]  	16	None	replace
204	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.withMessage(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.withMessage(str);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.withMessage(str);	  NumberFormatException    str    =    nfe.withMessage();    	non-compiled	[CE]  	57	None	replace
205	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(dec);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.createMessage(dec);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  	26	None	replace
206	[BUG]  [BUGGY]  NumberFormatException  str  =  nfe.createMessage(str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  NumberFormatException  str  =  nfe.createMessage(str);  [BUGGY]      throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	NumberFormatException  str  =  nfe.createMessage(str);	  NumberFormatException    str    =    nfe.createMessage();    	non-compiled	[CE]  	26	None	replace
207	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.. ");  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( " "  +  dec  + "  is  not  a  valid  number.. ");	  throw    new    NumberFormatException(   "   "    +    mant    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  	42	None	replace
208	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  }  default  :      [BUGGY]  throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");  [BUGGY]        }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	546	546	2	replace	throw  new  NumberFormatException( "Unknown  number: "  +  str  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "    +    mant    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  	42	None	replace
