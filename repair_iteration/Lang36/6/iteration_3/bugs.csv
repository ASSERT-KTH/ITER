bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Dec  =  str.substring(decPos  +  1,  expPos  +  1);	  Dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
4	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Dec  =  str.substring(decPos  +  1,  expPos  -  1);	  Dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Dec  =  str.substring(decPos  +  1,  expPos  +  2);	  Dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
6	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos,  expPos);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos,  expPos);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Dec  =  str.substring(decPos  +  1,  expPos,  expPos);	  Dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
7	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
8	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  0);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  2);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  2);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  2);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  expPos  -  1);	  int    decPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  DEC_POP);	  int    decPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  2,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  2,  expPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  2,  expPos  +  1);	  Integer    dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
13	[BUG]  [BUGGY]  int  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  dec  =  str.substring(decPos  +  1,  expPos);	  Integer    dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
14	[BUG]  [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(expPos  +  1,  expPos);	  Integer    dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
15	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  +  3);	  Integer    dec    =    str.substring(decPos    +    1,    expPos    +    2);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
16	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  -  2);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  -  2);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  -  2);	  Integer    dec    =    str.substring(decPos    +    1,    expPos    +    2);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
17	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  2;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.')/  2;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.')/  2;	  int    decPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
18	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  2;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  2;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  expPos)+  2;	  int    decPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
19	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1  -  expPos);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1  -  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1  -  expPos);	  Integer    dec    =    str.substring(decPos    +    1    -    decPos);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
20	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  2);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Dec  =  str.substring(decPos  +  2);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Dec  =  str.substring(decPos  +  2);	  Dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
21	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  2,  expPos);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Dec  =  str.substring(decPos  +  2,  expPos);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Dec  =  str.substring(decPos  +  2,  expPos);	  Dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
22	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  +  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  2,  expPos  +  1);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
23	[BUG]  [BUGGY]  dec  =  str.substring(expPos  +  2,  decPos);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(expPos  +  2,  decPos);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(expPos  +  2,  decPos);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
24	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  -  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  -  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  2,  expPos  -  1);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
25	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos  +  1);	  int    decPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  -  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  -  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos  -  1);	  int    decPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('.',  decPos);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.lastIndexOf('.',  decPos);	  Integer    decPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.',  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.indexOf('.',  expPos  +  1);	  Integer    decPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.',  DEC_POP);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.indexOf('.',  DEC_POP);	  Integer    decPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1,  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  expPos  +  1,  expPos);	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  2);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  expPos  +  2);	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.indexOf('.',  decPos  +  1);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
33	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.indexOf('.',  expPos);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
34	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.indexOf('.',  DEC_POP);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)/  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)/  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  expPos)/  1;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1)/  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1)/  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  expPos  -  1)/  1;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
37	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;	  int    decPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
38	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1).trim();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1).trim();  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1).trim();	  dec    =    str.substring(decPos    +    1,    expPos).trim();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
39	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2).trim();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2).trim();  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  2).trim();	  dec    =    str.substring(decPos    +    1,    expPos).trim();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
40	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  2;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  2;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.')/  2;	  int    decPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
41	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)/  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)/  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos)/  1;	  int    decPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
42	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP)/  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP)/  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP)/  1;	  int    decPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
43	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)/  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)/  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)/  1;	  int    decPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
44	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  3);	  dec    =    str.substring(decPos    +    1,    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  4);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  4);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  4);	  dec    =    str.substring(decPos    +    1,    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  2;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  2;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos)+  2;	  int    decPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
47	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos  +  1)+  1;	  int    decPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
48	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP)+  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP)+  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  DEC_POP)+  1;	  int    decPos    =    str.lastIndexOf('.',    DEC_POP)+    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
49	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP)+  2;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP)+  2;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP)+  2;	  int    decPos    =    str.lastIndexOf('.',    DEC_POP)+    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
50	[BUG]  [BUGGY]  int  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  dec  =  str.substring(decPos  +  1,  expPos  +  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
51	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  *  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  *  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  *  1);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
52	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('.',  expPos);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.lastIndexOf('.',  expPos);	  Integer    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('.',  1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.lastIndexOf('.',  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.lastIndexOf('.',  1);	  Integer    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	15	None	replace
54	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  dec  +  1);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  orphaned  case	18	None	replace
55	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  0);	  int    expPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  orphaned  case	19	None	replace
56	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  2);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  2);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  2);	  int    expPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  orphaned  case	19	None	replace
57	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  orphaned  case	20	None	replace
58	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  orphaned  case	20	None	replace
59	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('.',  dec);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.lastIndexOf('.',  dec);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.lastIndexOf('.',  dec);	  Integer    decPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  orphaned  case	16	None	replace
60	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  exp);	  int    decPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  orphaned  case	40	None	replace
61	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.',  expPos  -  1);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.indexOf('.',  expPos  -  1);	  Integer    decPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  orphaned  case	13	None	replace
62	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos.length());  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos.length());  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos.length());	  dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  orphaned  case	25	None	replace
63	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  str.length());  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  str.length());  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos,  str.length());	  dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
64	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos.length());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos.length());  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Dec  =  str.substring(decPos  +  1,  expPos.length());	  dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
65	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1,  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  +  1,  expPos);	  Integer    dec    =    str.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
66	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos  +  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
67	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1,  expPos);  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1,  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  -  1,  expPos);	  Integer    dec    =    str.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  orphaned  case	32	None	replace
68	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  expPos  +  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  expPos  +  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos,  expPos  +  1);	  dec    =    str.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  orphaned  case	9	None	replace
69	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  expPos  -  1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  expPos  -  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos,  expPos  -  1);	  dec    =    str.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  orphaned  case	9	None	replace
70	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1,  expPos);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1,  expPos);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1,  expPos);	  dec    =    str.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  orphaned  case	9	None	replace
71	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos);  dec  =  str.substring(decPos  +  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos);  dec  =  str.substring(decPos  +  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Dec  =  str.substring(decPos  +  1,  expPos);  dec  =  str.substring(decPos  +  1);	  Dec    =    str.substring(decPos    +    1);    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  orphaned  case	36	None	replace
72	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.indexOf('.',  dec);	  int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	42	None	replace
73	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  -  1);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  -  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  decPos  -  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  orphaned  case	17	None	replace
74	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP)/  1;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP)/  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  DEC_POP)/  1;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  orphaned  case	44	None	replace
75	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.',  DEC);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.indexOf('.',  DEC);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.indexOf('.',  DEC);	  Integer    decPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  orphaned  case	16	None	replace
76	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  str.length()  -  1);	  dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  orphaned  case	25	None	replace
77	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  2  -  decPos);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  2  -  decPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  2  -  decPos);	  Integer    dec    =    str.substring(decPos    +    2);    	non-compiled	[CE]  orphaned  case	23	None	replace
78	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2  -  1);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2  -  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  +  2  -  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos    +    2);    	non-compiled	[CE]  orphaned  case	30	None	replace
79	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  1  +  1;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  1  +  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos)+  1  +  1;	  int    decPos    =    str.lastIndexOf('.',    expPos)+    1;    	non-compiled	[CE]  orphaned  case	21	None	replace
80	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  *  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  *  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  *  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos    -    1);    	non-compiled	[CE]  orphaned  case	31	None	replace
81	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1).trim();  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1).trim();  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  -  1).trim();	  dec    =    str.substring(decPos    +    1,    expPos).trim();    	non-compiled	[CE]  orphaned  case	1	None	replace
82	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.indexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  orphaned  case	20	None	replace
83	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.',  decPos  +  1);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.indexOf('.',  decPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.indexOf('.',  decPos  +  1);	  Integer    decPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  orphaned  case	14	None	replace
84	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  expPos);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
85	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1,  expPos);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1,  expPos);  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  -  1,  expPos);	  dec    =    str.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  orphaned  case	9	None	replace
86	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1).toLowerCase();  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1).toLowerCase();  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1).toLowerCase();	  dec    =    str.substring(decPos    +    1,    expPos    +    1);    	non-compiled	[CE]  orphaned  case	6	None	replace
87	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos  +  1);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  decPos  +  1);	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  orphaned  case	12	None	replace
88	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP)+  1  +  1;  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP)+  1  +  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP)+  1  +  1;	  int    decPos    =    str.lastIndexOf('.',    DEC_POP)+    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
89	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  -1);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  orphaned  case	4	None	replace
90	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1  +  1;  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1  +  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  expPos)+  1  +  1;	  int    decPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  orphaned  case	27	None	replace
91	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.indexOf('.',  DEC);	  int    decPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  orphaned  case	40	None	replace
92	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  decPos).trim();  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  decPos).trim();  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos,  decPos).trim();	  dec    =    str.substring(decPos    +    1,    expPos).trim();    	non-compiled	[CE]  orphaned  case	1	None	replace
93	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  expPos).trim();  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos,  expPos).trim();  [BUGGY]      }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	dec  =  str.substring(decPos  +  1,  expPos,  expPos).trim();	  dec    =    str.substring(decPos    +    1,    expPos).trim();    	non-compiled	[CE]  orphaned  case	1	None	replace
94	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.indexOf('.')+  1;	  int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	42	None	replace
95	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  4);  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos  +  4);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos  +  4);	  Integer    dec    =    str.substring(decPos    +    1,    expPos    +    1);    	non-compiled	[CE]  orphaned  case	29	None	replace
96	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  2  -  expPos);  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  2  -  expPos);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  2  -  expPos);	  Integer    dec    =    str.substring(decPos    +    2);    	non-compiled	[CE]  orphaned  case	23	None	replace
97	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos)/  2;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos)/  2;  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  decPos  =  str.lastIndexOf('.',  decPos)/  2;	  int    decPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
98	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.',  decPos  -  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  decPos  =  str.indexOf('.',  decPos  -  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  decPos  =  str.indexOf('.',  decPos  -  1);	  Integer    decPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
99	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
100	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.indexOf('.',  expPos  +  1);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
101	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  -  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  -  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	int  expPos  =  str.lastIndexOf('.',  dec  -  1);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
102	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos  -  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos  -  1);  [BUGGY]      dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	480	480	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos,  expPos  -  1);	  Integer    dec    =    str.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
