bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NumberUtils.setNumberValue(numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setNumberValue(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setNumberValue(numeric);	  NumberUtils.setLongValue(str);    	non-compiled	[CE]  	11	None	replace
2	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	34	None	replace
3	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	34	None	replace
4	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	34	None	replace
5	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  allZeros,  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  allZeros,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(mant,  allZeros,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	34	None	replace
6	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  4);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  4);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric  +  4);	  Float    f    =    NumberUtils.createFloat(numeric    +    3);    	non-compiled	[CE]  	6	None	replace
7	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  mant);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric,  mant);	  Number    f    =    NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	16	None	replace
8	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(mant,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(mant,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(mant,  str);	  Number    f    =    NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	16	None	replace
9	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str,  exp);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric,  str,  exp);	  Number    f    =    NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	16	None	replace
10	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  numeric);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(str,  numeric);	  Number    f    =    NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	16	None	replace
11	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  0.0f);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  0.0f);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str,  0.0f);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    0.0f);    	non-compiled	[CE]  	46	None	replace
12	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0.0f,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0.0f,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0.0f,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    0.0f);    	non-compiled	[CE]  	46	None	replace
13	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  0.0f);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  0.0f);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  allZeros,  0.0f);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    0.0f);    	non-compiled	[CE]  	46	None	replace
14	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  0.0f);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  0.0f);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  0.0f);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    0.0f);    	non-compiled	[CE]  	46	None	replace
15	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  dec);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createFloat(numeric,  dec);	  Integer    f    =    NumberUtils.createInteger(numeric,    dec);    	non-compiled	[CE]  	67	None	replace
16	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  str  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  str  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  str  +  1);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  	31	None	replace
17	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  str  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  str  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(mant,  str  +  1);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  	31	None	replace
18	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  2);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  2);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str  +  2);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  	31	None	replace
19	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  str);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  	38	None	replace
20	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  	38	None	replace
21	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  1);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  	38	None	replace
22	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  	38	None	replace
23	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(dec,  allZeros,  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(dec,  allZeros,  exp);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(dec,  allZeros,  exp);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    exp);    	non-compiled	[CE]  	61	None	replace
24	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  exp);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  allZeros,  exp);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    exp);    	non-compiled	[CE]  	61	None	replace
25	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  dec,  exp);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  dec,  exp);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  dec,  exp);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    exp);    	non-compiled	[CE]  	61	None	replace
26	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric.floatValue());  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric.floatValue());	  Float    f    =    NumberUtils.createFloat(str.floatValue());    	non-compiled	[CE]  	12	None	replace
27	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());	  Float    f    =    NumberUtils.createFloat(str.floatValue());    	non-compiled	[CE]  	12	None	replace
28	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric.longValue(),  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric.longValue(),  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric.longValue(),  str);	  NumberUtils.setLongValue(numeric.longValue());    	non-compiled	[CE]  	9	None	replace
29	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric.longValue()  +  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric.longValue()  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric.longValue()  +  1);	  NumberUtils.setLongValue(numeric.longValue());    	non-compiled	[CE]  	9	None	replace
30	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric.doubleValue(),  str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric.doubleValue(),  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric.doubleValue(),  str);	  NumberUtils.setLongValue(numeric.longValue());    	non-compiled	[CE]  	9	None	replace
31	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  str,  exp);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  str,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  str,  exp);	  Integer    f    =    NumberUtils.createInteger(numeric,    str);    	non-compiled	[CE]  	36	None	replace
32	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  str  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  str  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  str  +  1);	  Integer    f    =    NumberUtils.createInteger(numeric,    str);    	non-compiled	[CE]  	36	None	replace
33	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  mant);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  mant);	  Integer    f    =    NumberUtils.createInteger(numeric,    str);    	non-compiled	[CE]  	36	None	replace
34	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(mant,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(mant,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(mant,  str);	  Integer    f    =    NumberUtils.createInteger(numeric,    str);    	non-compiled	[CE]  	36	None	replace
35	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  dec,  allZeros);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  dec,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  dec,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    dec);    	non-compiled	[CE]  	59	None	replace
36	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(dec,  allZeros,  numeric);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(dec,  allZeros,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(dec,  allZeros,  numeric);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    dec);    	non-compiled	[CE]  	59	None	replace
37	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(dec,  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(dec,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(dec,  exp);	  Integer    f    =    NumberUtils.createInteger(numeric,    exp);    	non-compiled	[CE]  	69	None	replace
38	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(str,  exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(str,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(str,  exp);	  Integer    f    =    NumberUtils.createInteger(numeric,    exp);    	non-compiled	[CE]  	69	None	replace
39	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).doubleValue();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).doubleValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric).doubleValue();	  Number    f    =    NumberUtils.createBigDecimal(numeric).intValue();    	non-compiled	[CE]  	51	None	replace
40	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric).intValue();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric).intValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(numeric).intValue();	  Number    f    =    NumberUtils.createBigDecimal(numeric).intValue();    	non-compiled	[CE]  	51	None	replace
41	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).floatValue();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).floatValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric).floatValue();	  Number    f    =    NumberUtils.createBigDecimal(numeric).intValue();    	non-compiled	[CE]  	51	None	replace
42	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  -  2);	  Integer    numeric    =    str.substring(0,    str.length();    	non-compiled	[CE]  	21	None	replace
43	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	String  numeric  =  str.substring(0,  str.length()  -  2);	  String    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  	7	None	replace
44	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  4);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  4);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	String  numeric  =  str.substring(0,  str.length()  -  4);	  String    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  	7	None	replace
45	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFlattenedNumber(numeric);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createFlattenedNumber(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createFlattenedNumber(numeric);	  Number    f    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  	17	None	replace
46	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  12);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  12);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  12);	  Integer    f    =    NumberUtils.createInteger(numeric,    16);    	non-compiled	[CE]  	57	None	replace
47	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  10);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  10);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  10);	  Integer    f    =    NumberUtils.createInteger(numeric,    16);    	non-compiled	[CE]  	57	None	replace
48	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  1);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue()    -    1);    	non-compiled	[CE]  	56	None	replace
49	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue()  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue()  -  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str.floatValue()  -  1);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue()    -    1);    	non-compiled	[CE]  	56	None	replace
50	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);	  Float    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  	15	None	replace
51	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str.doubleValue());  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str.doubleValue());	  Float    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  	15	None	replace
52	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);	  Float    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  	15	None	replace
53	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createInteger(numeric,  str);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  	22	None	replace
54	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createInteger(str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createInteger(str);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  	22	None	replace
55	[BUG]  [BUGGY]  NumberUtils.createNumber(mant,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(mant,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(mant,  str);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	1	None	replace
56	[BUG]  [BUGGY]  NumberUtils.createNumber(numeric,  mant);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(numeric,  mant);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	1	None	replace
57	[BUG]  [BUGGY]  NumberUtils.createNumber(numeric,  str,  exp);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(numeric,  str,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(numeric,  str,  exp);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	1	None	replace
58	[BUG]  [BUGGY]  NumberUtils.createNumber(str,  numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(str,  numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(str,  numeric);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	1	None	replace
59	[BUG]  [BUGGY]  double  f  =  NumberUtils.createFloat(numeric);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createFloat(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	double  f  =  NumberUtils.createFloat(numeric);	  float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  	27	None	replace
60	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(str);	  float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  	27	None	replace
61	[BUG]  [BUGGY]  double  f  =  NumberUtils.createDouble(numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createDouble(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	double  f  =  NumberUtils.createDouble(numeric);	  float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  	27	None	replace
62	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric,  str);	  Float    f    =    NumberUtils.createFloat(str,    allZeros);    	non-compiled	[CE]  	33	None	replace
63	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  allZeros);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric,  allZeros);	  Float    f    =    NumberUtils.createFloat(str,    allZeros);    	non-compiled	[CE]  	33	None	replace
64	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric.doubleValue()  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric.doubleValue()  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric.doubleValue()  +  1);	  NumberUtils.setLongValue(numeric.doubleValue());    	non-compiled	[CE]  	70	None	replace
65	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric.doubleValue()  -  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric.doubleValue()  -  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric.doubleValue()  -  1);	  NumberUtils.setLongValue(numeric.doubleValue());    	non-compiled	[CE]  	70	None	replace
66	[BUG]  [BUGGY]  NumberUtils.setIntValue(str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setIntValue(str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setIntValue(str);	  NumberUtils.setIntValue(numeric);    	non-compiled	[CE]  	71	None	replace
67	[BUG]  [BUGGY]  NumberUtils.setIntValue(numeric,  str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setIntValue(numeric,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setIntValue(numeric,  str);	  NumberUtils.setIntValue(numeric);    	non-compiled	[CE]  	71	None	replace
68	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue(),  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue(),  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue(),  str);	  Number    f    =    NumberUtils.createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  	26	None	replace
69	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue()  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue()  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue()  +  1);	  Number    f    =    NumberUtils.createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  	26	None	replace
70	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric.doubleValue());  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric.doubleValue());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(numeric.doubleValue());	  Number    f    =    NumberUtils.createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  	26	None	replace
71	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue()  -  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue()  -  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue()  -  1);	  Number    f    =    NumberUtils.createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  	26	None	replace
72	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  FLOAT_ZERO,  allZeros);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  FLOAT_ZERO,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  FLOAT_ZERO,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    FLOAT_ZERO);    	non-compiled	[CE]  	45	None	replace
73	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  FLOAT_ZERO);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  FLOAT_ZERO);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  FLOAT_ZERO);	  Float    f    =    NumberUtils.createFloat(numeric,    FLOAT_ZERO);    	non-compiled	[CE]  	45	None	replace
74	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  SHORT_ZERO);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  SHORT_ZERO);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  SHORT_ZERO);	  Float    f    =    NumberUtils.createFloat(numeric,    FLOAT_ZERO);    	non-compiled	[CE]  	45	None	replace
75	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  1,  str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  1,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric  +  1,  str);	  Float    f    =    NumberUtils.createFloat(numeric    +    2);    	non-compiled	[CE]  	4	None	replace
76	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  mant);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  mant);	  Float    f    =    NumberUtils.createFloat(numeric,    mant);    	non-compiled	[CE]  	42	None	replace
77	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(mant,  numeric);	  Float    f    =    NumberUtils.createFloat(numeric,    mant);    	non-compiled	[CE]  	42	None	replace
78	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  1));  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  1));  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  -  1));	  Integer    numeric    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	49	None	replace
79	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  2));  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  2));  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  -  2));	  Integer    numeric    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	49	None	replace
80	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  +  1));  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  +  1));	  Integer    numeric    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	49	None	replace
81	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	String  numeric  =  str.substring(0,  str.length()  -  1)+  1;	  String    numeric    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	64	None	replace
82	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	String  numeric  =  str.substring(0,  str.length()  +  1)+  1;	  String    numeric    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	64	None	replace
83	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  null);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  null);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(str,  null);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  	47	None	replace
84	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(string,  numeric);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(string,  numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(string,  numeric);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  	47	None	replace
85	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  4);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  4);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  -  4);	  Integer    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  	19	None	replace
86	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(null,  str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(null,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(null,  str);	  Float    f    =    NumberUtils.createFloat(str,    null);    	non-compiled	[CE]  	29	None	replace
87	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric).doubleValue();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric).doubleValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric).doubleValue();	  Number    f    =    NumberUtils.createNumber(numeric).intValue();    	non-compiled	[CE]  	65	None	replace
88	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric).floatValue();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric).floatValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric).floatValue();	  Number    f    =    NumberUtils.createNumber(numeric).intValue();    	non-compiled	[CE]  	65	None	replace
89	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric).longValue();  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric).longValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric).longValue();	  Number    f    =    NumberUtils.createNumber(numeric).intValue();    	non-compiled	[CE]  	65	None	replace
90	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(0);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(0);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(0);	  Integer    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  	37	None	replace
91	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createBigInteger(numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createBigInteger(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createBigInteger(numeric);	  Integer    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  	37	None	replace
92	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  2);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  2);	  Integer    f    =    NumberUtils.createInteger(numeric,    1);    	non-compiled	[CE]  	58	None	replace
93	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  4);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  4);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  4);	  Integer    f    =    NumberUtils.createInteger(numeric,    1);    	non-compiled	[CE]  	58	None	replace
94	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  3);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  3);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  3);	  Integer    f    =    NumberUtils.createInteger(numeric,    1);    	non-compiled	[CE]  	58	None	replace
95	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);	  float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	35	None	replace
96	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);	  float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	35	None	replace
97	[BUG]  [BUGGY]  double  f  =  NumberUtils.createFloat(numeric,  allZeros,  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createFloat(numeric,  allZeros,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	double  f  =  NumberUtils.createFloat(numeric,  allZeros,  str);	  float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	35	None	replace
98	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);	  float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	35	None	replace
99	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  	68	None	replace
100	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(str).intValue();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(str).intValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(str).intValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  	68	None	replace
101	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric).intValue();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric).intValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createFloat(numeric).intValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  	68	None	replace
102	[BUG]  [BUGGY]  double  f  =  NumberUtils.createFloat(numeric).floatValue();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createFloat(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	double  f  =  NumberUtils.createFloat(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  	40	None	replace
103	[BUG]  [BUGGY]  long  f  =  NumberUtils.createFloat(numeric).floatValue();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  long  f  =  NumberUtils.createFloat(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	long  f  =  NumberUtils.createFloat(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  	40	None	replace
104	[BUG]  [BUGGY]  NumberUtils.createBigInteger(numeric);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createBigInteger(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createBigInteger(numeric);	  NumberUtils.createInteger(numeric);    	non-compiled	[CE]  	3	None	replace
105	[BUG]  [BUGGY]  NumberUtils.createBigDecimal(numeric);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createBigDecimal(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createBigDecimal(numeric);	  NumberUtils.createInteger(numeric);    	non-compiled	[CE]  	3	None	replace
106	[BUG]  [BUGGY]  NumberUtils.createInteger(numeric,  str);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createInteger(numeric,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createInteger(numeric,  str);	  NumberUtils.createInteger(numeric);    	non-compiled	[CE]  	3	None	replace
107	[BUG]  [BUGGY]  Null  f  =  NumberUtils.createFloat(numeric);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Null  f  =  NumberUtils.createFloat(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Null  f  =  NumberUtils.createFloat(numeric);	  Null    f    =    NumberUtils.createBigInteger(numeric);    	non-compiled	[CE]  	73	None	replace
108	[BUG]  [BUGGY]  Null  f  =  NumberUtils.createBigDecimal(numeric);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Null  f  =  NumberUtils.createBigDecimal(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Null  f  =  NumberUtils.createBigDecimal(numeric);	  Null    f    =    NumberUtils.createBigInteger(numeric);    	non-compiled	[CE]  	73	None	replace
109	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  mant);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  mant);	  NumberUtils.setLongValue(numeric,    str);    	non-compiled	[CE]  	10	None	replace
110	[BUG]  [BUGGY]  NumberUtils.setLongValue(mant,  str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(mant,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(mant,  str);	  NumberUtils.setLongValue(numeric,    str);    	non-compiled	[CE]  	10	None	replace
111	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  str.length());  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  str.length());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  str.length());	  NumberUtils.setLongValue(numeric,    str);    	non-compiled	[CE]  	10	None	replace
112	[BUG]  [BUGGY]  NumberUtils.setLongValue(str,  numeric);  [CE]  [FE]                            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(str,  numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(str,  numeric);	  NumberUtils.setLongValue(numeric,    str);    	non-compiled	[CE]  	10	None	replace
113	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  mant);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  mant);	  Number    f    =    NumberUtils.createBigDecimal(numeric,    str);    	non-compiled	[CE]  	25	None	replace
114	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  str,  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  str,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  str,  exp);	  Number    f    =    NumberUtils.createBigDecimal(numeric,    str);    	non-compiled	[CE]  	25	None	replace
115	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  str  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  str  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  str  +  1);	  Number    f    =    NumberUtils.createBigDecimal(numeric,    str);    	non-compiled	[CE]  	25	None	replace
116	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  str,  ex);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  str,  ex);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  str,  ex);	  Number    f    =    NumberUtils.createBigDecimal(numeric,    str);    	non-compiled	[CE]  	25	None	replace
117	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  mant);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(numeric,  mant);	  Number    f    =    NumberUtils.createBigInteger(numeric,    str);    	non-compiled	[CE]  	23	None	replace
118	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  str,  exp);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  str,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(numeric,  str,  exp);	  Number    f    =    NumberUtils.createBigInteger(numeric,    str);    	non-compiled	[CE]  	23	None	replace
119	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(mant,  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(mant,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(mant,  str);	  Number    f    =    NumberUtils.createBigInteger(numeric,    str);    	non-compiled	[CE]  	23	None	replace
120	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  str  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  str  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(numeric,  str  +  1);	  Number    f    =    NumberUtils.createBigInteger(numeric,    str);    	non-compiled	[CE]  	23	None	replace
121	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue(),  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue(),  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric.doubleValue(),  str);	  Number    f    =    NumberUtils.createNumber(numeric.doubleValue());    	non-compiled	[CE]  	18	None	replace
122	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  +  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  +  1);	  Number    f    =    NumberUtils.createNumber(numeric.doubleValue());    	non-compiled	[CE]  	18	None	replace
123	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  -  1);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  -  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  -  1);	  Number    f    =    NumberUtils.createNumber(numeric.doubleValue());    	non-compiled	[CE]  	18	None	replace
124	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  /  2);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  /  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric.doubleValue()  /  2);	  Number    f    =    NumberUtils.createNumber(numeric.doubleValue());    	non-compiled	[CE]  	18	None	replace
125	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  0.0F,  str);	  NumberUtils.setLongValue(numeric,    0.0F);    	non-compiled	[CE]  	43	None	replace
126	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  0,  0.0F);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  0,  0.0F);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  0,  0.0F);	  NumberUtils.setLongValue(numeric,    0.0F);    	non-compiled	[CE]  	43	None	replace
127	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  0.0f,  str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  0.0f,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  0.0f,  str);	  NumberUtils.setLongValue(numeric,    0.0F);    	non-compiled	[CE]  	43	None	replace
128	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  -  1)+  1;	  Integer    numeric    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	66	None	replace
129	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  +  1)+  1;	  Integer    numeric    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	66	None	replace
130	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  str).floatValue();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  str).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  str).floatValue();	  Float    f    =    NumberUtils.createFloat(numeric,    str).floatValue();    	non-compiled	[CE]  	41	None	replace
131	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  null).floatValue();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  null).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  null).floatValue();	  Float    f    =    NumberUtils.createFloat(numeric,    str).floatValue();    	non-compiled	[CE]  	41	None	replace
132	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  str).floatValue();  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  str).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(mant,  str).floatValue();	  Float    f    =    NumberUtils.createFloat(numeric,    str).floatValue();    	non-compiled	[CE]  	41	None	replace
133	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createLong(numeric);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createLong(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createLong(numeric);	  Integer    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  	63	None	replace
134	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createDouble(numeric);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createDouble(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createDouble(numeric);	  Integer    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  	63	None	replace
135	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createFloat(numeric);	  Integer    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  	63	None	replace
136	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str).doubleValue();  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str).doubleValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str).doubleValue();	  Float    f    =    NumberUtils.createFloat(numeric).doubleValue();    	non-compiled	[CE]  	55	None	replace
137	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric).doubleValue();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric).doubleValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric).doubleValue();	  Float    f    =    NumberUtils.createFloat(numeric).doubleValue();    	non-compiled	[CE]  	55	None	replace
138	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric,  str  +  1);	  Number    f    =    NumberUtils.createNumber(numeric    +    1);    	non-compiled	[CE]  	48	None	replace
139	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric  +  2);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric  +  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric  +  2);	  Number    f    =    NumberUtils.createNumber(numeric    +    1);    	non-compiled	[CE]  	48	None	replace
140	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  2);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(numeric,  2);	  Number    f    =    NumberUtils.createBigInteger(numeric,    1);    	non-compiled	[CE]  	54	None	replace
141	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  1);	  Number    f    =    NumberUtils.createBigInteger(numeric,    1);    	non-compiled	[CE]  	54	None	replace
142	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  3);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  3);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(numeric,  3);	  Number    f    =    NumberUtils.createBigInteger(numeric,    1);    	non-compiled	[CE]  	54	None	replace
143	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  str);	  Float    f    =    NumberUtils.createFloat(str,    numeric);    	non-compiled	[CE]  	30	None	replace
144	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(str);	  Number    f    =    NumberUtils.createBigInteger(str);    	non-compiled	[CE]  	24	None	replace
145	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  10.0);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  10.0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric  +  10.0);	  Float    f    =    NumberUtils.createFloat(numeric    +    1L);    	non-compiled	[CE]  	5	None	replace
146	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  1L,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  1L,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric  +  1L,  str);	  Float    f    =    NumberUtils.createFloat(numeric    +    1L);    	non-compiled	[CE]  	5	None	replace
147	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  mant);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  mant);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  	13	None	replace
148	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue(),  numeric);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue(),  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str.floatValue(),  numeric);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  	13	None	replace
149	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant.floatValue(),  str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(mant.floatValue(),  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(mant.floatValue(),  str);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  	13	None	replace
150	[BUG]  [BUGGY]  NumberUtils.createNumber(str,  dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(str,  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(str,  dec);	  NumberUtils.createNumber(numeric,    dec);    	non-compiled	[CE]  	72	None	replace
151	[BUG]  [BUGGY]  NumberUtils.createInteger(numeric,  dec);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createInteger(numeric,  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createInteger(numeric,  dec);	  NumberUtils.createNumber(numeric,    dec);    	non-compiled	[CE]  	72	None	replace
152	[BUG]  [BUGGY]  NumberUtils.createNumber(dec,  numeric);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(dec,  numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(dec,  numeric);	  NumberUtils.createNumber(numeric,    dec);    	non-compiled	[CE]  	72	None	replace
153	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  dec);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigInteger(numeric,  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigInteger(numeric,  dec);	  Number    f    =    NumberUtils.createBigDecimal(numeric,    dec);    	non-compiled	[CE]  	62	None	replace
154	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  exp);	  Number    f    =    NumberUtils.createBigDecimal(numeric,    dec);    	non-compiled	[CE]  	62	None	replace
155	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  string);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  string);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  string);	  Number    f    =    NumberUtils.createBigDecimal(numeric,    dec);    	non-compiled	[CE]  	62	None	replace
156	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  str);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  	44	None	replace
157	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  0,  allZeros);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  0,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  0,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  	44	None	replace
158	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  numeric);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  	44	None	replace
159	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  0,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  0,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric,  0,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  	44	None	replace
160	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1));  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	String  numeric  =  str.substring(0,  str.length()  -  1));	  String    numeric    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	52	None	replace
161	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  2));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  2));  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	String  numeric  =  str.substring(0,  str.length()  -  2));	  String    numeric    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	52	None	replace
162	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  dec);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  dec);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  dec);	  Float    f    =    NumberUtils.createFloat(numeric,    dec);    	non-compiled	[CE]  	60	None	replace
163	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(dec,  numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(dec,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(dec,  numeric);	  Float    f    =    NumberUtils.createFloat(numeric,    dec);    	non-compiled	[CE]  	60	None	replace
164	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str).floatValue();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric,  str).floatValue();	  Float    f    =    NumberUtils.createFloat(numeric,    str).floatValue();    	non-compiled	[CE]  	41	None	replace
165	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  mant,  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  mant,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric,  mant,  str);	  float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	35	None	replace
166	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str,  allZeros,  NUMBER_ZERO);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(str,  allZeros,  NUMBER_ZERO);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(str,  allZeros,  NUMBER_ZERO);	  float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  	35	None	replace
167	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createBigDecimal(numeric);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createBigDecimal(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createBigDecimal(numeric);	  Integer    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  	37	None	replace
168	[BUG]  [BUGGY]  NumberUtils.createNumber(str,  null);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(str,  null);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(str,  null);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  	1	None	replace
169	[BUG]  [BUGGY]  Float  f  =  numberUtils.createFloat(numeric,  allZeros);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  numberUtils.createFloat(numeric,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  numberUtils.createFloat(numeric,  allZeros);	  Float    f    =    NumberUtils.createFloat(str,    allZeros);    	non-compiled	[CE]  	33	None	replace
170	[BUG]  [BUGGY]  Numeric  f  =  NumberUtils.createNumber(numeric,  str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Numeric  f  =  NumberUtils.createNumber(numeric,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Numeric  f  =  NumberUtils.createNumber(numeric,  str);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  	47	None	replace
171	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  16);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  16);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  16);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  	38	None	replace
172	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  4);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  4);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  4);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  	38	None	replace
173	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  exp);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str,  exp);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    exp);    	non-compiled	[CE]  	61	None	replace
174	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  exp);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  exp);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  exp);	  Float    f    =    NumberUtils.createFloat(numeric,    dec);    	non-compiled	[CE]  	60	None	replace
175	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  3);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  3);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	String  numeric  =  str.substring(0,  str.length()  -  3);	  String    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  	7	None	replace
176	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  /  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  /  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue()  /  1);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue()    -    1);    	non-compiled	[CE]  	56	None	replace
177	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  string);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  string);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  string);	  Integer    f    =    NumberUtils.createInteger(numeric,    str);    	non-compiled	[CE]  	36	None	replace
178	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFlattened(numeric);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createFlattened(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createFlattened(numeric);	  Number    f    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  	17	None	replace
179	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  0.0F);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  0.0F);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  0.0F,  0.0F);	  NumberUtils.setLongValue(numeric,    0.0F);    	non-compiled	[CE]  	43	None	replace
180	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  0.0001);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  0.0001);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  0.0F,  0.0001);	  NumberUtils.setLongValue(numeric,    0.0F);    	non-compiled	[CE]  	43	None	replace
181	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  1.0);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  1.0);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  0.0F,  1.0);	  NumberUtils.setLongValue(numeric,    0.0F);    	non-compiled	[CE]  	43	None	replace
182	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  0.5);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  0.5);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  0.0F,  0.5);	  NumberUtils.setLongValue(numeric,    0.0F);    	non-compiled	[CE]  	43	None	replace
183	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  string);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  string);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  string);	  Float    f    =    NumberUtils.createFloat(numeric,    mant);    	non-compiled	[CE]  	42	None	replace
184	[BUG]  [BUGGY]  NullUtils.createNumber(numeric,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NullUtils.createNumber(numeric,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NullUtils.createNumber(numeric,  str);	  NumberUtils.createNumber(numeric,    dec);    	non-compiled	[CE]  	72	None	replace
185	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  str  +  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  str  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  str  +  1);	  NumberUtils.setLongValue(numeric,    str);    	non-compiled	[CE]  	10	None	replace
186	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length())+  2;  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length())+  2;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length())+  2;	  Integer    numeric    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	66	None	replace
187	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str).doubleValue();  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str).doubleValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str).doubleValue();	  Float    f    =    NumberUtils.createFloat(numeric).doubleValue();    	non-compiled	[CE]  	55	None	replace
188	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).floatValue();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).floatValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric).floatValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  	68	None	replace
189	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  -  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  -  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  -  1);	  Float    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  	15	None	replace
190	[BUG]  [BUGGY]  float  f  =  NumberUtils.createInteger(numeric).floatValue();  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createInteger(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createInteger(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  	40	None	replace
191	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  mant  +  1);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  	31	None	replace
192	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  3);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  3);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str  +  3);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
193	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant,  str);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  mant,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
194	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0f,  allZeros);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0f,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.0f,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    0.0f);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
195	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0.0F);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0.0F);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0.0F);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    0.0f);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
196	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createInteger(numeric,  1);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  	22	None	replace
197	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  dec);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  dec);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str,  dec);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    dec);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
198	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0,  dec);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0,  dec);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  0,  dec);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    dec);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
199	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  null);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  null);	  Float    f    =    NumberUtils.createFloat(str,    null);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
200	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.0F);	  Float    f    =    NumberUtils.createFloat(numeric,    FLOAT_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
201	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  4);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  4);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  4);	  Float    f    =    NumberUtils.createFloat(numeric,    FLOAT_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
202	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  1);	  Float    f    =    NumberUtils.createFloat(numeric,    FLOAT_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
203	[BUG]  [BUGGY]  NullUtils.createNumber(numeric);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NullUtils.createNumber(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NullUtils.createNumber(numeric);	  NumberUtils.createNumber(mant);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
204	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.longValue());  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.longValue());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric.longValue());	  Number    f    =    NumberUtils.createNumber(numeric.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
205	[BUG]  [BUGGY]  NumberUtils.setIntValue(numeric.intValue());  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setIntValue(numeric.intValue());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setIntValue(numeric.intValue());	  NumberUtils.setIntValue(numeric);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
206	[BUG]  [BUGGY]  NumberUtils.setIntValue(numeric.doubleValue());  [CE]  illegal  start  of  expression  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setIntValue(numeric.doubleValue());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setIntValue(numeric.doubleValue());	  NumberUtils.setIntValue(numeric);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
207	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  3);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  3);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  -  3);	  Integer    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
208	[BUG]  [BUGGY]  Null  f  =  NumberUtils.createBigInteger(0);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Null  f  =  NumberUtils.createBigInteger(0);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Null  f  =  NumberUtils.createBigInteger(0);	  Null    f    =    NumberUtils.createBigInteger(numeric);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
209	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  null);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  null);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
210	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  numberCount);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  numberCount);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  numberCount);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
211	[BUG]  [BUGGY]  NumberUtils.setIntValue(numeric.toString());  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setIntValue(numeric.toString());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setIntValue(numeric.toString());	  NumberUtils.setIntValue(numeric);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
212	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  null);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createFloat(numeric,  null);	  Float    f    =    NumberUtils.createFloat(str,    null);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
213	[BUG]  [BUGGY]  NumberUtils.setIntegerValue(numeric);  [CE]  illegal  start  of  expression  [FE]                        NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setIntegerValue(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setIntegerValue(numeric);	  NumberUtils.setLongValue(str);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
214	[BUG]  [BUGGY]  Null  f  =  NumberUtils.createNumber(numeric);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Null  f  =  NumberUtils.createNumber(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Null  f  =  NumberUtils.createNumber(numeric);	  Number    f    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
215	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createNumber(numeric);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createNumber(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createNumber(numeric);	  Number    f    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
216	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  string,  dec);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  string,  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric,  string,  dec);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
217	[BUG]  [BUGGY]  String  numeric  =  str.substring(1,  str.length())+  1;  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  String  numeric  =  str.substring(1,  str.length())+  1;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	String  numeric  =  str.substring(1,  str.length())+  1;	  String    numeric    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
218	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  dec);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  dec);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
219	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  dec);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createInteger(numeric,  dec);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
220	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue(),  4);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue(),  4);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric.doubleValue(),  4);	  Number    f    =    NumberUtils.createNumber(numeric.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
221	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  str);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createFloat(numeric,  str);	  Float    f    =    NumberUtils.createFloat(str,    numeric);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
222	[BUG]  [BUGGY]  NumberUtils.createNumber(numeric,  exp);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(numeric,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(numeric,  exp);	  NumberUtils.createNumber(numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
223	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  allZeros);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createFloat(numeric,  allZeros);	  Float    f    =    NumberUtils.createFloat(str,    allZeros);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
224	[BUG]  [BUGGY]  int  f  =  NumberUtils.createFloat(numeric).floatValue();  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  int  f  =  NumberUtils.createFloat(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	int  f  =  NumberUtils.createFloat(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
225	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros,  dec);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros,  dec);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros,  dec);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    dec);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
226	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  *  3);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  *  3);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric  *  3);	  Float    f    =    NumberUtils.createFloat(numeric    +    3);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
227	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).longValue();  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).longValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric).longValue();	  Number    f    =    NumberUtils.createBigDecimal(numeric).intValue();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
228	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  allZeros);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  allZeros);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  allZeros);	  Number    f    =    NumberUtils.createBigDecimal(numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
229	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  dec);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  dec);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  dec);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
230	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  desc);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  desc);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  desc);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
231	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric.longValue(),  20);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric.longValue(),  20);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric.longValue(),  20);	  NumberUtils.setLongValue(numeric.longValue());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
232	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  dec);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createNumber(numeric,  dec);	  Number    f    =    NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
233	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  1,  dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  1,  dec);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  str  +  1,  dec);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  	31	None	replace
234	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue(),  dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue(),  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Number  f  =  NumberUtils.createBigDecimal(numeric.doubleValue(),  dec);	  Number    f    =    NumberUtils.createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  	26	None	replace
235	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.lastIndexOf('.'))  +  1;  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.lastIndexOf('.'))  +  1;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.lastIndexOf('.'))  +  1;	  Integer    numeric    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
236	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(1,  str.length())+  1;  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(1,  str.length())+  1;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(1,  str.length())+  1;	  Integer    numeric    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
237	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  dec).floatValue();  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  dec).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  dec).floatValue();	  Float    f    =    NumberUtils.createFloat(numeric,    str).floatValue();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
238	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  0.0F).floatValue();  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  0.0F).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(str,  0.0F).floatValue();	  Float    f    =    NumberUtils.createFloat(numeric,    str).floatValue();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
239	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1,  allZeros);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  1,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
240	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  0);	  Float    f    =    NumberUtils.createFloat(numeric,    FLOAT_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
241	[BUG]  [BUGGY]  NumberUtils.createNumber(numeric,  str,  dec);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(numeric,  str,  dec);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.createNumber(numeric,  str,  dec);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
242	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  exp);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric,  0.0F,  exp);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	NumberUtils.setLongValue(numeric,  0.0F,  exp);	  NumberUtils.setLongValue(numeric,    0.0F);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
243	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  DEC);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  DEC);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  f  =  NumberUtils.createInteger(numeric,  DEC);	  Integer    f    =    NumberUtils.createInteger(numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
244	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  1,  str.length());  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Integer  numeric  =  str.substring(0,  str.length()  -  1,  str.length());	  Integer    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
245	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  dec,  0.0f);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  dec,  0.0f);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  dec,  0.0f);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    0.0f);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
246	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  1.0f);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  1.0f);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  1.0f);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    0.0f);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
247	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str,  0);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str,  0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	float  f  =  NumberUtils.createFloat(numeric,  str,  0);	  float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
248	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  exp,  dec);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  exp,  dec);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	518	518	2	replace	Float  f  =  NumberUtils.createFloat(numeric,  exp,  dec);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    exp);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
