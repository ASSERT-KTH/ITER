bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exception: ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: "  +  str);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: "  +  str);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: "  +  str);	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: ");  [CE]  illegal  start  of  expression  [FE]              NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: ");  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  error: ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  return  createInteger(str.substring(0,  str.length()));  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createInteger(str.substring(0,  str.length()));  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createInteger(str.substring(0,  str.length()));	  return    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  return  createNumber(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNumber(str.substring(0,  str.length()  -  1));  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNumber(str.substring(0,  str.length()  -  1));	  return    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  return  createInteger(str.substring(0,  str.length()  -  1),  decPos);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createInteger(str.substring(0,  str.length()  -  1),  decPos);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createInteger(str.substring(0,  str.length()  -  1),  decPos);	  return    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  return  createInt(str);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createInt(str);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createInt(str);	  return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  return  createLong(str.length());  [CE]  illegal  start  of  expression  [FE]                NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createLong(str.length());  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createLong(str.length());	  return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  *  1);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  *  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  return  createNumber(mant);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNumber(mant);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNumber(mant);	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  return  createNumber(str,  decPos);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNumber(str,  decPos);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNumber(str,  decPos);	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1));  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  str.length()  -  1));	      NumberFormatException    e    =    null;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  NumberFormatException  e  =  nfe;  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  nfe;  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  nfe;	      NumberFormatException    e    =    null;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	8	None	replace
17	[BUG]  [BUGGY]  return  createNull(str,  exp);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNull(str,  exp);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNull(str,  exp);	  return    createNull(str);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  return  createBigDecimal(str);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createBigDecimal(str);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createBigDecimal(str);	  return    createBigInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  Integer  str  =  getInteger(0);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  getInteger(0);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  getInteger(0);	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  Integer  str  =  getInteger(mant);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  getInteger(mant);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  getInteger(mant);	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  Integer  str  =  getInteger(1);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  getInteger(1);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  getInteger(1);	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  1);	      String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  2);	      String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  ||  str.startsWith( "-0 "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  ||  str.startsWith( "-0 "))  {  return  null;  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	||  str.startsWith( "-0 "))  {  return  null;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  ||  str.startsWith( "-0x "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  ||  str.startsWith( "-0x "))  {  return  null;  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	||  str.startsWith( "-0x "))  {  return  null;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  null;  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  null;  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  -  1);  return  null;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  createInteger(mant);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  createInteger(mant);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length());  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  createInteger(str.length());  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  createInteger(str.length());	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  createInteger(0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  return  createNumber(str,  0);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNumber(str,  0);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNumber(str,  0);	  return    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  return  createInteger(str,  1);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createInteger(str,  1);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createInteger(str,  1);	  return    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  return  createBigInteger(str,  0);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createBigInteger(str,  0);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createBigInteger(str,  0);	  return    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  return  createNull(str,  0);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNull(str,  0);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNull(str,  0);	  return    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException(str);	      NumberFormatException    e    =    null;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length());  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  getInteger(str.length());  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  getInteger(str.length());	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  return  createBigInteger(str.length());  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createBigInteger(str.length());  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createBigInteger(str.length());	  return    createBigInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  -  1  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  3);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  3);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()  -  3);	      String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  return  createNull(mant);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNull(mant);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNull(mant);	  return    createNull(str);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()));	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	8	None	replace
43	[BUG]  [BUGGY]  return  null;  [CE]  illegal  start  of  expression  [FE]                NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  null;  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  null;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1));  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  new  Number(str.substring(0,  str.length()  -  1));	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  return  NumberUtils.createNumber(str);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  NumberUtils.createNumber(str);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  NumberUtils.createNumber(str);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ");  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( ", ");  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException( ", ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ",  str);  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException( " ",  str);	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");  [CE]  illegal  start  of  expression  [FE]              NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  exceptions: ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  return  createBigInteger(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createBigInteger(str.substring(0,  str.length()  -  1));  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createBigInteger(str.substring(0,  str.length()  -  1));	  return    createBigInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1,  str.length());  [CE]  illegal  start  of  expression  [FE]              NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1,  str.length());  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length()  +  1,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "The  number   ");  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "The  number   ");  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException( "The  number   ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  not  supported. ");  [CE]  illegal  start  of  expression  [FE]            NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( "Number  format  not  supported. ");  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	NumberFormatException  e  =  new  NumberFormatException( "Number  format  not  supported. ");	      NumberFormatException    e    =    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
53	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  return  null;  [CE]  illegal  start  of  expression  [FE]                NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  return  null;  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  exp  =  str.substring(0,  str.length()  -  1);  return  null;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-0x "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-0x "))  {  return  null;  }  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	if(str.startsWith( "0x ")||  str.startsWith( "-0x "))  {  return  null;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  return  null;  }  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	if(str.startsWith( "- ")||  str.startsWith( "- "))  {  return  null;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  exp  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	Integer  str  =  getInteger(str.substring(0,  str.length()  -  1));	      Integer    str    =    getInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  return  createNull();  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNull();  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNull();	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  return  createNumber(str,  dec);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createNumber(str,  dec);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNumber(str,  dec);	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  return  createInteger(str.substring(0,  str.length()  -  1),  dec);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  return  createInteger(str.substring(0,  str.length()  -  1),  dec);  [BUGGY]    }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createInteger(str.substring(0,  str.length()  -  1),  dec);	  return    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
61	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [CE]  illegal  start  of  expression  [FE]        NumberFormatException    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {      return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	String  str  =  str.substring(0,  str.length())+  1;	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
