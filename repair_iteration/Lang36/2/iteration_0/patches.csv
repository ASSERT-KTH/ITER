bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createNumber(str);  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]  return  createNumber(str);  [BUGGY]  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNumber(str);	return  createInteger(str);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  illegal  start  of  expression  [FE]      NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]  return  createBigInteger(str);  [BUGGY]  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createBigInteger(str);	return  createInteger(str);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  return  createNull(str);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]  return  createNull(str);  [BUGGY]  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createNull(str);	return  createInteger(str);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  return  createLong(str);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]  return  createLong(str);  [BUGGY]  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createLong(str);	return  createInteger(str);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]    [BUGGY]  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	  	return  createInteger(str);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	    String  str  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  illegal  start  of  expression	4	None	add
7	[BUG]  [BUGGY]    Integer  str  =  createInteger(str);  [CE]  illegal  start  of  expression  [FE]      NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]    Integer  str  =  createInteger(str);  [BUGGY]  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	    Integer  str  =  createInteger(str);		non-compiled	[CE]  illegal  start  of  expression	4	None	add
8	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	    String  str  =  str.substring(0,  str.length()  -  2);		non-compiled	[CE]  illegal  start  of  expression	4	None	add
9	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1,  str.length());  [CE]  illegal  start  of  expression  [FE]          NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	    String  str  =  str.substring(0,  str.length()  -  1,  str.length());		non-compiled	[CE]  illegal  start  of  expression	4	None	add
10	[BUG]  [BUGGY]  return  createInteger(str,  0);  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]  return  createInteger(str,  0);  [BUGGY]  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createInteger(str,  0);	return  createInteger(str);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]    NumberFormatException  e  =  null;  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]    NumberFormatException  e  =  null;  [BUGGY]  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	    NumberFormatException  e  =  null;		non-compiled	[CE]  illegal  start  of  expression	4	None	add
12	[BUG]  [BUGGY]    NumberFormatException  e  =  new  NumberFormatException( " ");  [CE]  illegal  start  of  expression  [FE]      NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]    NumberFormatException  e  =  new  NumberFormatException( " ");  [BUGGY]  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	    NumberFormatException  e  =  new  NumberFormatException( " ");		non-compiled	[CE]  illegal  start  of  expression	4	None	add
13	[BUG]  [BUGGY]    Integer  str  =  getInteger(str);  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]    Integer  str  =  getInteger(str);  [BUGGY]  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	    Integer  str  =  getInteger(str);		non-compiled	[CE]  illegal  start  of  expression	4	None	add
14	[BUG]  [BUGGY]  return  createInteger(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x "))  {  [BUGGY]  return  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	463	463	2	replace	return  createInteger(str.substring(0,  str.length()  -  1));	return  createInteger(str);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
