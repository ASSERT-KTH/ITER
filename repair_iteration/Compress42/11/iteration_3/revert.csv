projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetName().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawType().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{returnexternalAttributes.hashCode();}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}else{returnexternalAttributes.hashCode();}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExternalAttributes().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryType().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntrySize().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(extra<0?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue()!=null?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetBase().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes!=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes==null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes>=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+src.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes!=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes==null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes>=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnsrc.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImpl().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnb.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnrawName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(extra,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnzipExtraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extra.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.name.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetKey().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetString().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+b.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*16+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*2+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetUpperBit().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntry().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes!=null)?0:getRawClass().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes==null)?0:getRawClass().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawType().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawType().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawType().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()/this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.externalAttributes!=null)?0:getExtra().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExternalAttributes().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes==null?1:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes==null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*(internalAttributes==null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes!=null?1:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(this.extra.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extra.hashCode()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extra.hashCode()*2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extra.hashCode())+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extern.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extra.hashCode(),internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryType().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryType().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredEntryType().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetField().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag().hashCode()==0)?getFlag().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag().hashCode()!=0)?getFlag().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag().hashCode()>=0)?getFlag().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag().hashCode()==0)?0:getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag().hashCode()>=3)?getFlag().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag().hashCode()==0)?getFlag().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes.hashCode()*16+getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getClass().hashCode()*16+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*4+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/16+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*17+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetLowerBit().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetUpperBit().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetUpperBit().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetOwnerBit().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImplicitEntry().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImplicitReturn().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()*this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()/this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes!=null)?0:getValue().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes==null)?0:getValue().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetKey().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692intinternalAttributes=newLong(internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692longexternalAttributes=newLong(internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692InternalAttributes<Long>internalAttributes=newLong(internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692IntegerinternalAttributes=newInteger(internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}else{returnexternalAttributes.hashCode();}}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()*this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()/this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.sourceName!=null)?0:getFlag().hashCode()+this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()-this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSourceName().hashCode()+this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692intinternalAttributes=newLong(interinternalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692intinternalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692this.internalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692longinternalAttributes=newLong(interinternalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692IntegerinternalAttributes=newInteger(interinternalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*4+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()+src.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()+src.getValue();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getRawClass().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getRawClass().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes.hashCode()*2+getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/2+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getClass().hashCode()*2+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getClass().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExternalAttributes().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExternalAttributes().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExternalAttributes().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetInternalAttributes().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEmptyAttributes().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExternalAttributes().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()*this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()/this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes!=null)?0:getRequired().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()-this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()+src.getValue();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()+src.getSize();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*(internalAttributes!=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/(internalAttributes!=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue()==null?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetKey()!=null?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue()!=null?1:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue()>=null?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.getValue()!=null?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawRequired().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.rawName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnrawName!=null?0:rawName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnrawName==null?0:rawName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnrawName.hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnrawName.hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.getRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName().hashCode()+2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngotRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawSize().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()/this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()-this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.extra.hashCode()+getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.extra.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntrySize().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntrySize().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryLength().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryNumber().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()/this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.extra.hashCode()+getExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()-this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.extra!=null)?0:getExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*src.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+src.getInternalAttributes().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()/src.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+src.getExtraFields().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+src.getName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+src.getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getClass().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()-this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(this.internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(this.externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extraAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes!=null){returnArrays.asList(externalAttributes);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(this.extraAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(externalAttributes,size);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.interface.hashCode()+getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interface!=null)?0:getClass().hashCode()+this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()-this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes==null?1:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes==null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*(internalAttributes==null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/(internalAttributes==null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null)?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue().hashCode()==0)?getValue().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue().hashCode()<=0)?getValue().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue().hashCode()<2)?getValue().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue().hashCode()<=0)?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue().hashCode()<2)?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.interval.hashCode()+getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interval!=null)?0:getRawClass().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()-this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(this.internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(extraAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(externalAttributes,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(this.externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(externalAttributes,size);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?0:getRawClass().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?0:getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?0:getRawClass().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692this.internalAttributes=newLong(internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()/this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getExtra().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getExtra().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()-this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes!=null)?0:getClass().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes==null)?0:getClass().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()-this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.getRequired().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()/1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRange().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*4+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()/this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getRaw().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()-this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.internalAttributes.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.extraExtraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.zipExtraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.accessExtraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.allExtraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.extraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnnoExtraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.name!=null)?0:this.name.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.name!=null?this.name.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.name!=null)?this.name.hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.name.hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.name.hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntry().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntry().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntry().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCurrentEntry().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntry().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes!=null?1:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*(internalAttributes!=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/(internalAttributes!=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSize().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetKey().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*src.getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()/src.getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getEntryType().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getSimpleName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImpl().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImpl().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImpl().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImpl().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImpl().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnb.hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnb.hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnb.hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnb.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.entryName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()/1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()/4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()*4+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawValue().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawValue().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawValue().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetColumnValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawValue().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes!=null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()*this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()/this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()-this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.extra.hashCode()+getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEmpty().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.getExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCurrentExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.interface.hashCode()+getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interface!=null)?0:getRawClass().hashCode()+this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()-this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()==null)?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null)?getValue().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null?getValue().hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null)?0:getValue().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()*this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()/this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getFlag().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getFlag().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()*this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()/this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getValue().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getValue().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetKey().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(externalAttributes<0?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(externalAttributes<0?0:extra.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()/(extra<0?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(extra<0?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(extra==0?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes!=null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(internalAttributes,extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(this.extra,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(externalAttributes,extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(extra,this.internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(allExtraFieldsNoCopy,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(allExtraFieldsNoCopy,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()*this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()/this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:getRequired().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()-this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes==null?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes!=null?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()==0)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()>=0)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()!=0)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()<2)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()<2)?0:getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()>=4)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?getRawClass().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?getRawClass().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?0:getRawClass().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?0H:getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?0hashCode():getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass().hashCode()<2)?getRawClass().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass().hashCode()<2)?0:getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass().hashCode()<2)?getRawClass().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass().hashCode()<2)?getRawClass().hashCode():2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass().hashCode()<2)?this:getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetPartial().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()/this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interval!=null)?0:getRaw().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.interval.hashCode()+getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.interval.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()-this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*b.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()/b.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+b.length*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+b.length+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()-b.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.b.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()/(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes==null?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredExtra().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredExtra().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredExtra().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetBase().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetBase().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnsrc.hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnsrc.hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnsrc.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.src.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnsrc.hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFieldsNoCopy().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredExtraFields().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFields().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?0:this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?this.internalAttributes.hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes!=null?0:this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?this.internalAttributes.hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()*this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()/this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.extra.hashCode()+getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()-this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetKey().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.extra!=null)?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawArchiveEntry().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()/1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.interface.hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawEntryName().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawEntryType().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawEntryName().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()*this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()/this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.extraAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParent().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParent().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParent().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw()!=null)?0:getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw()==null)?0:getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw()!=null)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw()==null)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw()!=null)?-1:getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw()!=null)?1:getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetString().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+(this.extra!=null?this.extra.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.extra==null)?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+EMPTY.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetString().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(externalAttributes,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(extra,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(this.internalAttributes!=null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interval==null)?0:getRaw().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEnum().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getRequired().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.internalAttributes.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()<2)?this:getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()<2)?-1:getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.extraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.extraAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getExtra()!=null)?0:getExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getExtra()!=null)?EMPTY:getExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getExtra()!=null)?getExtra().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getExtra()!=null)?-1:getExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getExtra()!=null)?0H:getExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.extraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnrawName!=null?-1:rawName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extraFields);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(externalAttributes,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newlong(internalAttributes.hashCode());}else{returnexternalAttributes.hashCode();}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*8;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(this.internalAttributes!=null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+(b!=null?0:b.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+(b==null?0:b.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+EMPTY.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnb!=null?0:b.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extra.hashCode(),externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extra.hashCode(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(this.internalAttributes!=null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()+src.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()*8;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()*3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interface==null)?0:getRawClass().hashCode()+this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.interface.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()!=null)?0:getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()==null)?0:getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()!=null)?-1:getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()!=null?0:getEntryName().hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()!=null)?getEntryName().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnsrc.hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue()!=null?0:getValue().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()==null?0:getValue().hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null?0:getValue().hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null)?-1:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null?0:getValue().hashCode())+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+(this.extra!=null?this.extra.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+EMPTY.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returncpy.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return_extraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryMade().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*32+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*8+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParent()!=null?0:getImmediateParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParent().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateInternal().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateEntry().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getExtra()!=null)?0:getExtra().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*2+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returninternalAttributes.hashCode()+(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getRaw().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.internalAttributes.hashCode()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*8;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()+src.stringValue();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExternalAttributes().hashCode()+internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+(this.internalAttributes!=null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawType()!=null?0:getRawType().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(this.extra!=null?this.extra.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.extra.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()&&this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()+(extra<0?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes!=null){internalAttributes=newLong(interinternalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes==null){internalAttributes=newLong(interinternalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImplSize().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImpl().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes==null)?0:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes!=null)?0:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParentBit().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParentPurpose().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent()!=null?0:getRawParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent()==null?0:getRawParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes==null)?0:getRequired().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes==null)?0:getRequired().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()!=null)?0:getRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()==null)?0:getRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()!=null)?-1:getRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()!=null)?getRawName().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()!=null)?1:getRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()!=null)?0H:getRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getElementName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getEntryLength().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()==null)?0:getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?-1:getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?1:getRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes!=null?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?0:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?getClass().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?-1:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?1:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?0H:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?0x7FF:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(this.intermediateAttributes!=null?this.intermediateAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawValue().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()!=null)?getRawName().hashCode():2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()!=null)?getRawName().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()!=null)?getRawName().hashCode():4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+(this.intermediateAttributes!=null?this.intermediateAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+src.getExternalAttributes().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+src.getParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes==null?0:this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes.hashCode()+(this.internalAttributes!=null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes.hashCode()+(this.internalAttributes==null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+EMPTY.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw()==null)?-1:getRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()!=null)?getRawClass().hashCode():2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*3+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()!=null)?0:getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()!=null?0:getFlag().hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()!=null)?-1:getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()!=null)?getFlag().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()!=null?0:getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()!=null)?1:getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParentPointer().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interval==null)?0:getRawClass().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(this.interval!=null?this.interval.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.interval.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()==null)?0:getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()==null)?-1:getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(extra,internalAttributes,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interface==null)?0:getClass().hashCode()+this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(this.interface!=null?this.interface.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interface==null)?0:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()+this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null)?1:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null)?0H:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.name==null)?0:this.name.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(externalAttributes==0?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(extra<0?1:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName().hashCode()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+b.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692InternalAttributesinternalAttributes=newLong(internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692longinternalAttributes=newLong(internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getSrc()!=null)?getSrc().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()+src.getLength();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode()+src.getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()<=0)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw().hashCode()>=3)?getRaw().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?getFlag().hashCode():this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue().hashCode()>=0)?getValue().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue().hashCode()>=3)?getValue().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getExtra()!=null)?getExtra().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getExtra()!=null)?getExtra().hashCode()+1:0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.name.hashCode()+(this.internalAttributes==null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.name.hashCode()+(this.internalAttributes!=null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.name.hashCode()+(this.internalAttributes>=null?this.internalAttributes.hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRequired()==null)?0:getRequired().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRequired()!=null)?0:getRequired().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRequired()!=null)?getRequired().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRequired().hashCode()>=0)?getRequired().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRequired().hashCode()<=0)?0:getRequired().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRequired().hashCode()==0)?getRequired().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?getExtra().hashCode():this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.internalAttributes.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.internalAttributes.hashCode()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(allExtraFieldsNoCopy,extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetPurposeBit().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(externalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{externAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.internalAttributes.hashCode()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.extra==null)?getExtra().hashCode():this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.extra==null)?getExtra().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.intermediateAttributes.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawClass()==null)?getRawClass().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getEntryName().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+zipExtraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?getClass().hashCode():this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?getClass().hashCode():this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getClass()!=null)?getClass().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes!=null)?getValue().hashCode():this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes==null)?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.internalAttributes.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()==null)?getFlag().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag()==null)?1:getFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+this.extraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interval==null)?getRawClass().hashCode():this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.interface.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()==null)?getEntryName().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()!=null)?getEntryName().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRaw()!=null)?getRaw().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.sourceName!=null)?getFlag().hashCode():this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartialSize().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes!=null)?getRawClass().hashCode():this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.intermediateAttributes==null)?getRawClass().hashCode():this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getClass().hashCode()*2+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(externalAttributes).hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryCount().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getClass().hashCode()*16+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{externAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(externalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode()+src.getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediatePrettyPrinter().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes!=null?this.internalAttributes.hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes!=null?this.internalAttributes.hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes!=null?this.internalAttributes.hashCode():SHORT_SHIFT;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692intinternalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()!=null)?getEntryName().hashCode():2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag().hashCode()<2)?getFlag().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getFlag().hashCode()>=2)?getFlag().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()!=null?getEntryName().hashCode():0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getEntryName()==null)?-1:getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(this.extraFields.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(other.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode()+src.getLength();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()==null)?getValue().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getValue()!=null)?getValue().hashCode():1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.externalAttributes.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*2+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.extra.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.extraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.extra.hashCode()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interface==null)?getRawClass().hashCode():this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.interface!=null)?getRawClass().hashCode():this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(this.extraAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(extraFields);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?getValue().hashCode():this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode()+src.getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.intermediateAttributes.hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(getRawName()==null)?getRawName().hashCode():0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{returnexternAttributes.hashCode();}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes>=null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes!=null)?getRawClass().hashCode():this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692return(this.internalAttributes==null)?getRawClass().hashCode():this.internalAttributes.hashCode();
