projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetName().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawType().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawName().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{returnexternalAttributes.hashCode();}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes==null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());externalAttributes=newLong(interinternalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}else{returnexternalAttributes.hashCode();}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692if(internalAttributes!=null){internalAttributes=newLong(internalAttributes.hashCode());}else{externalAttributes=newLong(internalAttributes.hashCode());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetFlag().hashCode()+this.sourceName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExternalAttributes().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImmediateExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequiredExtra().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.extra.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryType().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntrySize().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.interface.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.intermediateAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+this.interval.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtraFields().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+(extra<0?0:externalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetValue()!=null?0:getValue().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawParent().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetSrc().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetBase().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes!=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes==null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+(internalAttributes>=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+src.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRequired().hashCode()+this.externalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes!=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes==null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes>=null?1:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()+(internalAttributes<null?0:internalAttributes.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnsrc.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetImpl().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnb.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnrawName.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.hashCode(extra,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnzipExtraFields.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(extra.hashCode());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnArrays.asList(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returnthis.name.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetKey().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawInternal().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawClass().hashCode()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetCrc().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetString().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRawPartial().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetRaw().hashCode()+b.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*16+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*2+this.internalAttributes.hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetClass().hashCode()*3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetExtra().hashCode()+src.getEntryName().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetUpperBit().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntry().hashCode();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java692returngetEntryName().hashCode()-1;
