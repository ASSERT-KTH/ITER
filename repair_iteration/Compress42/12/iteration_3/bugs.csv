bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  addExtraField(extraFields,  getExtraField(f.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  getExtraField(f.getHeaderId()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  getExtraField(f.getHeaderId()));	  addExtraField(element,    getExtraField(f.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
2	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f.getName()));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f.getName()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f.getName()));	  addExtraField(element,    getExtraField(f.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
3	[BUG]  [BUGGY]  addExtraField(externalAttributes,  getExtraField(f.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  getExtraField(f.getHeaderId()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  getExtraField(f.getHeaderId()));	  addExtraField(element,    getExtraField(f.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
4	[BUG]  [BUGGY]  addExtraField(f,  getExtraField(element.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  getExtraField(element.getHeaderId()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  getExtraField(element.getHeaderId()));	  addExtraField(element,    getExtraField(f.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
5	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f.getHeaderId()),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f.getHeaderId()),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f.getHeaderId()),  local);	  addExtraField(element,    getExtraField(f.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
6	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f.getId()));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f.getId()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f.getId()));	  addExtraField(element,    getExtraField(f.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
7	[BUG]  [BUGGY]  addExtraFields(f,  element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  element.getHeaderId());	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
8	[BUG]  [BUGGY]  addExtraFields(f.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f.getHeaderId());	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
9	[BUG]  [BUGGY]  removeExtraFields(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element.getHeaderId());	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
10	[BUG]  [BUGGY]  addExtraFields(element.getFullName());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getFullName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getFullName());	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
11	[BUG]  [BUGGY]  addExtraFields(element.getHeaderId(),  f);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getHeaderId(),  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getHeaderId(),  f);	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
12	[BUG]  [BUGGY]  addExtraFields(element.getSourceName());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getSourceName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getSourceName());	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
13	[BUG]  [BUGGY]  addExtraFields(element.getHeaderId(),  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getHeaderId(),  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getHeaderId(),  EMPTY);	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
14	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  local);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
15	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  extraFields);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
16	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  source);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  source);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
17	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  externalAttributes);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
18	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  outerAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  outerAttributes);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
19	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  internalAttributes);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
20	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  locale);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
21	[BUG]  [BUGGY]  addExtraFields(externalAttributes,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(externalAttributes,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(externalAttributes,  f);	  addExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
22	[BUG]  [BUGGY]  addExtraFields(extraFields,  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(extraFields,  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields,  f,  local);	  addExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
23	[BUG]  [BUGGY]  addExtraFields(extraFields,  f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(extraFields,  f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields,  f,  internalAttributes);	  addExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
24	[BUG]  [BUGGY]  addExtraFields(extraFields,  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(extraFields,  f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields,  f,  locale);	  addExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
25	[BUG]  [BUGGY]  addExtraFields(cpy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(cpy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(cpy,  f);	  addExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
26	[BUG]  [BUGGY]  setExtraFields(extraFields,  element);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  element);	  setExtraFields(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
27	[BUG]  [BUGGY]  addExtraFields(element,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  extraFields);	  setExtraFields(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
28	[BUG]  [BUGGY]  setExtraFields(element,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(element,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(element,  f);	  setExtraFields(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
29	[BUG]  [BUGGY]  setExtraFields(externalAttributes,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(externalAttributes,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributes,  element);	  setExtraFields(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
30	[BUG]  [BUGGY]  setExtraFields(externalAttributes,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(externalAttributes,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributes,  extraFields);	  setExtraFields(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
31	[BUG]  [BUGGY]  f  =  extractExtraFields(element.getFullName());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  extractExtraFields(element.getFullName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  extractExtraFields(element.getFullName());	  f    =    extractExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
32	[BUG]  [BUGGY]  f  =  extractExtraFields(element.getHeaderId(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  extractExtraFields(element.getHeaderId(),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  extractExtraFields(element.getHeaderId(),  local);	  f    =    extractExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
33	[BUG]  [BUGGY]  f  =  extractExtraFields(element.getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  extractExtraFields(element.getBase());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  extractExtraFields(element.getBase());	  f    =    extractExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
34	[BUG]  [BUGGY]  f  =  extractExtraFields(element.getRawId());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  extractExtraFields(element.getRawId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  extractExtraFields(element.getRawId());	  f    =    extractExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
35	[BUG]  [BUGGY]  f  =  extractExtraFields(element.getFullId());  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  extractExtraFields(element.getFullId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  extractExtraFields(element.getFullId());	  f    =    extractExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
36	[BUG]  [BUGGY]  f  =  extractExtraFields(element.getFactory());  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  extractExtraFields(element.getFactory());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  extractExtraFields(element.getFactory());	  f    =    extractExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
37	[BUG]  [BUGGY]  addExtraField(element,  f,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  noExtraFields);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
38	[BUG]  [BUGGY]  addExtraField(element,  f,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  extraFields);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
39	[BUG]  [BUGGY]  addExtraField(element,  f,  existing);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  existing);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  existing);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
40	[BUG]  [BUGGY]  addExtraField(element,  f,  transient);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  transient);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  transient);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
41	[BUG]  [BUGGY]  addExtraField(element,  f,  sourceFile,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  sourceFile,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  sourceFile,  local);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
42	[BUG]  [BUGGY]  addExtraField(f,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  extraFields);	  addExtraField(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
43	[BUG]  [BUGGY]  addExtraField(extraFields,  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  f,  local);	  addExtraField(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
44	[BUG]  [BUGGY]  addExtraField(extraFields,  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  f,  locale);	  addExtraField(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
45	[BUG]  [BUGGY]  addExtraField(extraFields,  f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  f,  internalAttributes);	  addExtraField(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
46	[BUG]  [BUGGY]  addExtraField(externs,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externs,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externs,  f);	  addExtraField(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
47	[BUG]  [BUGGY]  addExtraFields(cpb,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(cpb,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(cpb,  f);	  addExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
48	[BUG]  [BUGGY]  addExtraFields(extraFields,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(extraFields,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields,  cpb);	  addExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
49	[BUG]  [BUGGY]  addExtraFields(element,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  cpb);	  addExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
50	[BUG]  [BUGGY]  addExtraFields(f,  cpb,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  cpb,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  cpb,  extraFields);	  addExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
51	[BUG]  [BUGGY]  addExtraFields(f,  cpb,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  cpb,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  cpb,  internalAttributes);	  addExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
52	[BUG]  [BUGGY]  unparseableExtraFields(f,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  null);	  unparseableExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
53	[BUG]  [BUGGY]  unparseableExtraFields(f,  this,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  this,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  this,  extraFields);	  unparseableExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
54	[BUG]  [BUGGY]  unparseableExtraFields(f,  this,  outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  this,  outerAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  this,  outerAttributes);	  unparseableExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
55	[BUG]  [BUGGY]  unparseableExtraFields(f,  this,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  this,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  this,  null);	  unparseableExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
56	[BUG]  [BUGGY]  unparseableExtraFields(f,  this,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  this,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  this,  externalAttributes);	  unparseableExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
57	[BUG]  [BUGGY]  unparseableExtraFields(f,  this,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  this,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  this,  cpb);	  unparseableExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
58	[BUG]  [BUGGY]  addExtraField(extraFields,  f.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  f.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  f.getHeaderId());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
59	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  f.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f.getHeaderId());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
60	[BUG]  [BUGGY]  addExtraField(f,  element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  element.getHeaderId());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
61	[BUG]  [BUGGY]  addExtraField(element,  f.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f.getName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.getName());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
62	[BUG]  [BUGGY]  addExtraField(element,  f.getHeaderId(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f.getHeaderId(),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.getHeaderId(),  local);	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
63	[BUG]  [BUGGY]  addExtraField(element,  f.getFullName());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f.getFullName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.getFullName());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
64	[BUG]  [BUGGY]  addExtraField(element,  f.getImmediateParent());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f.getImmediateParent());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.getImmediateParent());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
65	[BUG]  [BUGGY]  addExtraField(element,  extraFieldsNoCopy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  extraFieldsNoCopy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  extraFieldsNoCopy,  f);	  addExtraField(element,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
66	[BUG]  [BUGGY]  addExtraField(element,  extraFieldsNoCopy,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  extraFieldsNoCopy,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  extraFieldsNoCopy,  local);	  addExtraField(element,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
67	[BUG]  [BUGGY]  addExtraField(extraFieldsNoCopy,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFieldsNoCopy,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFieldsNoCopy,  element);	  addExtraField(element,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
68	[BUG]  [BUGGY]  addExtraField(element,  noExtraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  noExtraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  noExtraFieldsNoCopy);	  addExtraField(element,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
69	[BUG]  [BUGGY]  addExtraField(element,  extraFieldsNoCopy,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  extraFieldsNoCopy,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  extraFieldsNoCopy,  internalAttributes);	  addExtraField(element,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
70	[BUG]  [BUGGY]  addExtraField(extraFields,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  element);	  addExtraField(element,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
71	[BUG]  [BUGGY]  addExtraField(element,  f,  extraFields,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  extraFields,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  extraFields,  locale);	  addExtraField(element,    f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
72	[BUG]  [BUGGY]  addExtraField(element,  f,  sourceName,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  sourceName,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  sourceName,  locale);	  addExtraField(element,    f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
73	[BUG]  [BUGGY]  addExtraField(element,  f,  sourceFile,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  sourceFile,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  sourceFile,  locale);	  addExtraField(element,    f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
74	[BUG]  [BUGGY]  setExtraFields(f,  extraFieldsNoCopy,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(f,  extraFieldsNoCopy,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(f,  extraFieldsNoCopy,  local);	  setExtraFields(f,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
75	[BUG]  [BUGGY]  setExtraFields(cpy,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(cpy,  extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(cpy,  extraFieldsNoCopy);	  setExtraFields(f,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
76	[BUG]  [BUGGY]  setExtraFields(element,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(element,  extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(element,  extraFieldsNoCopy);	  setExtraFields(f,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
77	[BUG]  [BUGGY]  addExtraField(f,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  extraFieldsNoCopy);	  setExtraFields(f,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
78	[BUG]  [BUGGY]  setExtraFields(f,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(f,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(f,  cpy);	  setExtraFields(f,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
79	[BUG]  [BUGGY]  setExtraFields(extraFields.getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields.getExtraFields());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields.getExtraFields());	  setExtraFields(element.getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
80	[BUG]  [BUGGY]  setExtraFields(extraFields,  element.getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  element.getExtraFields());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  element.getExtraFields());	  setExtraFields(element.getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
81	[BUG]  [BUGGY]  addExtraField(element.getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getExtraFields());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getExtraFields());	  setExtraFields(element.getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
82	[BUG]  [BUGGY]  addExtraFields(element.getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getExtraFields());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getExtraFields());	  setExtraFields(element.getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
83	[BUG]  [BUGGY]  setExtraFields(f.getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(f.getExtraFields());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(f.getExtraFields());	  setExtraFields(element.getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
84	[BUG]  [BUGGY]  removeExtraFields(element,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element,  f);	  removeExtraFields(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
85	[BUG]  [BUGGY]  removeExtraFields(f,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  element);	  removeExtraFields(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
86	[BUG]  [BUGGY]  addExtraFields(f,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  noExtraFields);	  addExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
87	[BUG]  [BUGGY]  addExtraFields(f,  extraFields,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  extraFields,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  extraFields,  local);	  addExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
88	[BUG]  [BUGGY]  addExtraFields(f,  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  fields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  fields);	  addExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
89	[BUG]  [BUGGY]  addExtraFields(f,  field);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  field);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  field);	  addExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
90	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  f);	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
91	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  b);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  b);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  b);	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
92	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  internalAttributes);	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
93	[BUG]  [BUGGY]  addExtraField(f,  element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  element,  EMPTY);	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
94	[BUG]  [BUGGY]  addExtraField(extraFields,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  EMPTY);	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
95	[BUG]  [BUGGY]  addExtraField(element,  internal,  f);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  internal,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  internal,  f);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
96	[BUG]  [BUGGY]  addExtraField(internal,  f,  element);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(internal,  f,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(internal,  f,  element);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
97	[BUG]  [BUGGY]  addExtraField(extraFields,  f,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  f,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  f,  internal);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
98	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  f,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f,  internal);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
99	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  f,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f,  f);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
100	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  f,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f,  this);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
101	[BUG]  [BUGGY]  addExtraField(extraFields,  element,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  element,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  element,  internal);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
102	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
103	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
104	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
105	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
106	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
107	[BUG]  [BUGGY]  if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
108	[BUG]  [BUGGY]  f  =  getExtraField(element.getSize());  addExtraField(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getSize());  addExtraField(element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getSize());  addExtraField(element,  EMPTY);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
109	[BUG]  [BUGGY]  f  =  getExtraField(element.getBase());  addExtraField(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getBase());  addExtraField(element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getBase());  addExtraField(element,  EMPTY);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
110	[BUG]  [BUGGY]  f  =  getExtraField(element.getFullName());  addExtraField(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getFullName());  addExtraField(element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getFullName());  addExtraField(element,  EMPTY);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
111	[BUG]  [BUGGY]  f  =  getExtraField(element.getSourceName());  addExtraField(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getSourceName());  addExtraField(element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getSourceName());  addExtraField(element,  EMPTY);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
112	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  source);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  source);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  source);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
113	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  rawName);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
114	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  this);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
115	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  internal);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
116	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  existing);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  existing);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  existing);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
117	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  sourceName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  sourceName);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
118	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  b);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  b);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  b);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
119	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
120	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
121	[BUG]  [BUGGY]  AllExtraFields(allExtraFields.values())  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  AllExtraFields(allExtraFields.values())  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	AllExtraFields(allExtraFields.values())  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
122	[BUG]  [BUGGY]  final  ZipExtraField[]  allExtraFields  =  getExtraFields(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  allExtraFields  =  getExtraFields(element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  allExtraFields  =  getExtraFields(element.getHeaderId());	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
123	[BUG]  [BUGGY]  final  ZipExtraField  f  =  allExtraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField  f  =  allExtraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField  f  =  allExtraFields.values();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
124	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  allExtraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  extraFields  =  allExtraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  extraFields  =  allExtraFields.values();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
125	[BUG]  [BUGGY]  AllExtraFields(allExtraFields.values())  {  addExtraField(element);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  AllExtraFields(allExtraFields.values())  {  addExtraField(element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	AllExtraFields(allExtraFields.values())  {  addExtraField(element);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
126	[BUG]  [BUGGY]  addExtraFields(f,  extractFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  extractFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  extractFields);	  addExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
127	[BUG]  [BUGGY]  removeExtraField(element,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(element,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(element,  f);	  addExtraField(f,    element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
128	[BUG]  [BUGGY]  addExtraField(externalAttributes[f],  element);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes[f],  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes[f],  element);	  addExtraField(f,    element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
129	[BUG]  [BUGGY]  removeExtraField(f,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(f,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(f,  element);	  addExtraField(f,    element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
130	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
131	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
132	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
133	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
134	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
135	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
136	[BUG]  [BUGGY]  removeExtraField(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(element.getHeaderId());	  addExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
137	[BUG]  [BUGGY]  addExtraField(element.getSourceName());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getSourceName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getSourceName());	  addExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
138	[BUG]  [BUGGY]  addExtraField(element.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getName());	  addExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
139	[BUG]  [BUGGY]  removeExtraField(f);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(f);	  removeExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
140	[BUG]  [BUGGY]  removeExtraField(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(extraFields);	  removeExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
141	[BUG]  [BUGGY]  removeExtraField(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(externalAttributes);	  removeExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
142	[BUG]  [BUGGY]  removeExtraFields(extraFields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(extraFields,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(extraFields,  f);	  removeExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
143	[BUG]  [BUGGY]  removeExtraFields(f,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  noExtraFields);	  removeExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
144	[BUG]  [BUGGY]  removeExtraFields(f,  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  fields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  fields);	  removeExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
145	[BUG]  [BUGGY]  removeExtraFields(element,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element,  extraFields);	  removeExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
146	[BUG]  [BUGGY]  removeExtraFields(f,  extraFields,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  extraFields,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  extraFields,  local);	  removeExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
147	[BUG]  [BUGGY]  removeExtraFields(f,  field);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  field);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  field);	  removeExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
148	[BUG]  [BUGGY]  unparseableExtraFields(f,  field);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  field);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  field);	  unparseableExtraFields(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
149	[BUG]  [BUGGY]  unparseableExtraFields(f,  enum);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  enum);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  enum);	  unparseableExtraFields(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
150	[BUG]  [BUGGY]  removeExtraFieldsNoCopy(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFieldsNoCopy(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFieldsNoCopy(extraFields);	  removeExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
151	[BUG]  [BUGGY]  removeExtraFields(extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(extraFieldsNoCopy);	  removeExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
152	[BUG]  [BUGGY]  (ZipExtraField)this.extraFields.get(f);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)this.extraFields.get(f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)this.extraFields.get(f);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
153	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(f  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.get(f  +  1);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(f  +  1);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
154	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.get(f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(f,  internalAttributes);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
155	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.get(f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(f,  local);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
156	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(0);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.get(0);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(0);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
157	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(f,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.get(f,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(f,  this);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
158	[BUG]  [BUGGY]  removeExtraFields(cpy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(cpy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(cpy,  f);	  removeExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
159	[BUG]  [BUGGY]  removeExtraFields(extraFields,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(extraFields,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(extraFields,  cpy);	  removeExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
160	[BUG]  [BUGGY]  removeExtraFields(f,  cpy,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  cpy,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpy,  extraFields);	  removeExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
161	[BUG]  [BUGGY]  removeExtraFields(f,  cpy,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  cpy,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpy,  externalAttributes);	  removeExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
162	[BUG]  [BUGGY]  removeExtraFields(f,  cpy,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  cpy,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpy,  local);	  removeExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
163	[BUG]  [BUGGY]  removeExtraFields(element,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element,  cpy);	  removeExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
164	[BUG]  [BUGGY]  parent  ==  null  &&  extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  &&  extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  &&  extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
165	[BUG]  [BUGGY]  parent  ==  null  &&  extraFields!=  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  &&  extraFields!=  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  &&  extraFields!=  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
166	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  extraFields  =  getExtraFields(element.getHeaderId());  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
167	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  f,  local);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
168	[BUG]  [BUGGY]  addExtraField(f.getHeaderId(),  element);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f.getHeaderId(),  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f.getHeaderId(),  element);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
169	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  EMPTY);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
170	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  f,  internalAttributes);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
171	[BUG]  [BUGGY]  addExtraField(element.getName(),  f);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getName(),  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getName(),  f);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
172	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  f,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  f,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  f,  externalAttributes);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
173	[BUG]  [BUGGY]  addExtraField(element.getFullName(),  f);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getFullName(),  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getFullName(),  f);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
174	[BUG]  [BUGGY]  setExtraFieldsNoCopy(cpy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(cpy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(cpy,  f);	  setExtraFieldsNoCopy(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
175	[BUG]  [BUGGY]  setExtraFields(extraFields,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  cpy);	  setExtraFieldsNoCopy(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
176	[BUG]  [BUGGY]  setExtraFieldsNoCopy(extraFields,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(extraFields,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(extraFields,  cpy);	  setExtraFieldsNoCopy(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
177	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  cpy,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  cpy,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  cpy,  local);	  setExtraFieldsNoCopy(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
178	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  cpy,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  cpy,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  cpy,  extraFields);	  setExtraFieldsNoCopy(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
179	[BUG]  [BUGGY]  setExtraFieldsNoCopy(extraFields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(extraFields,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(extraFields,  f);	  setExtraFieldsNoCopy(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
180	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  extraFields,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  extraFields,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  extraFields,  local);	  setExtraFieldsNoCopy(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
181	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  fields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  fields);	  setExtraFieldsNoCopy(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
182	[BUG]  [BUGGY]  addExtraField(element,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  noExtraFields);	  addExtraField(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
183	[BUG]  [BUGGY]  addExtraField(externalAttributes,  element);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  element);	  addExtraField(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
184	[BUG]  [BUGGY]  addExtraField(element,  extraFields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  extraFields,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  extraFields,  f);	  addExtraField(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
185	[BUG]  [BUGGY]  addExtraField(element,  extraFields,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  extraFields,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  extraFields,  local);	  addExtraField(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
186	[BUG]  [BUGGY]  addExtraFields(f,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  element);	  addExtraFields(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
187	[BUG]  [BUGGY]  addExtraFields(extraFields,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(extraFields,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields,  element);	  addExtraFields(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
188	[BUG]  [BUGGY]  addExtraField(f,  element.getFullName());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  element.getFullName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  element.getFullName());	  addExtraField(element.getFullName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
189	[BUG]  [BUGGY]  addExtraField(element.getFullName(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getFullName(),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getFullName(),  local);	  addExtraField(element.getFullName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
190	[BUG]  [BUGGY]  addExtraFields(element,  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  f,  local);	  addExtraFields(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
191	[BUG]  [BUGGY]  addExtraFields(element,  f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  f,  internalAttributes);	  addExtraFields(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
192	[BUG]  [BUGGY]  addExtraFields(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  EMPTY);	  addExtraFields(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
193	[BUG]  [BUGGY]  addExtraFields(element,  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  f,  locale);	  addExtraFields(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
194	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
195	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
196	[BUG]  [BUGGY]  AllExtraFieldsNoCopy  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  AllExtraFieldsNoCopy  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	AllExtraFieldsNoCopy  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
197	[BUG]  [BUGGY]  final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.length];  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.length];  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.length];  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
198	[BUG]  [BUGGY]  final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.length];  for(final  ZipExtraField  f  :  allExtraFields)  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.length];  for(final  ZipExtraField  f  :  allExtraFields)  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.length];  for(final  ZipExtraField  f  :  allExtraFields)  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
199	[BUG]  [BUGGY]  final  ZipExtraField[]  allExtraFields  =  getExtraFields(element.getHeaderId());  if(allExtraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  allExtraFields  =  getExtraFields(element.getHeaderId());  if(allExtraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  allExtraFields  =  getExtraFields(element.getHeaderId());  if(allExtraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
200	[BUG]  [BUGGY]  removeExtraFields(f,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  null);	  removeExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
201	[BUG]  [BUGGY]  removeExtraFields(extraFields,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(extraFields,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(extraFields,  this);	  removeExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
202	[BUG]  [BUGGY]  removeExtraFields(f,  this,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  this,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  this,  extraFields);	  removeExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
203	[BUG]  [BUGGY]  removeExtraFields(element,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element,  this);	  removeExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
204	[BUG]  [BUGGY]  removeExtraFields(f,  cpb,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  cpb,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpb,  extraFields);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
205	[BUG]  [BUGGY]  removeExtraFields(cpb,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(cpb,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(cpb,  f);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
206	[BUG]  [BUGGY]  removeExtraFields(extraFields,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(extraFields,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(extraFields,  cpb);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
207	[BUG]  [BUGGY]  removeExtraFields(f,  cpb,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  cpb,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpb,  externalAttributes);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
208	[BUG]  [BUGGY]  removeExtraFields(f,  cpb,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  cpb,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpb,  null);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
209	[BUG]  [BUGGY]  removeExtraFields(f,  cpb,  outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  cpb,  outerAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpb,  outerAttributes);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
210	[BUG]  [BUGGY]  cpy.addExtraField(extraFields,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(extraFields,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(extraFields,  EMPTY);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
211	[BUG]  [BUGGY]  cpy.addExtraField(externalAttributes,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(externalAttributes,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(externalAttributes,  EMPTY);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
212	[BUG]  [BUGGY]  cpy.addExtraField(element,  EMPTY,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  EMPTY,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  EMPTY,  internalAttributes);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
213	[BUG]  [BUGGY]  cpy.addExtraField(element,  EMPTY,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  EMPTY,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  EMPTY,  local);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
214	[BUG]  [BUGGY]  cpy.addExtraField(element,  EMPTY,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  EMPTY,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  EMPTY,  externalAttributes);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
215	[BUG]  [BUGGY]  cpy.addExtraField(f,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(f,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(f,  EMPTY);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
216	[BUG]  [BUGGY]  cpy.addExtraField(element,  EMPTY,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  EMPTY,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  EMPTY,  extraFields);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
217	[BUG]  [BUGGY]  setExtraFields(f,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(f,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(f,  noExtraFields);	  setExtraFields(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
218	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  sourceFile,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile,  local);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
219	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile,  b);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  sourceFile,  b);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile,  b);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
220	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  sourceFile,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile,  rawName);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
221	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  sourceFile,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile,  locale);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
222	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  sourceFile,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile,  internalAttributes);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
223	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  sourceFile,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile,  cpb);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
224	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  sourceFile,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile,  null);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
225	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  externalAttributes,  local);	  setExtraFieldsNoCopy(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
226	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  internalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  internalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  internalAttributes,  local);	  setExtraFieldsNoCopy(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
227	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  externalAttributes,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  externalAttributes,  internalAttributes);	  setExtraFieldsNoCopy(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
228	[BUG]  [BUGGY]  setExtraFieldsNoCopy(externalAttributes,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(externalAttributes,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(externalAttributes,  f);	  setExtraFieldsNoCopy(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
229	[BUG]  [BUGGY]  setExtraFields(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  externalAttributes);	  setExtraFieldsNoCopy(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
230	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(element,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element,  externalAttributes);	  setExtraFieldsNoCopy(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
231	[BUG]  [BUGGY]  addExtraField(f,  element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  element,  local);	  addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
232	[BUG]  [BUGGY]  addExtraField(f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  local);	  addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
233	[BUG]  [BUGGY]  removeExtraField(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(element,  local);	  addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
234	[BUG]  [BUGGY]  setExtraFields(externalAttributes,  f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(externalAttributes,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributes,  f);	  setExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
235	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpb,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpb,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpb,  local);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
236	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpb,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpb,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpb,  internalAttributes);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
237	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpb,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpb,  source);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpb,  source);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
238	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpb,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpb,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpb,  null);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
239	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpb,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpb,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpb,  locale);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
240	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpb,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpb,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpb,  extraFields);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
241	[BUG]  [BUGGY]  unparseableExtraFields(cpb,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(cpb,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(cpb,  f);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
242	[BUG]  [BUGGY]  addExtraField(f,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  null);	  addExtraField(element,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
243	[BUG]  [BUGGY]  addExtraField(element,  null,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  null,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  null,  f);	  addExtraField(element,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
244	[BUG]  [BUGGY]  addExtraField(element,  null,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  null,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  null,  extraFields);	  addExtraField(element,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
245	[BUG]  [BUGGY]  addExtraField(extraFields,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  cpy);	  addExtraField(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
246	[BUG]  [BUGGY]  addExtraField(cpy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(cpy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(cpy,  f);	  addExtraField(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
247	[BUG]  [BUGGY]  addExtraField(element,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  cpy);	  addExtraField(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
248	[BUG]  [BUGGY]  addExtraField(extraFields[f],  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields[f],  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields[f],  cpy);	  addExtraField(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
249	[BUG]  [BUGGY]  removeExtraField(f,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(f,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(f,  cpy);	  addExtraField(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
250	[BUG]  [BUGGY]  setExtraFields(extraFieldsNoCopy,  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFieldsNoCopy,  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFieldsNoCopy,  f,  local);	  setExtraFields(extraFieldsNoCopy,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
251	[BUG]  [BUGGY]  setExtraFields(extraFieldsNoCopy,  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFieldsNoCopy,  f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFieldsNoCopy,  f,  locale);	  setExtraFields(extraFieldsNoCopy,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
252	[BUG]  [BUGGY]  setExtraFields(extraFields,  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  f,  local);	  setExtraFields(extraFieldsNoCopy,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
253	[BUG]  [BUGGY]  setExtraFields(extraFieldsNoCopy,  f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFieldsNoCopy,  f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFieldsNoCopy,  f,  internalAttributes);	  setExtraFields(extraFieldsNoCopy,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
254	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  noExtraFields);	  setExtraFieldsNoCopy(f,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
255	[BUG]  [BUGGY]  setExtraFields(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  null);	  setExtraFieldsNoCopy(f,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
256	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  null,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  null,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  null,  extraFields);	  setExtraFieldsNoCopy(f,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
257	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  this);	  setExtraFieldsNoCopy(f,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
258	[BUG]  [BUGGY]  setExtraFieldsNoCopy(extraFields,  local);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(extraFields,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(extraFields,  local);	  setExtraFieldsNoCopy(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
259	[BUG]  [BUGGY]  f  =  getExtraField(element.getFullName());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getFullName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getFullName());	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
260	[BUG]  [BUGGY]  f  =  getExtraField(element.getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getBase());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getBase());	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
261	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getHeaderId()  +  1);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId()  +  1);	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
262	[BUG]  [BUGGY]  f  =  getExtraField(element.getRawId());  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getRawId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getRawId());	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
263	[BUG]  [BUGGY]  f  =  getExtraField(element.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getName());	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
264	[BUG]  [BUGGY]  f  =  getExtraField(element.getText());  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getText());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getText());	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
265	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpy,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpy,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpy,  local);	  unparseableExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
266	[BUG]  [BUGGY]  unparseableExtraFields(cpy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(cpy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(cpy,  f);	  unparseableExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
267	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpy,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpy,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpy,  extraFields);	  unparseableExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
268	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpy,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpy,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpy,  null);	  unparseableExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
269	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpy,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpy,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpy,  internalAttributes);	  unparseableExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
270	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpy,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpy,  source);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpy,  source);	  unparseableExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
271	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpy,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpy,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpy,  locale);	  unparseableExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
272	[BUG]  [BUGGY]  addExtraField(element,  internalAttributes,  f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  internalAttributes,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  internalAttributes,  f);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
273	[BUG]  [BUGGY]  addExtraField(element,  f,  internalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  internalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  internalAttributes,  local);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
274	[BUG]  [BUGGY]  addExtraField(element,  externalAttributes,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  externalAttributes,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  externalAttributes,  f);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
275	[BUG]  [BUGGY]  addExtraField(internalAttributes,  f,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(internalAttributes,  f,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(internalAttributes,  f,  element);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
276	[BUG]  [BUGGY]  addExtraField(element,  f,  externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  externalAttributes,  local);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
277	[BUG]  [BUGGY]  addExtraField(element,  internalAttributes,  b);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  internalAttributes,  b);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  internalAttributes,  b);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
278	[BUG]  [BUGGY]  addExtraField(f,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(f,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  externalAttributes);	  addExtraField(externalAttributes,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
279	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f,  local);	  addExtraField(externalAttributes,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
280	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f,  internalAttributes);	  addExtraField(externalAttributes,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
281	[BUG]  [BUGGY]  addExtraField(element,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  externalAttributes);	  addExtraField(externalAttributes,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
282	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f,  locale);	  addExtraField(externalAttributes,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
283	[BUG]  [BUGGY]  final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.size()  ];  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  allExtraFields  =  new  ZipExtraField[allExtraFields.size()  ];	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
284	[BUG]  [BUGGY]  final  ZipExtraField[]  allExtraFields  =  allExtraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  allExtraFields  =  allExtraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  allExtraFields  =  allExtraFields.values();	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
285	[BUG]  [BUGGY]  addExtraField(externalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  null);	  addExtraField(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
286	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  EMPTY);	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
287	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(f.getHeaderId(),  element);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(f.getHeaderId(),  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(f.getHeaderId(),  element);	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
288	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  b);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  b);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  b);	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
289	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  this);	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
290	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(f,  element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(f,  element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(f,  element.getHeaderId());	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
291	[BUG]  [BUGGY]  (ZipExtraField)this.extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)this.extraFields.clone();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)this.extraFields.clone();	  (ZipExtraField)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
292	[BUG]  [BUGGY]  (ZipExtraField)super.extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)super.extraFields.clone();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)super.extraFields.clone();	  (ZipExtraField)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
293	[BUG]  [BUGGY]  (ZipExtraField)extraFieldsNoCopy.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFieldsNoCopy.clone();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFieldsNoCopy.clone();	  (ZipExtraField)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
294	[BUG]  [BUGGY]  (ZipExtraField)allExtraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)allExtraFields.clone();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)allExtraFields.clone();	  (ZipExtraField)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
295	[BUG]  [BUGGY]  (ZipExtraField)extraFields.clone(f);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.clone(f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.clone(f);	  (ZipExtraField)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
296	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  field);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  field);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  field);	  setExtraFieldsNoCopy(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
297	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  local,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  local,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  local,  extraFields);	  setExtraFieldsNoCopy(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
298	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  enum);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  enum);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  enum);	  setExtraFieldsNoCopy(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
299	[BUG]  [BUGGY]  cpy.addExtraField(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(extraFields);	  cpy.addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
300	[BUG]  [BUGGY]  cpy.addExtraField(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(externalAttributes);	  cpy.addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
301	[BUG]  [BUGGY]  cpy.addExtraField(extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(extraFieldsNoCopy);	  cpy.addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
302	[BUG]  [BUGGY]  cpy.addExtraField(extraFields,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(extraFields,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(extraFields,  element);	  cpy.addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
303	[BUG]  [BUGGY]  cpy.addExtraField(f,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(f,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(f,  element);	  cpy.addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
304	[BUG]  [BUGGY]  cpy.addExtraField(extraFields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(extraFields[i]);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(extraFields[i]);	  cpy.addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
305	[BUG]  [BUGGY]  addExtraField(extraFieldsNoCopy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFieldsNoCopy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFieldsNoCopy,  f);	  addExtraField(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
306	[BUG]  [BUGGY]  addExtraField(extraFields[0]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields[0]);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields[0]);	  addExtraField(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
307	[BUG]  [BUGGY]  addExtraFields(extraFields,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(extraFields,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields,  cpy);	  addExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
308	[BUG]  [BUGGY]  addExtraFields(element,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  cpy);	  addExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
309	[BUG]  [BUGGY]  addExtraFields(f,  cpy,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  cpy,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  cpy,  extraFields);	  addExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
310	[BUG]  [BUGGY]  addExtraFields(f,  cpy,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  cpy,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  cpy,  externalAttributes);	  addExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
311	[BUG]  [BUGGY]  setExtraFieldsNoCopy(externalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(externalAttributes,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(externalAttributes,  null);	  setExtraFieldsNoCopy(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
312	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
313	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
314	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
315	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
316	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
317	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  allExtraFields.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  extraFields  =  allExtraFields.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  extraFields  =  allExtraFields.toArray(new  ZipExtraField[extraFields.size()  ]);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
318	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
319	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.toArray(f))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.toArray(f))  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  allExtraFields.toArray(f))  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
320	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  allExtraFields.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  extraFields  =  allExtraFields.toArray(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  extraFields  =  allExtraFields.toArray(extraFields);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
321	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.toArray(new  ZipExtraField[f.size()  ]))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.toArray(new  ZipExtraField[f.size()  ]))  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  allExtraFields.toArray(new  ZipExtraField[f.size()  ]))  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
322	[BUG]  [BUGGY]  final  ZipExtraField  f  =  allExtraFields.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField  f  =  allExtraFields.toArray(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField  f  =  allExtraFields.toArray(extraFields);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
323	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.toArray(new  ZipExtraField[]  {  element  }  ))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.toArray(new  ZipExtraField[]  {  element  }  ))  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  allExtraFields.toArray(new  ZipExtraField[]  {  element  }  ))  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
324	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
325	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
326	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
327	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getId()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getId()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getId()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
328	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getRawId()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
329	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getContent()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getContent()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getContent()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
330	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getName()))  {  if(local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(local)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
331	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(local)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
332	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getBase()))  {  if(local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(local)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
333	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getFullName()))  {  if(local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(local)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
334	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(local)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
335	[BUG]  [BUGGY]  addExtraFields(f,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  externalAttributes);	  addExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
336	[BUG]  [BUGGY]  addExtraFields(externalAttributes,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(externalAttributes,  true);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(externalAttributes,  true);	  addExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
337	[BUG]  [BUGGY]  unparseableExtraFields(f,  b,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  b,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b,  local);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
338	[BUG]  [BUGGY]  unparseableExtraFields(f,  b,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  b,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b,  internalAttributes);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
339	[BUG]  [BUGGY]  unparseableExtraFields(f,  b,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  b,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b,  null);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
340	[BUG]  [BUGGY]  unparseableExtraFields(f,  b,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  b,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b,  externalAttributes);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
341	[BUG]  [BUGGY]  unparseableExtraFields(f,  b,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  b,  source);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b,  source);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
342	[BUG]  [BUGGY]  unparseableExtraFields(f,  b,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  b,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b,  rawName);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
343	[BUG]  [BUGGY]  unparseableExtraFields(f,  b,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  b,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b,  locale);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
344	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()),  f);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()),  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getHeaderId()),  f);	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
345	[BUG]  [BUGGY]  addExtraField(externalAttributes,  getExtraField(element.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  getExtraField(element.getHeaderId()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  getExtraField(element.getHeaderId()));	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
346	[BUG]  [BUGGY]  addExtraField(extraFields,  getExtraField(element.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  getExtraField(element.getHeaderId()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  getExtraField(element.getHeaderId()));	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
347	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getFullName()));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getFullName()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getFullName()));	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
348	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getName()));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getName()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getName()));	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
349	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getBase()));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getBase()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getBase()));	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
350	[BUG]  [BUGGY]  removeExtraFields(externalAttributes,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(externalAttributes,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(externalAttributes,  f);	  removeExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
351	[BUG]  [BUGGY]  cpy.addExtraField(extraFields[f]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(extraFields[f]);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(extraFields[f]);	  cpy.addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
352	[BUG]  [BUGGY]  cpy.addExtraField(extraFields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(extraFields,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(extraFields,  f);	  cpy.addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
353	[BUG]  [BUGGY]  cpy.addExtraField(extraFields[0]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(extraFields[0]);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(extraFields[0]);	  cpy.addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
354	[BUG]  [BUGGY]  if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
355	[BUG]  [BUGGY]  f  =  getExtraField(element.getFullName());  addExtraField(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getFullName());  addExtraField(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getFullName());  addExtraField(element,  local);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
356	[BUG]  [BUGGY]  f  =  getExtraField(element.getName());  addExtraField(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getName());  addExtraField(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getName());  addExtraField(element,  local);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
357	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId());  addExtraField(element,  null);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
358	[BUG]  [BUGGY]  addExtraFields(f,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  extraFieldsNoCopy);	  addExtraFields(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
359	[BUG]  [BUGGY]  addExtraFields(extraFieldsNoCopy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(extraFieldsNoCopy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFieldsNoCopy,  f);	  addExtraFields(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
360	[BUG]  [BUGGY]  addExtraFields(element,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  extraFieldsNoCopy);	  addExtraFields(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
361	[BUG]  [BUGGY]  addExtraFields(f,  extractFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  extractFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  extractFieldsNoCopy);	  addExtraFields(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
362	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f,  element);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  f,  element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f,  element);	  addExtraField(element,    f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
363	[BUG]  [BUGGY]  addExtraField(extraFields,  f,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFields,  f,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  f,  externalAttributes);	  addExtraField(element,    f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
364	[BUG]  [BUGGY]  addExtraField(element,  externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  externalAttributes,  local);	  addExtraField(element,    f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
365	[BUG]  [BUGGY]  unparseableExtraFields(f,  source,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  source,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source,  local);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
366	[BUG]  [BUGGY]  unparseableExtraFields(f,  source,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  source,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source,  internalAttributes);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
367	[BUG]  [BUGGY]  unparseableExtraFields(f,  source,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  source,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source,  rawName);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
368	[BUG]  [BUGGY]  unparseableExtraFields(f,  source,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  source,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source,  cpb);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
369	[BUG]  [BUGGY]  unparseableExtraFields(f,  source,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  source,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source,  null);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
370	[BUG]  [BUGGY]  unparseableExtraFields(f,  source,  b);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  source,  b);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source,  b);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
371	[BUG]  [BUGGY]  unparseableExtraFields(f,  source,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  source,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source,  this);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
372	[BUG]  [BUGGY]  setExtraFields(extraFields,  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  f,  locale);	  setExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
373	[BUG]  [BUGGY]  setExtraFields(fields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(fields,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(fields,  f);	  setExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
374	[BUG]  [BUGGY]  setExtraFields(extraFields.getExtraFieldsNoCopy());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields.getExtraFieldsNoCopy());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields.getExtraFieldsNoCopy());	  setExtraFields(element.getExtraFieldsNoCopy());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
375	[BUG]  [BUGGY]  setExtraFields(extraFields,  element.getExtraFieldsNoCopy());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  element.getExtraFieldsNoCopy());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  element.getExtraFieldsNoCopy());	  setExtraFields(element.getExtraFieldsNoCopy());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
376	[BUG]  [BUGGY]  addExtraFields(element.getExtraFieldsNoCopy());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getExtraFieldsNoCopy());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getExtraFieldsNoCopy());	  setExtraFields(element.getExtraFieldsNoCopy());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
377	[BUG]  [BUGGY]  addExtraField(element.getExtraFieldsNoCopy());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getExtraFieldsNoCopy());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getExtraFieldsNoCopy());	  setExtraFields(element.getExtraFieldsNoCopy());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
378	[BUG]  [BUGGY]  setExtraFields(f.getExtraFieldsNoCopy());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(f.getExtraFieldsNoCopy());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(f.getExtraFieldsNoCopy());	  setExtraFields(element.getExtraFieldsNoCopy());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
379	[BUG]  [BUGGY]  setExtraFields(extraFields.getExtra());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields.getExtra());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields.getExtra());	  setExtraFields(element.getExtraFieldsNoCopy());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
380	[BUG]  [BUGGY]  removeExtraFields(f,  externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  externalAttributes,  local);	  removeExtraFields(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
381	[BUG]  [BUGGY]  removeExtraFields(f,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  externalAttributes,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  externalAttributes,  internalAttributes);	  removeExtraFields(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
382	[BUG]  [BUGGY]  removeExtraFields(f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  internalAttributes);	  removeExtraFields(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
383	[BUG]  [BUGGY]  removeExtraFields(f,  internalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  internalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  internalAttributes,  local);	  removeExtraFields(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
384	[BUG]  [BUGGY]  removeExtraFields(f,  externalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  externalAttributes,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  externalAttributes,  null);	  removeExtraFields(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
385	[BUG]  [BUGGY]  removeExtraFields(f,  b);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  b);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  b);	  removeExtraFields(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
386	[BUG]  [BUGGY]  removeExtraFields(f,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  rawName);	  removeExtraFields(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
387	[BUG]  [BUGGY]  removeExtraFields(f,  enum);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  enum);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  enum);	  removeExtraFields(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
388	[BUG]  [BUGGY]  unparseableExtraFields(f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  internalAttributes);	  unparseableExtraFields(f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
389	[BUG]  [BUGGY]  unparseableExtraFields(f,  enum,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  enum,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  enum,  locale);	  unparseableExtraFields(f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
390	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
391	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
392	[BUG]  [BUGGY]  final  ZipExtraField  f  =  allExtraFields.keySet();  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField  f  =  allExtraFields.keySet();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField  f  =  allExtraFields.keySet();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
393	[BUG]  [BUGGY]  final  ZipExtraField[]  allExtraFields  =  allExtraFields.keySet();  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  allExtraFields  =  allExtraFields.keySet();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  allExtraFields  =  allExtraFields.keySet();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
394	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  allExtraFields.keySet();  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  extraFields  =  allExtraFields.keySet();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  extraFields  =  allExtraFields.keySet();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
395	[BUG]  [BUGGY]  removeExtraFields(element,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element,  cpb);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
396	[BUG]  [BUGGY]  removeExtraFields(f,  cpb,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  cpb,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpb,  local);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
397	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()),  local);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getHeaderId()),  local);	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
398	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId(),  local));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId(),  local));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getHeaderId(),  local));	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
399	[BUG]  [BUGGY]  addExtraField(element,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  internalAttributes);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
400	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  externalAttributes  =  getExtraField(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  externalAttributes  =  getExtraField(element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  externalAttributes  =  getExtraField(element.getHeaderId());	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
401	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  getExtraFields())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
402	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  extraFields  =  extraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  extraFields  =  extraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  extraFields  =  extraFields.values();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
403	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  externalAttributes  =  extraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  externalAttributes  =  extraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  externalAttributes  =  extraFields.values();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
404	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  outerAttributes  =  extraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  outerAttributes  =  extraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  outerAttributes  =  extraFields.values();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
405	[BUG]  [BUGGY]  addExtraFields(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  local);	  addExtraFields(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
406	[BUG]  [BUGGY]  addExtraFields(element,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  null);	  addExtraFields(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
407	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(local)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
408	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  if(local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(local)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
409	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getLocalName()))  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getLocalName()))  {  if(local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getLocalName()))  {  if(local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(local)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
410	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element,  local);	  setExtraFieldsNoCopy(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
411	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  cpb);	  setExtraFieldsNoCopy(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
412	[BUG]  [BUGGY]  setExtraFields(extraFields,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  local);	  setExtraFieldsNoCopy(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
413	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  externalAttributes  =  allExtraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  externalAttributes  =  allExtraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  externalAttributes  =  allExtraFields.values();	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
414	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.values();	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
415	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  extraFields  =  allExtraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  extraFields  =  allExtraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  extraFields  =  allExtraFields.values();	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
416	[BUG]  [BUGGY]  luateExtraFields(element,  allExtraFields.values())  {  addExtraField(element);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  luateExtraFields(element,  allExtraFields.values())  {  addExtraField(element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	luateExtraFields(element,  allExtraFields.values())  {  addExtraField(element);	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
417	[BUG]  [BUGGY]  luateExtraFields(element,  allExtraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  luateExtraFields(element,  allExtraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	luateExtraFields(element,  allExtraFields.values())  {  addExtraField(element);  }	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
418	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  local);	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
419	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()),  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()),  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getHeaderId()),  EMPTY);	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
420	[BUG]  [BUGGY]  addExtraField(element,  f,  internal,  local);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  internal,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  internal,  local);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
421	[BUG]  [BUGGY]  addExtraField(element,  f,  internal,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  internal,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  internal,  externalAttributes);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
422	[BUG]  [BUGGY]  unparseableExtraFields(source,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(source,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(source,  f);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
423	[BUG]  [BUGGY]  unparseableExtraFields(f,  source,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  source,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source,  locale);	  unparseableExtraFields(f,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
424	[BUG]  [BUGGY]  unparseableExtraFields(f,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  rawName);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
425	[BUG]  [BUGGY]  removeExtraFields(element.getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element.getExtraFields());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element.getExtraFields());	  setExtraFields(element.getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
426	[BUG]  [BUGGY]  addExtraFields(externalAttributes,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(externalAttributes,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(externalAttributes,  cpy);	  addExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
427	[BUG]  [BUGGY]  addExtraFields(f,  cpy,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(f,  cpy,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  cpy,  local);	  addExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
428	[BUG]  [BUGGY]  cpy.addExtraField(element,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  f);	  addExtraField(f,    element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
429	[BUG]  [BUGGY]  f  =  getExtraFields(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraFields(element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraFields(element.getHeaderId());	  f    =    extractExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
430	[BUG]  [BUGGY]  f  =  extractExtraFields(element.getText());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  extractExtraFields(element.getText());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  extractExtraFields(element.getText());	  f    =    extractExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
431	[BUG]  [BUGGY]  addExtraFields(element.getFactory());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getFactory());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getFactory());	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
432	[BUG]  [BUGGY]  addExtraFields(element.getFullId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getFullId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getFullId());	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
433	[BUG]  [BUGGY]  addExtraFields(element.getElementId());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getElementId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getElementId());	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
434	[BUG]  [BUGGY]  addExtraFields(element.getHeaderId(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getHeaderId(),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getHeaderId(),  local);	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
435	[BUG]  [BUGGY]  setExtraFieldsNoCopy(externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(externalAttributes,  local);	  setExtraFieldsNoCopy(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
436	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  externalAttributes);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
437	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  internalAttributes);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
438	[BUG]  [BUGGY]  removeExtraFields(externalAttributes,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(externalAttributes,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(externalAttributes,  cpy);	  removeExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
439	[BUG]  [BUGGY]  setExtraFields(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(element,  EMPTY);	  setExtraFields(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
440	[BUG]  [BUGGY]  addExtraField(extraFieldsNoCopy,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(extraFieldsNoCopy,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFieldsNoCopy,  local);	  addExtraField(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
441	[BUG]  [BUGGY]  addExtraField(externalAttributesNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributesNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributesNoCopy);	  addExtraField(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
442	[BUG]  [BUGGY]  addExtraFields(element,  f,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  f,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  f,  externalAttributes);	  addExtraFields(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
443	[BUG]  [BUGGY]  addExtraField(externalAttributes,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  extraFieldsNoCopy);	  addExtraField(element,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
444	[BUG]  [BUGGY]  addExtraFields(extraFields,  f,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(extraFields,  f,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields,  f,  noExtraFields);	  addExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
445	[BUG]  [BUGGY]  cpy.addExtraField(element,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  null);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
446	[BUG]  [BUGGY]  cpy.addExtraField(element,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  this);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
447	[BUG]  [BUGGY]  cpy.addExtraField(externalAttributes[0],  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(externalAttributes[0],  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(externalAttributes[0],  EMPTY);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
448	[BUG]  [BUGGY]  addExtraField(externalAttributes,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  cpy);	  addExtraField(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
449	[BUG]  [BUGGY]  addExtraField(externalAttributes[f],  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes[f],  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes[f],  cpy);	  addExtraField(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
450	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  f,  local);	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
451	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  null);	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
452	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  local);	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
453	[BUG]  [BUGGY]  unparseableExtraFields(f,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  gpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  gpb);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
454	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(element,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element,  cpy);	  setExtraFieldsNoCopy(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
455	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
456	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getElementId()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
457	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getLocalFile()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getLocalFile()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getLocalFile()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
458	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  f,  locale);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
459	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  f,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  f,  unparseableExtra);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  f,  unparseableExtra);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
460	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getHeaderId(),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId(),  local);	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
461	[BUG]  [BUGGY]  f  =  getExtraField(element.getFullId());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getFullId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getFullId());	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
462	[BUG]  [BUGGY]  f  =  addExtraField(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  addExtraField(element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  addExtraField(element.getHeaderId());	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
463	[BUG]  [BUGGY]  removeExtraFields(externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(externalAttributes,  local);	  removeExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
464	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  rawName);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
465	[BUG]  [BUGGY]  addExtraFields(externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(externalAttributes,  local);	  addExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
466	[BUG]  [BUGGY]  removeExtraFields(element,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element,  externalAttributes);	  removeExtraFields(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
467	[BUG]  [BUGGY]  removeExtraFields(f,  externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  externalAttributes,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  externalAttributes,  rawName);	  removeExtraFields(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
468	[BUG]  [BUGGY]  addExtraField(externalAttributes,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  extraFields);	  addExtraField(element,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
469	[BUG]  [BUGGY]  addExtraField(element,  f.getElementId());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f.getElementId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.getElementId());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
470	[BUG]  [BUGGY]  addExtraField(element,  f.getFactory());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f.getFactory());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.getFactory());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
471	[BUG]  [BUGGY]  addExtraField(externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  local);	  addExtraField(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
472	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  externalAttributes);	  addExtraField(element,    f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
473	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
474	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getParent()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getParent()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getParent()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
475	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(element,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element,  extraFields);	  setExtraFieldsNoCopy(f,    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
476	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  extraFields  =  allExtraFields.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  extraFields  =  allExtraFields.toArray(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  extraFields  =  allExtraFields.toArray(extraFields);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
477	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  externalAttributes  =  allExtraFields.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  externalAttributes  =  allExtraFields.toArray(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  externalAttributes  =  allExtraFields.toArray(extraFields);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
478	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.toArray(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.toArray(extraFields);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
479	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  outerAttributes  =  allExtraFields.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  outerAttributes  =  allExtraFields.toArray(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  outerAttributes  =  allExtraFields.toArray(extraFields);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
480	[BUG]  [BUGGY]  (ZipExtraField)extraField.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraField.clone();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraField.clone();	  (ZipExtraField)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
481	[BUG]  [BUGGY]  cpy.addExtraField(externalAttributesNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(externalAttributesNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(externalAttributesNoCopy);	  cpy.addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
482	[BUG]  [BUGGY]  addExtraField(element,  f,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  rawName);	  addExtraField(element,    f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
483	[BUG]  [BUGGY]  addExtraField(element,  f,  sourceFile);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  sourceFile);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  sourceFile);	  addExtraField(element,    f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
484	[BUG]  [BUGGY]  setExtraFields(externalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(externalAttributes,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributes,  null);	  setExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
485	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId(),  local);  addExtraField(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getHeaderId(),  local);  addExtraField(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId(),  local);  addExtraField(element,  local);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
486	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  unparseableExtra);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId());  addExtraField(element,  unparseableExtra);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
487	[BUG]  [BUGGY]  f  =  getExtraField(element.getBase());  addExtraField(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getBase());  addExtraField(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getBase());  addExtraField(element,  local);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
488	[BUG]  [BUGGY]  setExtraFields(externalAttributesNoCopy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(externalAttributesNoCopy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributesNoCopy,  f);	  setExtraFields(extraFieldsNoCopy,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
489	[BUG]  [BUGGY]  removeExtraFields(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element,  local);	  removeExtraFields(f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
490	[BUG]  [BUGGY]  setExtraFieldsNoCopy(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(extraFields,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(extraFields,  externalAttributes);	  setExtraFieldsNoCopy(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
491	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  internalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  internalAttributes);	  setExtraFieldsNoCopy(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
492	[BUG]  [BUGGY]  addExtraField(element.getFactory());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getFactory());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getFactory());	  addExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
493	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  local);	  addExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
494	[BUG]  [BUGGY]  addExtraField(element.getFullId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getFullId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getFullId());	  addExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
495	[BUG]  [BUGGY]  addExtraField(element.getElementId());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getElementId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getElementId());	  addExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
496	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(element.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
497	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getParent()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getParent()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getParent()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
498	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.keySet();  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.keySet();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.keySet();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
499	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.getAll();  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.getAll();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  allExtraFields  =  allExtraFields.getAll();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
500	[BUG]  [BUGGY]  final  ZipExtraField[]  f  =  allExtraFields.keySet();  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField[]  f  =  allExtraFields.keySet();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField[]  f  =  allExtraFields.keySet();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
501	[BUG]  [BUGGY]  addExtraField(element,  f,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  EMPTY);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
502	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  f,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  f,  local);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
503	[BUG]  [BUGGY]  setExtraFields(externalAttributes,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(externalAttributes,  extraFieldsNoCopy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributes,  extraFieldsNoCopy);	  setExtraFields(f,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
504	[BUG]  [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
505	[BUG]  [BUGGY]  addExtraFields(externalAttributes,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(externalAttributes,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(externalAttributes,  cpb);	  addExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
506	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpb,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpb,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpb,  externalAttributes);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
507	[BUG]  [BUGGY]  unparseableExtraFields(f,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  extraFields);	  unparseableExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
508	[BUG]  [BUGGY]  removeExtraFields(f,  this,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  this,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  this,  externalAttributes);	  removeExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
509	[BUG]  [BUGGY]  addExtraField(element,  null,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  null,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  null,  local);	  addExtraField(element,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
510	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(element);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.get(element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(element);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
511	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(f  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.get(f  -  1);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(f  -  1);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
512	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)extraFields.get(f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(f,  locale);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
513	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId(),  local);  addExtraField(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getHeaderId(),  local);  addExtraField(element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId(),  local);  addExtraField(element,  EMPTY);	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
514	[BUG]  [BUGGY]  if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  else  {  throw  new  ZipException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  else  {  throw  new  ZipException( " ");  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  else  {  throw  new  ZipException( " ");  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
515	[BUG]  [BUGGY]  cpy.addExtraField(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  local);	  cpy.addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
516	[BUG]  [BUGGY]  addExtraField(element,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  rawName);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  rawName);	  addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
517	[BUG]  [BUGGY]  addExtraField(element,  f.toString());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f.toString());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.toString());	  addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
518	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpy,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  cpy,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpy,  externalAttributes);	  unparseableExtraFields(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
519	[BUG]  [BUGGY]  unparseableExtraFields(f,  this,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  this,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  this,  local);	  unparseableExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
520	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(element,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element,  null);	  setExtraFieldsNoCopy(f,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
521	[BUG]  [BUGGY]  setExtraFieldsNoCopy(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(extraFields,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(extraFields,  null);	  setExtraFieldsNoCopy(f,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
522	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f.getHeaderId(),  local));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f.getHeaderId(),  local));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f.getHeaderId(),  local));	  addExtraField(element,    getExtraField(f.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
523	[BUG]  [BUGGY]  addExtraFields(element,  new  ZipExtraField[]  {  f  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  new  ZipExtraField[]  {  f  }  );  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  new  ZipExtraField[]  {  f  }  );	  addExtraFields(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
524	[BUG]  [BUGGY]  addExtraFields(element,  f,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element,  f,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  f,  internal);	  addExtraFields(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
525	[BUG]  [BUGGY]  final  ZipExtraField  f  =  allExtraFields.values();  addExtraField(element);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField  f  =  allExtraFields.values();  addExtraField(element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField  f  =  allExtraFields.values();  addExtraField(element);	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
526	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  existing  =  allExtraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  existing  =  allExtraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  existing  =  allExtraFields.values();	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
527	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  existing);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  existing);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  existing);	  ((    ZipExtraFieldData)extraFields).put(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
528	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  unparseableExtra);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  unparseableExtra);	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
529	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  f.toString());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  f.toString());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  f.toString());	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
530	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  f.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  f.getName());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  f.getName());	  addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
531	[BUG]  [BUGGY]  unparseableExtraFields(f,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  EMPTY);	  unparseableExtraFields(f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
532	[BUG]  [BUGGY]  (ZipExtraField)super.extraFields.get(f);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  (ZipExtraField)super.extraFields.get(f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)super.extraFields.get(f);	  (ZipExtraField)extraFields.get(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
533	[BUG]  [BUGGY]  addExtraField(element,  extraFieldsNoCopy,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  extraFieldsNoCopy,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  extraFieldsNoCopy,  locale);	  addExtraField(element,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
534	[BUG]  [BUGGY]  cpy.addExtraField(f,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(f,  extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(f,  extraFields);	  cpy.addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
535	[BUG]  [BUGGY]  cpy.setExtraFields(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.setExtraFields(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.setExtraFields(extraFields);	  cpy.addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
536	[BUG]  [BUGGY]  cpy.addExtraField(element,  getExtraField(element.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  getExtraField(element.getHeaderId()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  getExtraField(element.getHeaderId()));	  cpy.addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
537	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  outer);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  outer);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  outer);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
538	[BUG]  [BUGGY]  unparseableExtraFields(f,  src,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  src,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src,  internal);	  unparseableExtraFields(f,    src);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
539	[BUG]  [BUGGY]  addExtraField(element,  EMPTY,  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  EMPTY,  f,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY,  f,  locale);	  addExtraField(element,    f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
540	[BUG]  [BUGGY]  addExtraField(element,  f,  this.local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  this.local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  this.local);	  addExtraField(element,    f,    locale);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
541	[BUG]  [BUGGY]  setExtraFields(element.getExtraFieldsNoCopy(),  f);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(element.getExtraFieldsNoCopy(),  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(element.getExtraFieldsNoCopy(),  f);	  setExtraFields(element.getExtraFieldsNoCopy());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
542	[BUG]  [BUGGY]  setExtraFields(element.getExtraFieldsNoCopy(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(element.getExtraFieldsNoCopy(),  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(element.getExtraFieldsNoCopy(),  local);	  setExtraFields(element.getExtraFieldsNoCopy());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
543	[BUG]  [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  parent.getExtraFields())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  parent.getExtraFields())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null)  {  for(final  ZipExtraField  f  :  parent.getExtraFields())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
544	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  existing  =  getExtraField(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  existing  =  getExtraField(element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  existing  =  getExtraField(element.getHeaderId());	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
545	[BUG]  [BUGGY]  final  ZipExtraField  f  =  allExtraFields.length;  addExtraField(element);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField  f  =  allExtraFields.length;  addExtraField(element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField  f  =  allExtraFields.length;  addExtraField(element);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.length)    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
546	[BUG]  [BUGGY]  cpb.removeExtraField(f);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpb.removeExtraField(f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpb.removeExtraField(f);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
547	[BUG]  [BUGGY]  removeExtraField(element,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(element,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(element,  cpb);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
548	[BUG]  [BUGGY]  addExtraField(element,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  cpb);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  cpb);	  removeExtraFields(f,    cpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
549	[BUG]  [BUGGY]  addExtraField(element.getFullName(),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getFullName(),  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getFullName(),  this);	  addExtraField(element.getFullName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
550	[BUG]  [BUGGY]  setExtraFields(cpy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(cpy,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(cpy,  f);	  setExtraFieldsNoCopy(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
551	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(element.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element.getHeaderId());	  setExtraFieldsNoCopy(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
552	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(element,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element,  f);	  setExtraFieldsNoCopy(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
553	[BUG]  [BUGGY]  removeExtraFields(f,  externalAttributes,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  externalAttributes,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  externalAttributes,  internal);	  removeExtraFields(f,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
554	[BUG]  [BUGGY]  addExtraField(element,  f,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  unparseableExtra);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  unparseableExtra);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
555	[BUG]  [BUGGY]  addExtraField(element,  f,  this);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  this);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
556	[BUG]  [BUGGY]  addExtraField(element,  f,  inner);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  inner);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  inner);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
557	[BUG]  [BUGGY]  addExtraField(element,  f,  local,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  local,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  local,  noExtraFields);	  addExtraField(element,    f,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
558	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  sourceFile,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile,  cpy);	  unparseableExtraFields(f,    sourceFile);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
559	[BUG]  [BUGGY]  addExtraField(element,  f,  innerAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  innerAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  innerAttributes,  local);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
560	[BUG]  [BUGGY]  addExtraField(element,  f,  internalAttributes,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  internalAttributes,  locale);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  internalAttributes,  locale);	  addExtraField(element,    f,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
561	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(element);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
562	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
563	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
564	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element.getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(element.getExtraFields());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element.getExtraFields());	  setExtraFieldsNoCopy(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
565	[BUG]  [BUGGY]  setExtraFieldsNoCopy(extraFields.cloneTree());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(extraFields.cloneTree());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(extraFields.cloneTree());	  setExtraFieldsNoCopy(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
566	[BUG]  [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
567	[BUG]  [BUGGY]  Iterator  <  ZipExtraField>  it  =  allExtraFields.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  Iterator  <  ZipExtraField>  it  =  allExtraFields.iterator();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	Iterator  <  ZipExtraField>  it  =  allExtraFields.iterator();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
568	[BUG]  [BUGGY]  Iterator  <  ZipExtraField>  it  =  allExtraFields.values().iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  Iterator  <  ZipExtraField>  it  =  allExtraFields.values().iterator();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	Iterator  <  ZipExtraField>  it  =  allExtraFields.values().iterator();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
569	[BUG]  [BUGGY]  Iterator  <  ZipExtraField>  cpy  =  allExtraFields.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  Iterator  <  ZipExtraField>  cpy  =  allExtraFields.iterator();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	Iterator  <  ZipExtraField>  cpy  =  allExtraFields.iterator();	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
570	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  null,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFieldsNoCopy(f,  null,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  null,  local);	  setExtraFieldsNoCopy(f,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
571	[BUG]  [BUGGY]  f  =  getExtraField(element.getFactory());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  f  =  getExtraField(element.getFactory());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getFactory());	  f    =    getExtraField(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
572	[BUG]  [BUGGY]  final  ZipExtraField  f  =  allExtraFields.keySet();  addExtraField(element);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  final  ZipExtraField  f  =  allExtraFields.keySet();  addExtraField(element);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	final  ZipExtraField  f  =  allExtraFields.keySet();  addExtraField(element);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.keySet())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
573	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(externalAttributes  ==  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(externalAttributes  ==  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
574	[BUG]  [BUGGY]  if(externalAttributes!=  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(externalAttributes!=  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(externalAttributes!=  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
575	[BUG]  [BUGGY]  if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
576	[BUG]  [BUGGY]  if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  else  {  throw  new  ZipExtraException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  else  {  throw  new  ZipExtraException( " ");  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  }  else  {  throw  new  ZipExtraException( " ");  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
577	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
578	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
579	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  externalFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  externalFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  externalFields.values())  {  addExtraField(element);  }	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
580	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  other.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  other.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  other.values())  {  addExtraField(element);  }	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
581	[BUG]  [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  extraFields.values();  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributes  <  ZipExtraField>  allExtraFields  =  extraFields.values();  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributes  <  ZipExtraField>  allExtraFields  =  extraFields.values();	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
582	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  children.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  children.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields!=  null)  {  for(final  ZipExtraField  f  :  children.values())  {  addExtraField(element);  }	  if(extraFields!=    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
583	[BUG]  [BUGGY]  addExtraField(element,  f.getImmediateParentPointer());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f.getImmediateParentPointer());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.getImmediateParentPointer());	  addExtraField(element,    f.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
584	[BUG]  [BUGGY]  addExtraFields(element.getHeaderId(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraFields(element.getHeaderId(),  unparseableExtra);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getHeaderId(),  unparseableExtra);	  addExtraFields(element.getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
585	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  unparseableExtra);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  unparseableExtra);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
586	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  f,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element.getHeaderId(),  f,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  f,  internal);	  addExtraField(element.getHeaderId(),    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
587	[BUG]  [BUGGY]  addExtraField(e,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(e,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(e,  f);	  addExtraField(f,    element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
588	[BUG]  [BUGGY]  removeExtraFields(f,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(f,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  EMPTY);	  removeExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
589	[BUG]  [BUGGY]  setExtraFields(f,  extraFieldsNoCopy,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(f,  extraFieldsNoCopy,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(f,  extraFieldsNoCopy,  cpy);	  setExtraFields(f,    extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
590	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(externalAttributes  ==  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(externalAttributes  ==  null)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
591	[BUG]  [BUGGY]  if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(element  instanceof  ZipExtraFieldData)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
592	[BUG]  [BUGGY]  if(unparseableExtra)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(unparseableExtra)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(unparseableExtra)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
593	[BUG]  [BUGGY]  if(!local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  if(!local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(!local)  {  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  }	  f    =    getExtraField(element.getHeaderId());    addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
594	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
595	[BUG]  [BUGGY]  for(final  ZipExtraField  element  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  element  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  element  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(element);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
596	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes    ==    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
597	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
598	[BUG]  [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
599	[BUG]  [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(this))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(this))  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(this))  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
600	[BUG]  [BUGGY]  ExternalAttributesExtraField[]  extraFields  =  allExtraFields.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  ExternalAttributesExtraField[]  extraFields  =  allExtraFields.toArray(extraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	ExternalAttributesExtraField[]  extraFields  =  allExtraFields.toArray(extraFields);	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    allExtraFields.toArray(extraFields))    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
601	[BUG]  [BUGGY]  addExtraField(e,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(e,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(e,  cpy);	  addExtraField(f,    cpy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
602	[BUG]  [BUGGY]  cpy.addExtraField(element,  EMPTY,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  EMPTY,  unparseableExtra);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  EMPTY,  unparseableExtra);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
603	[BUG]  [BUGGY]  cpy.addExtraField(element,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  externalAttributes);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  externalAttributes);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
604	[BUG]  [BUGGY]  cpy.addExtraField(element,  EMPTY,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  EMPTY,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  EMPTY,  internal);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
605	[BUG]  [BUGGY]  cpy.addExtraField(f,  element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(f,  element,  EMPTY);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(f,  element,  EMPTY);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
606	[BUG]  [BUGGY]  cpy.addExtraField(element,  EMPTY,  expr);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(element,  EMPTY,  expr);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  EMPTY,  expr);	  cpy.addExtraField(element,    EMPTY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
607	[BUG]  [BUGGY]  removeExtraField(element,  getExtraField(element.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(element,  getExtraField(element.getHeaderId()));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(element,  getExtraField(element.getHeaderId()));	  removeExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
608	[BUG]  [BUGGY]  removeExtraField(element,  f.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraField(element,  f.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(element,  f.getHeaderId());	  removeExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
609	[BUG]  [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
610	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
611	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  this.extraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
612	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  parent.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
613	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  children.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  children.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  children.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
614	[BUG]  [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  other.extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  other.extraFields.values())  {  addExtraField(element);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	parent  ==  null  ||  extraFields.values()!=  null)  {  for(final  ZipExtraField  f  :  other.extraFields.values())  {  addExtraField(element);  }	  if(extraFields    ==    null)    {    for(final    ZipExtraField    f    :    extraFields.values())    {    addExtraField(element);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
615	[BUG]  [BUGGY]  cpy.addExtraField(externalAttributes,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraField(externalAttributes,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(externalAttributes,  f);	  addExtraField(externalAttributes,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
616	[BUG]  [BUGGY]  setExtraFields(externalAttributes,  local);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(externalAttributes,  local);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributes,  local);	  setExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
617	[BUG]  [BUGGY]  setExtraFields(externalAttributes,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(externalAttributes,  true);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributes,  true);	  setExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
618	[BUG]  [BUGGY]  removeExtraFields(externalAttributes,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(externalAttributes,  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(externalAttributes,  this);	  removeExtraFields(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
619	[BUG]  [BUGGY]  unparseableExtraFields(f,  b,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  b,  internal);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b,  internal);	  unparseableExtraFields(f,    b);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
620	[BUG]  [BUGGY]  cpy.addExtraFields(extraFields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  cpy.addExtraFields(extraFields,  f);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraFields(extraFields,  f);	  addExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
621	[BUG]  [BUGGY]  setExtraFields(extraFields,  f,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  setExtraFields(extraFields,  f,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  f,  null);	  setExtraFields(extraFields,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
622	[BUG]  [BUGGY]  removeExtraFields(element,  f.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  removeExtraFields(element,  f.getHeaderId());  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element,  f.getHeaderId());	  removeExtraFields(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
623	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  local,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(f),  local,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  local,  noExtraFields);	  addExtraField(element,    getExtraField(f),    local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
624	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()),  this);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()),  this);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getHeaderId()),  this);	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
625	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()  +  1));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()  +  1));  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getHeaderId()  +  1));	  addExtraField(element,    getExtraField(element.getHeaderId()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
626	[BUG]  [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	For(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
627	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()),  local)  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	  for(final    ZipExtraField    f    :    getExtraFields(f.getHeaderId()))    {    if(internalAttributes!=    null)    {    addExtraField(f);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
628	[BUG]  [BUGGY]  addExtraField(element,  f,  internal,  noExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  internal,  noExtraFields);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  internal,  noExtraFields);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
629	[BUG]  [BUGGY]  addExtraField(element,  f,  internal,  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  addExtraField(element,  f,  internal,  null);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  internal,  null);	  addExtraField(element,    f,    internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
630	[BUG]  [BUGGY]  unparseableExtraFields(f,  this,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      throws  ZipException  {  if  (extraFields  ==  null)  {      [BUGGY]  unparseableExtraFields(f,  this,  cpy);  [BUGGY]      }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  this,  cpy);	  unparseableExtraFields(f,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
