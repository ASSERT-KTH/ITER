bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  addExtraField(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields);	  addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
2	[BUG]  [BUGGY]  addExtraField(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(externalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes);	  addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
3	[BUG]  [BUGGY]  removeExtraField(element);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraField(element);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraField(element);	  addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
4	[BUG]  [BUGGY]  addExtraField(element,  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  null);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  null);	  addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
5	[BUG]  [BUGGY]  addExtraField(extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(extraFieldsNoCopy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFieldsNoCopy);	  addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
6	[BUG]  [BUGGY]  addExtraField(extraFields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(extraFields,  f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(extraFields,  f);	  addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
7	[BUG]  [BUGGY]  cpy.addExtraField(f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  cpy.addExtraField(f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(f);	  addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
8	[BUG]  [BUGGY]  addExtraField(f,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(f,  cpy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  cpy);	  addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
9	[BUG]  [BUGGY]  setExtraFieldsNoCopy(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFieldsNoCopy(extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(extraFields);	  setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
10	[BUG]  [BUGGY]  setExtraFields(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFields(externalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(externalAttributes);	  setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
11	[BUG]  [BUGGY]  setExtraFields(f,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFields(f,  extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(f,  extraFields);	  setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
12	[BUG]  [BUGGY]  setExtraFields(extraFields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFields(extraFields,  f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFields,  f);	  setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
13	[BUG]  [BUGGY]  (ZipExtraField)extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  (ZipExtraField)extraFields.clone();  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.clone();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
14	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes  ==  null)  {  addExtraField(f);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
15	[BUG]  [BUGGY]  (ZipExtraField)extraFields.get(f);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  (ZipExtraField)extraFields.get(f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	(ZipExtraField)extraFields.get(f);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
16	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(internalAttributes!=  null)  {  addExtraField(f);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
17	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  f  =  getExtraField(element.getHeaderId());  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
18	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(f);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  addExtraField(f);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
19	[BUG]  [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(local)  {  addExtraField(f);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(local)  {  addExtraField(f);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	for(final  ZipExtraField  f  :  getExtraFields(f.getHeaderId()))  {  if(local)  {  addExtraField(f);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
20	[BUG]  [BUGGY]  removeExtraFields(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(extraFields);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
21	[BUG]  [BUGGY]  removeExtraFields(f,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(f,  extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  extraFields);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
22	[BUG]  [BUGGY]  removeExtraFields(f,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(f,  cpy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpy);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
23	[BUG]  [BUGGY]  removeExtraFields(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(externalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(externalAttributes);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
24	[BUG]  [BUGGY]  removeExtraFields(f,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(f,  cpb);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  cpb);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
25	[BUG]  [BUGGY]  removeExtraFields(f,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(f,  this);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  this);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
26	[BUG]  [BUGGY]  addExtraFields(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
27	[BUG]  [BUGGY]  addExtraFields(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(externalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(externalAttributes);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
28	[BUG]  [BUGGY]  addExtraFields(f,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(f,  cpy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  cpy);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
29	[BUG]  [BUGGY]  addExtraFields(f,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(f,  extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  extraFields);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
30	[BUG]  [BUGGY]  addExtraFields(extraFields,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(extraFields,  f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFields,  f);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
31	[BUG]  [BUGGY]  addExtraFields(extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(extraFieldsNoCopy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(extraFieldsNoCopy);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
32	[BUG]  [BUGGY]  setExtraFields(extraFieldsNoCopy,  f);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFields(extraFieldsNoCopy,  f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(extraFieldsNoCopy,  f);	  setExtraFields(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
33	[BUG]  [BUGGY]  setExtraFields(f,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFields(f,  extraFieldsNoCopy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(f,  extraFieldsNoCopy);	  setExtraFields(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
34	[BUG]  [BUGGY]  addExtraField(element,  f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  f,  local);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  local);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
35	[BUG]  [BUGGY]  addExtraField(element,  f,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  f,  internalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  internalAttributes);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
36	[BUG]  [BUGGY]  addExtraField(externalAttributes,  f);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(externalAttributes,  f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(externalAttributes,  f);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
37	[BUG]  [BUGGY]  addExtraField(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  EMPTY);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  EMPTY);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
38	[BUG]  [BUGGY]  addExtraField(f,  element);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(f,  element);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(f,  element);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
39	[BUG]  [BUGGY]  addExtraField(element,  f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  f,  locale);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  locale);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
40	[BUG]  [BUGGY]  unparseableExtraFields(f,  src);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  src);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  src);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
41	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  cpb);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpb);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
42	[BUG]  [BUGGY]  unparseableExtraFields(f,  this);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  this);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  this);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
43	[BUG]  [BUGGY]  unparseableExtraFields(f,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  source);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  source);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
44	[BUG]  [BUGGY]  unparseableExtraFields(f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  local);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  local);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
45	[BUG]  [BUGGY]  unparseableExtraFields(f,  b);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  b);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  b);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
46	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFieldsNoCopy(f,  extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  extraFields);	  setExtraFieldsNoCopy(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
47	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFieldsNoCopy(f,  local);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  local);	  setExtraFieldsNoCopy(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
48	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFieldsNoCopy(f,  null);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  null);	  setExtraFieldsNoCopy(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
49	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFieldsNoCopy(f,  externalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  externalAttributes);	  setExtraFieldsNoCopy(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
50	[BUG]  [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  f);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  ((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	((  ZipExtraFieldData)extraFields).put(element.getHeaderId(),  f);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
51	[BUG]  [BUGGY]  cpy.addExtraField(element);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  cpy.addExtraField(element);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
52	[BUG]  [BUGGY]  cpy.addExtraField(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  cpy.addExtraField(element,  EMPTY);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	cpy.addExtraField(element,  EMPTY);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
53	[BUG]  [BUGGY]  f  =  extractExtraFields(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  f  =  extractExtraFields(element.getHeaderId());  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  extractExtraFields(element.getHeaderId());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
54	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId());  addExtraField(element,  EMPTY);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
55	[BUG]  [BUGGY]  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	f  =  getExtraField(element.getHeaderId());  addExtraField(element,  local);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
56	[BUG]  [BUGGY]  unparseableExtraFields(f,  locale);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  locale);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  locale);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
57	[BUG]  [BUGGY]  unparseableExtraFields(f,  sourceFile);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  sourceFile);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  sourceFile);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
58	[BUG]  [BUGGY]  addExtraField(element,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  extraFields);	  setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
59	[BUG]  [BUGGY]  setExtraFieldsNoCopy(element);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFieldsNoCopy(element);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(element);	  setExtraFieldsNoCopy(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
60	[BUG]  [BUGGY]  setExtraFieldsNoCopy(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFieldsNoCopy(externalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(externalAttributes);	  setExtraFieldsNoCopy(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
61	[BUG]  [BUGGY]  addExtraField(element,  extraFieldsNoCopy);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  extraFieldsNoCopy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  extraFieldsNoCopy);	  setExtraFields(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
62	[BUG]  [BUGGY]  setExtraFields(element.getExtraFieldsNoCopy());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFields(element.getExtraFieldsNoCopy());  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(element.getExtraFieldsNoCopy());	  setExtraFields(extraFieldsNoCopy);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
63	[BUG]  [BUGGY]  addExtraField(element,  local);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  local);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  local);	  addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
64	[BUG]  [BUGGY]  addExtraField(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element.getHeaderId());  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId());	  addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
65	[BUG]  [BUGGY]  addExtraField(element.getFullName());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element.getFullName());  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getFullName());	  addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
66	[BUG]  [BUGGY]  removeExtraFields(element);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(element);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(element);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
67	[BUG]  [BUGGY]  removeExtraFields(f,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(f,  local);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  local);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
68	[BUG]  [BUGGY]  removeExtraFields(f,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  removeExtraFields(f,  externalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	removeExtraFields(f,  externalAttributes);	  removeExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
69	[BUG]  [BUGGY]  addExtraField(element,  f,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  f,  externalAttributes);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  externalAttributes);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
70	[BUG]  [BUGGY]  addExtraFields(element);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(element);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
71	[BUG]  [BUGGY]  addExtraFields(element,  f);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(element,  f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element,  f);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
72	[BUG]  [BUGGY]  addExtraFields(f,  cpb);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(f,  cpb);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(f,  cpb);	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
73	[BUG]  [BUGGY]  unparseableExtraFields(f,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  unparseableExtraFields(f,  cpy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	unparseableExtraFields(f,  cpy);	  unparseableExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
74	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  getExtraField(element.getHeaderId()));  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(element.getHeaderId()));	  addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
75	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f.getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  getExtraField(f.getHeaderId()));  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f.getHeaderId()));	  addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
76	[BUG]  [BUGGY]  addExtraField(element,  f.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  f.getHeaderId());  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f.getHeaderId());	  addExtraField(element);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
77	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
78	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  allExtraFields.values())  {  addExtraField(element);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
79	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
80	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(extraFields!=  null)  {  for(final  ZipExtraField  f  :  extraFields.values())  {  addExtraField(element);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
81	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.toArray(extraFields))  {  addExtraField(element);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
82	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.length)  {  addExtraField(element);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
83	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	if(extraFields  ==  null)  {  for(final  ZipExtraField  f  :  allExtraFields.keySet())  {  addExtraField(element);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
84	[BUG]  [BUGGY]  addExtraFields(element.getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraFields(element.getHeaderId());  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraFields(element.getHeaderId());	  addExtraFields(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
85	[BUG]  [BUGGY]  addExtraField(element,  f,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  f,  internal);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  f,  internal);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
86	[BUG]  [BUGGY]  addExtraField(element,  getExtraField(f),  local);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element,  getExtraField(f),  local);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element,  getExtraField(f),  local);	  addExtraField(element,    f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
87	[BUG]  [BUGGY]  setExtraFields(element.getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFields(element.getExtraFields());  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(element.getExtraFields());	  setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
88	[BUG]  [BUGGY]  setExtraFields(element,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFields(element,  extraFields);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFields(element,  extraFields);	  setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
89	[BUG]  [BUGGY]  setExtraFieldsNoCopy(f,  cpy);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  setExtraFieldsNoCopy(f,  cpy);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	setExtraFieldsNoCopy(f,  cpy);	  setExtraFieldsNoCopy(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
90	[BUG]  [BUGGY]  addExtraField(element.getHeaderId(),  f);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    throws  ZipException  {  if  (extraFields  ==  null)  {    [BUGGY]  addExtraField(element.getHeaderId(),  f);  [BUGGY]    }  else  {  for  (final  ZipExtraField  element  :  f)  {  ZipExtraField  existing;  if  (element  instanceof  UnparseableExtraFieldData)  {  existing  =  unparseableExtra;  }  else  {  existing  =  getExtraField(element.getHeaderId());  }  if  (existing  ==  null)  {  addExtraField(element);  [CLASS]  ZipArchiveEntry  [METHOD]  mergeExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  f  final  boolean  local  [VARIABLES]  byte[]  EMPTY  b  extra  rawName  ZipExtraField  element  existing  boolean  local  ZipExtraField[]  allExtraFieldsNoCopy  central  copy  cpy  extraFields  f  fields  local  noExtraFields  parseableExtraFields  src  zipExtraFields  String  entryName  name  GeneralPurposeBit  b  gpb  other  UnparseableExtraFieldData  unparseableExtra  int  CRC_UNKNOWN  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  length  method  mode  newLen  platform  rawFlag  value  versionMadeBy  versionRequired  long  externalAttributes  size  value  	projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	1.0	724	724	1	replace	addExtraField(element.getHeaderId(),  f);	  addExtraField(f);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
