projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>externalAttributes){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>externalAttributes){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>externalAttributes){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired/1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired*1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<1?0:versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<2?1:0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired!=0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setversionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Super.setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(this.versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired-2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=externAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired&0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeByversionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setOptionalVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<=this.versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired&0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=b.versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired-=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeByVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeByVersion(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeByVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttribu
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMade(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;
