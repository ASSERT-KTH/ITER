projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>externalAttributes){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>externalAttributes){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>externalAttributes){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired/1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired*1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<1?0:versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<2?1:0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired!=0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setversionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Super.setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(this.versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired-2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=externAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired&0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeByversionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setOptionalVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<=this.versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired&0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=b.versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired-=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeByVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeByVersion(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeByVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttribu
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes>versionRequired){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMade(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=version;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFields[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields==class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields!=class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields==class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields!=class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields>>class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields[Delete]class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired/1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired*1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFi
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields==class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&versionRequired>0){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraField[]allExtraFieldsNoCopy));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraField[])allExtraFieldsNoCopy.clone();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823||versionRequired>0){this.versionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtra!=class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired-1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>=0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){if(versionRequired>=0){setVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){if(versionRequired!=0){setVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>=0){setVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionMadeBy){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired/1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateMadeByVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateVersionRequired(versionRequired,this.versionMadeBy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validate(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateAttributes(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes],interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes],interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes.size()-1];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired-0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired%0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired/0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired&1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired&1xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(i);for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZoneExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields().clone();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy(versionRequired,versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy(versionRequired,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy(versionRequired,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired/3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired*3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionMadeBy=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionMadeBy-=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Iterator<String>it=externalAttributes.iterator();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823The.versionMadeBy=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(this.versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=externAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+externAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy="version";
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy(0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823||externalAttributes>this.versionMadeBy){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823||externalAttributes>versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=this.versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired-2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){if(versionRequired<0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){if(versionRequired<0){setVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<=0){setVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionRequired(versionRequired+2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionRequired(versionRequired/1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionRequired(versionRequired+3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByVersionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired-2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired,versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired*4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired/4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired-0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired/0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired-0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired%0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired&1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired&0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=allExtraFieldsNoCopy;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=getAllExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823||allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823AllExtraFieldsNoCopy=getAllExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[size()+1];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[size()-1];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[size()*2];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[allExtraFields.length];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[size()];for(inti=0,length=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&internalAttributes!=EMPTY){this.versionMadeBy=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy.add(internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[internalAttributes.length-1];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[internalAttributes,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&internalAttributes!=EMPTY){this.versionMadeBy=internalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[internalAttributes.length];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(allExtraFieldsNoCopy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(compiler);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(outerAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(outerAttributesNoCopy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extra,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired/1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired+1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired*1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<this.versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<this.versionMadeBy){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<this.versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<this.versionRequired){this.versionMadeBy=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<this.versionMadeBy){this.versionMadeBy=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=this.versionMadeBy){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<1?1:0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<0?1:0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<2?1:-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired>=2?1:0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFi
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*2];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823staticfinalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=version;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired/4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<=this.versionMadeBy){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField[size()+1];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy.add(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraField[]allExtraFieldsNoCopy,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy.addAll(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823int[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMadeByVersion(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMadeByVersion(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMadeByVersion(versionRequired);}else{super.setVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMadeByVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMadeByVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<1?0:versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<0?0:versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired>=1?0:versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<1?0:versionMadeBy;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields!=class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields==class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy(versionRequired,versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy(versionRequired)+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getVersionMadeBy(versionRequired,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields==class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields!=class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields==class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields!=class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields>>class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.size();i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.size();i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.size();i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy)).setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy)).setVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(externalAttributes,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(externalAttributes,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(externalAttributes,versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(this.versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extendAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired+2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired/1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired+3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setversionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Super.setVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Super.setVersionRequired(this.versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Super.setVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(this.versionRequired!=versionRequired){setVersionMadeBy(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(this.versionRequired!=versionRequired){setVersionMadeBy(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(this.versionRequired!=versionRequired){setVersionMadeBy(versionRequired);}else{super.setVersionMadeBy(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823||externalAttributes>EMPTY){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy,externalAttributes));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired%2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired-1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired-4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFi
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired-=versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired-=versionMadeBy;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired-=versionRequired+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired-=versionRequired*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired+2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired/1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired+3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=versionRequired+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=versionRequired*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=versionRequired+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired*1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823int[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i>=size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823||externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes==this.versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=this.versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFieldsNoCopy.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=b.versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=b.versionRequired+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMadeByversionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired-1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired/4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=version;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields!=class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields>>class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setOptionalVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData)allExtraFieldsNoCopy.clone();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823((ZipExtraField)allExtraFieldsNoCopy).setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823((ZipExtraFieldData)allExtraFieldsNoCopy).setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&allExtraFieldsNoCopy!=null){this.versionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&allExtraFieldsNoCopy!=null){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtra!=class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtra>>class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtra==class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired-=versionRequired+4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<2?1:4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<2?1:3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setversionRequired(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields>>class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.length;i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extraAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(options);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired+3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&allExtraFieldsNoCopy!=null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823||versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=null){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes.size()>0){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823AllExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823((ZipExtraFieldData)externalAttributes).setVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy.setVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy.setVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeBy(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeBy(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZIOExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields().toArray(newZipExtraField[allExtraFields.length]);for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllEmptyFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired!=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=versionRequired+3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraFieldData[])allExtraFieldsNoCopy.clone();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=allExtraFieldsNoCopy;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(int
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateStdVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateVersionRequired(versionRequired,versionMadeBy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823validateVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Super.setVersionRequired(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired!=0){setVersionMadeBy(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired&0xff+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByVersion(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeByVersion(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=version;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFieldsNoCopy.size();i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFi
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823staticfinalZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields(i);for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields().clone();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields().toArray(newZipExtraField[allExtraFields.length]);for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(i);for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields().clone();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=getAllEmptyFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeByVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMadeBy(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(InternalAttributes)allExtraFieldsNoCopy.clone();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&internalAttributes!=EMPTY){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&internalAttributes!=EMPTY){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&internalAttributes!=EMPTY){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&internalAttributes!=EMPTY){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+8;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired,value);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByVersionRequired(versionRequired);}else{super.setVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy&=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[allExtraFields.length];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[allExtraFields.length+1];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>this.versionRequired){setVersionMadeBy(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>this.versionRequired){setVersionMadeBy(this.versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>this.versionRequired){setVersionMadeBy(this.versionRequired);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Iterator<String>externalAttributes=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionMadeBy=versionRequired+externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy&=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired+internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823((ZipExtraFieldData[])allExtraFieldsNoCopy).putAll(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired-4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeByVersionRequired(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeByVersionRequired(versionRequired-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMade(versionRequired);}else{System.arraycopy(this.versionMade,0,this.versionRequired,0,versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMade(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMade(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMade(versionRequired);}else{System.arraycopy(this.versionMade,0,this.versionRequired,1,versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields(i);for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>=versionRequired){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy(versionRequired,value);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getRequiredVersionMadeBy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFieldsNoCopy.length;i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFieldsNoCopy.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFieldsNoCopy.length;i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=getBaseVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){this.versionRequired=allExtraFieldsNoCopy;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField(allExtraFields.length);for(inti=0,size=versionRequired;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField(allExtraFields.length];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=newZipExtraField(allExtraFields.length);for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<1)?0:versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired*2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired*3;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired+0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired&1xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired==0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByversionRequired=versionRequired-4;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>0){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttribu
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extra,cpy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(outer);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extra,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extra,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeBy(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=EMPTY){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=0){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionRequired(versionRequired*1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionMadeBy(versionRequired,versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields;i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.length;i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.length;i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByversionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByversionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&versionRequired>externalAttributes){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&versionRequired>externalAttributes){this.versionMadeBy=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy-=versionRequired*versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){if(versionRequired<0){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){if(versionRequired<0){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByVersion(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByVersion(versionRequired);}else{setVersionMadeByVersion(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByVersion(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByVersion=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<=this.versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<this.versionMadeBy){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){super.setversionRequired(versionRequired);}else{System.arraycopy(this.versionMadeBy,this.versionMadeBy,0,versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){super.setversionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){super.setversionRequired(versionRequired);}else{this.versionMadeBy=versionMadeBy;setVersionMadeBy(versionMadeBy);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields!=class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields!=class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields!=class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=loadVersionMadeBy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeByRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=versionRequired){this.versionMadeBy=externalAttributes;}else{allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();){ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();){if(allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(ZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();Iterator<ZipExtraFieldData>it=allExtraFieldsNoCopy.iterator();it.hasNext();){ZipExtraFieldData[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){if(versionRequired>0){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){if(versionRequired>0){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionrequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<this.versionMade){setVersionMadeBy(this.versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>this.versionRequired){setVersionMadeBy(this.versionRequired);}else{setVersionMadeBy(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=createVersionMadeBy(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[external
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired-=versionRequired*versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823||allExtraFieldsNoCopy==null){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823Super.setVersionMadeByVersionRequired(versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=versionRequired*1L;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFields!=null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFields!=null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=zipExtraFields.getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZimbraZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFields=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields.length;i<size;++i){ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy.versionRequired=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired(versionRequired*versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=VersionMadeBy.versionRequired();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){if(versionRequired==0){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){if(versionRequired==0){this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields>>class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMadeByVersionRequired(versionRequired);}else{setVersionMadeByVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823for(inti=0,size=allExtraFields;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired*1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMadeBy(versionRequired+1,versionRequired);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823setVersionMade(versionRequired+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<=0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFields!=null){finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFields!=null){finalZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=outputAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired>2?1:0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionRequired=versionRequired<4?1:0;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(this.versionRequired==0){this.versionRequired=newZipExtraField[size()];for(inti=0,size=allExtraFields.length;i<size;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){validateVersionRequired(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){validateVersionRequired(versionRequired);}else{this.versionRequired=versionRequired;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){validateVersionRequired(versionRequired);}else{for(inti=0;i<versionRequired;++i){this.versionMadeBy
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){validateVersionRequired(versionRequired);}else{for(inti=0;i<versionRequired;++i){setVersionMadeBy
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){finalZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy!=null){finalZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(allExtraFieldsNoCopy==null){finalZipExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMade(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired<0){setVersionMade(versionRequired);}else{setVersionMade(versionRequired);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){setVersionMade(versionRequired);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(extend);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(original);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(versionRequired>0){this.versionRequired=versionRequired;}else{ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();for(inti=0;i<allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes!=null){this.versionMadeBy=externalAttributes;}else{ZipExtraFields[]allExtraFieldsNoCopy=newZipExtraFieldData[extraAttributes.size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttribu
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionMadeBy){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributors
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionMadeBy){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[external
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823this.versionMadeBy=newZipExtraField(optionalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFields[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes>this.versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes<versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823&&externalAttributes==versionRequired){this.versionMadeBy=externalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired);this.versionMadeBy=versionMadeBy;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823super.setVersionRequired(versionRequired);this.versionMadeBy=versionRequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=internalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes<=versionRequired){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[internalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=internalAttributes;}else{ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823if(externalAttributes==versionRequired){this.versionMadeBy=internalAttributes;}else{ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[internalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionMadeByv=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionMadeBy=versionrequired;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java823This.versionMadeByv=versionRequired;
