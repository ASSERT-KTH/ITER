projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orenumexpected);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orenum);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(this.rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}else{super.setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getRawExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=cpy.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getAllExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<Object,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i+1,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]+1);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=1;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(this.rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createExternalAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getEmptyAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashSet<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getEmptyExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY};
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,"");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()],}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&0xff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&0xfff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(null,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extractExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,Object>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributesNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNo
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
