projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orenumexpected);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orenum);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(this.rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}else{super.setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getRawExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=cpy.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getAllExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<Object,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i+1,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]+1);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=1;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(this.rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createExternalAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getEmptyAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashSet<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getEmptyExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY};
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,"");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()],}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&0xff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&0xfff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(null,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extractExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,Object>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributesNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNo
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,internalAttributes,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,internalAttributes,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,internalAttributes,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields==class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields==class,interface,orenumexpected
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields==class,interface,orenum
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getRawExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getRawExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getRawExtraFields(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[0];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[width];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(8);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(raf,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=findExternalAttributes(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),allExtraFieldsNoCopy==null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields());allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,EMPTY,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,EMPTY,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,EMPTY,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,EMPTY,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(i+1,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<this.rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=1;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859For(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashSet<ZipExtraField>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(extra,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<ZipExtraField>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(allExtraFieldsNoCopy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<ZipExtraField>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,len=rawFlag.length;i<len;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,len=rawFlag.length;i<len;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null||rawFlag.length()==0){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawFlag,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawFlag,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawFlag,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<allExtraFieldsNoCopy.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<allExtraFields.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i+1,rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i].setName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=1;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=1;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,1,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==0){setRawFlag(rawFlag);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag>=0){setRawFlag(rawFlag);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),noExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields==null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,this);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashMap<String,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i>=size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<allExtraFieldsNoCopy.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag,allExtraFieldsNoCopy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag,noExtraFields);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag,zipExtraFields);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashSet<ZipExtraField>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<ZipExtraField>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newlong[rawFlag];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=rawFlag?externalAttributes:internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newLong(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=rawFlag?null:externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<allExtraFieldsNoCopy.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,this.interface,orenumexpected);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,rawFlag,orenumexpected);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,expected,orenum);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orenum;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag-0xfff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag/0xfff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag+0xfff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag%0xfff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFieldsNoCopy(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFieldsNoCopy(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getAllExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=1;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=1;i<rawFlag.length;++i){setRawFlag(0,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=1;i<rawFlag.length;++i){setRawFlag(i,rawFlag[0]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859NoExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy==null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859AllExtraFieldsNoCopy=getAllExtraFields();noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields=noneExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Super.setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(extra,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(),rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(),rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(),rawFlag,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(),rawFlag,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(),rawFlag,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i+1,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag+1];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag*2];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag+2];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag*4];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag*3];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag+3];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null||rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null||rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null||rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag/1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag-3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag*1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag+2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag+3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==0){setRawFlag(rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(this.rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag.length>0){if(rawFlag!=0){setRawFlag(rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag.length>0){if(rawFlag!=0){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag.length!=0){setRawFlag(rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag.length==0){setRawFlag(rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||allExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&PLATFORM_FAT);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag-PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag+PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag%PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&SHORT_MASK);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag/PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null||rawFlag.length==0){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859System.arraycopy(rawFlag,0,allExtraFieldsNoCopy,0,rawFlag.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<this.rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;++i){setRawFlag(i+1,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extractExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extractExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=allExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=cpy.extraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==0){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag>=0){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newLinkedHashMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<EMPTY,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newTreeMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,EMPTY>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<Object,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashMap<Object,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<Object,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()[0];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]+1);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]+1);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]+2);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i+1,rawFlag[i]+1);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]+3);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>(0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>(2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<allExtraFieldsNoCopy.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<allExtraFieldsNoCopy.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashMap<EMPTY,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,EMPTY>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<EMPTY,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.setExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.getExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.getExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag-PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag+PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag%PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag/PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&CRC_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createRawExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createEmptyFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createExtraFields(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){setRawFlag(rawFlag);}else{super.setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){this.rawFlag=rawFlag;}else{super.setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY+1};
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,String,EMPTY};
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY{;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>>>;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newjava.util.ArrayList<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashSet<ZipExtraField>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag-1,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawFlag-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag/1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributesNoCopy(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributesNoCopy(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributesNoOpy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributesNoCopy()/2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNo
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNo
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNo
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()*1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()-1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,null,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,null,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashSet<String>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashSet<Long>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=1;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length-1;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<allExtraFields.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=externalAttributes.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<externalAttributes.length;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields==null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy==null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFields=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),noneExtraFields!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859This.externalAttributes=getExternalAttributes(rawFlag,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createExternalAttributes(rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=findExternalAttributes(rawFlag,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getEmptyExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getEmptyExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(rawFlag,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(rawFlag,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(rawFlag,externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Super.setRawFlag(rawFlag,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashMap<EMPTY,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()/2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()/2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()/2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,0,rawFlag.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,0L);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag.length>0){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<allExtraFieldsNoCopy.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()[rawFlag];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()/2+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==0){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=0){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(this.rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=rawFlag.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=parseableExtraFieldsNoCopy.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=cpy.getExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=allExtraFieldsNoCopy.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=cpy.getExtraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=rawFlag,cpy.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag&0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag-2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(raf,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFieldsNoCopy(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(raf,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(null,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){setRawFlag(null,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(false,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(this.rawFlag,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(newint[]{},rawFlag[i]});}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(false,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,this);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length-1;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length-2;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size*2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=allExtraFields.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,rawEmpty);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,dataArea);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,this.interface,orenum);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,rawFlag,orenum);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,internalAttributes,orenum);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null,orenum);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,any);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orb);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=rawFlag+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=EMPTY;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length-1;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=1;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length-2;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(this.rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(this.rawFlag!=rawFlag){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(this.rawFlag!=rawFlag){setRawFlag(rawFlag);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(this.rawFlag!=rawFlag){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(this.rawFlag);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&PLATFORM_FAT);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag-PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&CRC_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag+PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag%PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag/PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getEmptyAttributes(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getRequiredAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getInternalAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getEmptyAttributes(),rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,"");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,"[");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,"".);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,Object>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newLinkedHashMap<String,Object>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newTreeMap<String,Object>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<Object,Object>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,Object>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag-0xff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&1xff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag%0xff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag/0xff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag+0xff);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag*2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag-=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size+1];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag-PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&PLATFORM_UNIX,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&SHORT_MASK);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag+PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<allExtraFieldsNoCopy.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag.length>0){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()*1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()/1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<externalAttributes.length;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size+1];System.arraycopy(externalAttributes,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=externalAttributes.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>(2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createExternalAttributes(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createInternalAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createEmptyAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createRawExternalAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createRequiredAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag==EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859AllExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();noExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy==null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFields=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=noExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,interface,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size+1];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getAllExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,len=rawFlag.length;i<len;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i>=size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i*1,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=1;i<rawFlag.length;++i){setRawFlag(i+1,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashSet<EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<EMPTY>(1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy==null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859AllExtraFields[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859AllExtraFieldsNoCopy[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859AllExtraFields[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()],}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()],}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1],}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1],}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){setRawFlag(rawFlag);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}else{this.rawFlag=RawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<allExtraFieldsNoCopy.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=newZipExtraField[size()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<allExtraFields.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<String,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<Object,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<EMPTY,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){this.rawFlag=rawFlag;}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Preconditions.checkState(rawFlag!=null){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag*PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&SHORT_SHIFT);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(),rawFlag+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*4];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*3];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,EMPTY};
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,EMPTY>(2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,EMPTY>(4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&extra!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag,cpb);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,Object>(8);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newArrayList<String,Object>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(rawFlag-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFields=getAllExtraFields();noneExtraFields!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()*1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859AllExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()+2;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,width=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(intsize=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i>=size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859For(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&noExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&noExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFi
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[2];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Preconditions.checkState(rawFlag!=0){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag>=0){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,""+rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i].getName()+1);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributesRequired();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributesNoCopy()+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(this.rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(this.rawFlag);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(this.rawFlag);}else{ZipExtraFieldData[]allExtraFields=getAllExtraFields();for(inti=0;i<allExtraFields.length;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){super.setRawFlag(rawFlag);}else{super.setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createExternalAttributes(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){this.rawFlag=rawFlag;}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag);}else{this.rawFlag=RawFlag.UNKNOWN;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashMap<ZipExtraField>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(null,rawFlag[i],}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=1;i<rawFlag.length;++i){setRawFlag(null,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(this.rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>(8);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraFieldData[])allExtraFieldsNoCopy.clone();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraAttributes=newHashMap<String,EMPTY>(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(outer);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(required);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(extra+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=READ_SHIFT;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=rawFlag-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(5);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag==EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag*PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag-PLATFORM_FAT);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(),rawFlag+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<String,EMPTY>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<String,EMPTY};
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(8);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(intsize=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(AllExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<allExtraFieldsNoCopy.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null||rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Preconditions.checkState(rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){this.rawFlag=rawFlag;}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||rawFlag!=0){setRawFlag(rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag.length);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()],System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(this.extra,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[2];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraAttributes=getExternalAttributes(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag&0xFFFF;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy==null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag*PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag%PLATFORM_FAT);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>(8);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newjava.util.ArrayList<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=rawFlag+cpy.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extra.getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY!=;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY==;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>>;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY[Delete];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>=;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[rawFlag-1];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,length=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,width=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,0,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCo
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859SetRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<ZipExtraField>(8);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<ZipExtraField>(4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(6);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[external
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttribu
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalA
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(noExtraFields!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes()[0];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null||rawFlag.length<0){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.unparseableExtraFields;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.findExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i+1+rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i+2,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i+0,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag&0xff;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag&0xFFFF;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy==null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields(),allExtraFieldsNoCopy==null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag*1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag-1+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(i,"");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(intsize=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<allExtraFieldsNoCopy.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag&0xff,rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getSrcExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<externalAttributes.length;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(intsize=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag%PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag&SHORT_SHIFT);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(intsize=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()-1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag,"true");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,EMPTY>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,EMPTY>(4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,EMPTY>(2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(intsize=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.arraycopy(allExtraFields,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFi
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Preconditions.checkState(rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(this.rawFlag);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]*1);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extraFieldsNoCopy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,0,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,value);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,null,orenumexpected);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orother);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&allExtraFieldsNoCopy.length==0)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&allExtraFieldsNoCopy.size()>size)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&rawFlag.length>0)||(allExtraFieldsNoCopy.length>0)){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&allExtraFieldsNoCopy.length==0)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&allExtraFieldsNoCopy.size()>size)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&allExtraFieldsNoCopy.length==0)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[rawFlag.length];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(intsize=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i>=size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()-1];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859AllExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createEmptyExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=addExtraFields(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createExtraFields(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(raf,cpb);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(raf);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,this);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,1,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getEmptyAttributes()-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<EMPTY>(8);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=rawFlag;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[class
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=newVersionMadeBy(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=newVersionMadeBy();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.versionMadeBy=rawFlag&SHORT_MASK;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Set<String>rawFlag=setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859NoExtraFieldData[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNo
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=1){setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields());allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(raf,internalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(required);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[external
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[external
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[externalAttributes
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()+1];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.size();i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{thrownewIllegalArgumentException("".);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;++i){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY{};
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[this.rawFlag];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[RawFlag];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newbyte[raf];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedHashMap<String,EMPTY>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<allExtraFields.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<allExtraFields.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeMap<String,EMPTY>(outer);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newTreeSet<ZipExtraField>(extends);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<EMPTY>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orEMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields!=null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFields=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newAttributes(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orenum<expected);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orother.expected);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,interface,orannotated);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newLong(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newLong(externalAttributes.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=1;i<this.rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=2;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,",");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extraFields;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFi
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag|PLATFORM_UNIX);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(-1,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<rawFlag.length;++i){setRawFlag(this.rawFlag,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=extractExtraFields(cpy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,output);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;++i){setRawFlag(i,rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(null,rawFlag[i].getName());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()],}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()],}}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,DEFAULT_REQUIRED);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(raf)+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;++i){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<length;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.size;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRaw(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,Object>(4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,Object>(2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()[0];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>(extraFields);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newArrayList<ZipExtraField>(extends);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag)-1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()]}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&allExtraFieldsNoCopy.size()>0)){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag|PLATFORM_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<externalAttributes.length;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(external
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&externalAttributes!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[extern
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>(extraFields);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag.intValue);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(raf);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFi
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=super.setExtraFields(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.internalAttributes=newHashMap<String,EMPTY>(extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()[0];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFields[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(this.rawFlag!=rawFlag){setRawFlag(this.rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(this.rawFlag!=rawFlag){setRawFlag(this.rawFlag);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(this.rawFlag!=rawFlag){setRawFlag(this.rawFlag);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(this.rawFlag!=rawFlag){setRawFlag(this.rawFlag);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[3];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFields<null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<this.rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<allExtraFields.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&(allExtraFieldsNoCopy==null||allExtraFieldsNoCopy.length!=0)){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<EMPTY,EMPTY>(outer);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=EMPTY){setRawFlag(rawFlag);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){setRawFlag(rawFlag.intValue);}else{this.rawFlag=rawFlag;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields()||allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=1){setRawFlag(rawFlag);}else{System.arraycopy(rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{System.arraycopy(this.rawFlag,0,this.rawFlag,0,rawFlag.length);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Arrays.asList(allExtraFieldsNoCopy)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Arrays.asList(allExtraFieldsNoCopy)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&allExtraFieldsNoCopy.size()>size)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]all
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859||(allExtraFieldsNoCopy!=null&&allExtraFieldsNoCopy.contains(rawFlag))){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag&SHORT_SHIFT;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.rawFlag=rawFlag&SHORT_MASK;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=createExtraFields(raw);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null&&rawFlag.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFields!=null){allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,1,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=createExternalAttributes(required);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859(ZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields()||allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();noneExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859AllExtraFields=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCo
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()*2];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(class
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;++i){setRawFlag(i,rawFlag[i]+1);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<length;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.size;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>(rawFlag-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[0];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[1];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arra
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[width]
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag,allExtraFields);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag,cpy);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields(rawFlag)+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(this.rawFlag!=null){for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<this.rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Arrays.asList(externalAttributes)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Arrays.asList(externalAttributes)){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=new
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newLinkedList<ZipExtraField>(4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;++i){setRawFlag(i,rawFlag[i].doubleValue());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()+1];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null||rawFlag.length<2){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(externalAttributes!=null&&externalAttributes.length>0){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=EMPTY){setRawFlag(rawFlag);}else{super.setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=0){setRawFlag(rawFlag);}else{super.setRawFlag(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()].
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag!=EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859&&rawFlag==EMPTY){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859Arrays.asList(allExtraFieldsNoCopy)){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(allExtraFieldsNoCopy==null||allExtraFieldsNoCopy.length!=0){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag,EMPTY+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<this.rawFlag.length;++i){setRawFlag(null,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(null,rawFlag[i],outerAttributes);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag-3);
