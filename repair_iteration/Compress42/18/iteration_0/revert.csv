projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){setRawFlag(i,rawFlag[i]);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];System.arraycopy(allExtraFields,0,allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(finalZipExtraField[]allExtraFieldsNoCopy=getAllExtraFields();allExtraFieldsNoCopy!=null;noneExtraFields=allExtraFieldsNoCopy.length;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0;i<rawFlag.length;++i){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag==null){for(inti=0;i<rawFlag.length;i++){ZipExtraField[]allExtraFieldsNoCopy=newZipExtraField[size()];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];System.arraycopy(externalAttributes,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size];}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields,0,
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859if(rawFlag!=null){for(inti=0,size=rawFlag.length;i<size;i++){ZipExtraFieldData[]allExtraFieldsNoCopy=newZipExtraFieldData[size()];System.arraycopy(allExtraFields
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859super.setRawFlag(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=getExternalAttributes(rawFlag);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.extraFields=getExtraFields();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashMap<String,EMPTY>();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java859this.externalAttributes=newHashSet<ZipExtraField>();
