projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null||name.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){setName(name);}else{zipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null||name.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){setName(name);}else{Preconditions.checkNotNull(rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRequired(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRaw(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkNotNull(rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){setRawName(name);}else{super.setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null||name.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null||rawName.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||rawName.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null||name.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null||rawName.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length()==0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=externalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(this.rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{zipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{zipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||rawName.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(name!=null||name.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=name;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toCharArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){setRawName(name);}else{super.setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.size();++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name!=null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newString[]{});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0],null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{Preconditions.checkNotNull(rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkNotNull(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{Preconditions.checkNotNull(rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName?EMPTY:name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRawName(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+"n");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||name.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||name.length()==0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newbyte[name.length()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name!=null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getValue());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getBytes());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null&&name.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.substring(0,rawName.length));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length()-2);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length()-2);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=zipExtraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toCharArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName!=null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null&&name.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null&&name.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet();setName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName==null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null&&name.length()>0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName==null&&name.length()>0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null&&rawName.length()>0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName>=null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{EMPTY});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{0,rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{name});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{sourceName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{rawName,EMPTY});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||name.length()==0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName.length()==0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&rawName.length()>0)){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&rawName.charAt(0)!='-')){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658StringrawName=name.substring(0,name.length()-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&rawName.charAt(0)!='/')){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=name.substring(0,name.length()-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalSet<String>rawName=zipExtraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=allExtraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=zipExtraFields.get(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=noExtraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=cpyExtraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=zipExtraFields.get(name+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toLowerCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toLowerCase(),false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toLowerCase(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toLowerCase(),EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toByteArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toUpperCase(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toUpperCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toUpperCase(),rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toLowerCase(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalSet<String>rawNames=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658ArrayList<String>rawNames=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658List<String>rawNames=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Collection<String>rawNames=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658List<String>rawNames=Sets.newArrayList();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRequired(name,rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRequired(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRequired(name,rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setValue(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length==0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(!name.equals(""));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(!name.equals(""));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length()!=0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length());if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length());if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()-2);if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length());if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringentryName=name.substring(0,name.length());if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length());if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()-1);if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setRawName(name);}else{super.setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setRawName(name);}else{super.setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()-1);if(rawName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[]{EMPTY});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,newbyte[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[]{0,rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[]{name});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,newbyte[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,newbyte[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRaw(name,rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRaw(name,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRaw(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRaw(name,rawName,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(rawName!=null&&name.length()>0)||(name.charAt(name.length()-1)!='/')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(rawName!=null&&name.length()>0)||(name.charAt(name.length()-1)=='/')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name==null&&rawName.length()>0)||(name.charAt(name.length()-1)!='/')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(rawName==null&&name.length()>0)||(name.charAt(name.length()-1)!='/')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name!=null&&rawName.length()>0)||(name.charAt(name.length()-1)!='/')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||rawName.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||rawName.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||name.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&rawName.length()>0)){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&rawName.charAt(name.length()-1)!='/')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&rawName.charAt(0)!='-')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&rawName.charAt(0)!='/')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase(),false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toLowerCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setFlag(name.toLowerCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name.toLowerCase(),false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toString(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||rawName.length()!=0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyte[]rawName=zipExtraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName==null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName==null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalPreconditions.checkState(rawName!=null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(rawName!=null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null&&rawName.length()>0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0],rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0],null,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0],EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0],rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,newbyte[0],null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0],rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,newbyte[0],rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newbyte[name.length()+1];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newbyte[name.length()-1];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newbyte[name.length()*2];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newbyte[name.length()+2];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newbyte[name.length()+3];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newbyte[name.length()+4];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getValue(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getValue(),EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getValue(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.getValue());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getValue()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getValue(),this);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,this);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,newbyte[0]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,this.extern);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,READ_UNKNOWN);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName.length()==0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName.length()==0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length()==1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length()==2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length()>0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,newbyte[0]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,newbyte[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658ZipExtraFields.put(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,newbyte[]{EMPTY});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[1],rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toLowerCase(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toLowerCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toLowerCase(),rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toLowerCase(),rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName.length()==0){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658StringrawName=name.substring(0,name.length()-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toLowerCase(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toString(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setString(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||rawName!=null){setName(name);}else{ZipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||rawName!=null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=rawName;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length());if(rawName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()-2);if(rawName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length());if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalSet<String>rawName=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658ArrayList<String>rawName=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658List<String>rawName=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=Sets.newHashSet(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Collection<String>rawName=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658byte[]rawName=Sets.newHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName/1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName-1L);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName-1,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=name;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=EMPTY;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newlong[name.length()];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newLong(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=rawName;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName==null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalPreconditions.checkState(name!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()==0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||rawName.length()==0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(name==null||name.length()==0)){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||name.length()!=0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||name.length()==0){thrownewIllegalStateException("".getMessage());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,null,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,newbyte[0]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,DEFAULT_NAME);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,DEFAULT_TYPE);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyte[]rawName=name.substring(0,name.length()-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyterawName=name.substring(0,name.length()-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalSet<String>rawNames=Sets.newHashSet(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658ArrayList<String>rawNames=Sets.newHashSet(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658List<String>rawNames=Sets.newHashSet(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet(rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet(name+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName?EMPTY:EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName?EMPTY:DEFAULT_NAME);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName?EMPTY:null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length+2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length/1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName.length+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName.length+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length+3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null&&rawName.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null||rawName.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null&&name.length()>0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName!=null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(rawName!=null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name==null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name!=null&&name.length()>0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyte[]rawName=(byte[])this.rawFlags.clone();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||rawName.length()!=0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(rawName==null||rawName.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||rawName.length()>=0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+"null");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+"_");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+":");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+"");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+"mv");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+"no-data");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setPrefix(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName==null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(this.rawName!=null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName>=null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName!=name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase(),rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName="".equals(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName="";
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=newString(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=newString(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=null;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[1]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[2]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase(),rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.toLowerCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toLowerCase(),rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase(),rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toString(),rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.substring(0,rawName.length()-1));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.substring(0,rawName.length-1));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.substring(0,rawName.length()));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.substring(0,rawName.length));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.substring(0,rawName.length()-1));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.substring(0,rawName.length()-2));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraField[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraField[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size;++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()!=0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){setRawName(name,rawName);}else{super.setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.getBytes());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getBytes(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getBytes(),EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getBytes(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.getBytes(),name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName.getBytes());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName!=null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalPreconditions.checkState(name!=null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()-1);if(rawName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length()-1);if(rawName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.length+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.length-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toLowerCase(),rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.length,name.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.length-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName.length()==0){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.size();++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraField[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.size();++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraField[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.size();++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFields[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.size();++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRawName(name,rawName+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setPath(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setString(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.toUpperCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toLowerCase(),rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.toLowerCase(),rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[1]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,newbyte[0]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyte[]rawName=name.getBytes();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name!=null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.internalAttributes!=null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(!name.isEmpty());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.internalAttributes==null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,EMPTY,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,EMPTY,rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setPrefix(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||rawName.length()==0){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||rawName.length()==0){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||rawName.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||name.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()!=0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setExtra(name,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setExtraFieldName(name,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,this.extra,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(name!=null&&name.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(rawName!=null||name.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(name==null||name.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(rawName==null||name.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(name==null&&name.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(name==null||name.length()!=0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,newbyte[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.set(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,newbyte[0]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,rawName+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,newbyte[rawName.length]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,rawName-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.length-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.length+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.length-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.length,name.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.length-4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet();setRawName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet();setRawName(rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet();setRawName(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}else{Class<?>rawFlag=name.getRawClass();if(rawFlag||rawFlag.booleanValue()){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName==null){setRaw(this.rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}else{Class<?>rawFlag=EMPTY.getRawClass();if(rawFlag||rawFlag.booleanValue()){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toCharArray(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toCharArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toCharArray(),rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toCharArray()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.getValue());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toCharArray()||name.toCharArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName.length-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName.length-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName.length-4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName.length-3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],null,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[1],null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toCharArray(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toCharArray(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,rawName.toCharArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toCharArray(),false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toCharArray(),EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,false,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalSet<String>rawNames=Sets.newHashSet();setName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658ArrayList<String>rawNames=Sets.newHashSet();setName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet();setName(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet();setName(rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet();this.setName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+1,name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newlong[externalAttributes.length];
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=NameUtils.getExternalAttributes(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=NameUtils.getInternalAttributes(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null,rawName,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null,rawName,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null,rawName,0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null,rawName,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||rawName.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName.length-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setPrefix(name,rawName.length-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toUpperCase(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toUpperCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toUpperCase(),rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length-3);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length-4);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName.length-2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newString[]{EMPTY});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newString[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newString[]{name});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newString[]{0});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[]{});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,newString[]{});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toLowerCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(name==null||name.length()==0)){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||rawName.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||name.length()!=0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(rawName!=null||rawName.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null||rawName.length()>=0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(rawName!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalPreconditions.checkState(rawName!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null&&rawName.length()>0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null&&rawName.length>0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null&&name.length()>0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null||rawName.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.substring(1));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name==null){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length/2);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=name.trim().toLowerCase();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){thrownewIllegalStateException("".getMessage());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=Sets.newLinkedHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=extraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=this.extraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=getZipExtraFields().get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length()-1);if(rawName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringrawName=name.substring(0,name.length()-1);if(rawName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyte[]rawName=name.substring(0,name.length()-1);if(rawName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=setRawName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawFlag=setRawName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,newbyte[]{rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[]{RawName.NAME});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.toLowerCase(),rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),name.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toString());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,this.extends);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,ctxt);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setName(name,rawName);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name!=null){setName(rawName);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newLinkedHashSet();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRequired(name,rawName,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setPropertyName(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.substring(1));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null||name.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toLowerCase(),name.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.toLowerCase(),rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkNotNull(externalAttributes);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkNotNull(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(!name.isEmpty());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkNotNull(sourceName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,EMPTY,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,this.extraFields);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet(rawName);setName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length());if(rawName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,name.length());if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}else{super.setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}else{name=EMPTY;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}else{name=EMPTY+name;}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length()==0){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName.length()==0){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(rawName!=null&&name.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRawName(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.toLowerCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.substring(0,rawName.length()-1),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length()==0){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName.length()==0){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()==0){setRawName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.toUpperCase(),rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toLowerCase(),name.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name,rawName);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+",EMPTY");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName!=EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.toLowerCase(),rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName?EMPTY:DEFAULT_EXTERN_NAME);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null&&name.length()==0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setName(name,rawName);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name!=null){setName(rawName);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null&&rawName.length()==0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(rawName!=null&&rawName.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.size();++i
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.size();++i
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFields[]allExtraFields=newZipExtraFieldData[size()];for(inti=0;i<allExtraFields.size();++i){
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name,rawName);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,0,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){thrownewIllegalArgumentException(""."));}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){thrownewIllegalArgumentException(""."));}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){thrownewIllegalArgumentException("".);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){thrownewIllegalArgumentException(".");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){thrownewIllegalArgumentException("".);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toLowerCase()+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.remove(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,newString(rawName));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.clear();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName,newbyte[0],null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name==null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(sourceName!=null){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name,rawName);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null||name.length()==0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||rawName.length()==0){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.toCharArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName*1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName==null?EMPTY:name-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName-1,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toUpperCase(),rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=NUMBER_ARRAY;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=NameUtils.EMPTY_ARRAY;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newString[]{"UTF-8"});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyterawName=name.substring(0,name.length());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyte[]rawName=name.substring(0,name.length());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalintrawName=name.substring(0,name.length()-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name,rawName,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=EMPTY;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.rawName=name+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length()-1);if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringrawName=name.substring(0,name.length()-1);if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyte[]rawName=name.substring(0,name.length()-1);if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length()-1);if(rawName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringrawName=name.substring(0,name.length()-1);if(rawName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringname=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,null,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null||name.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||rawName.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[1],null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setName(name);}else{ZipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(rawName!=null){setName(name);}else{ZipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name,rawName);}else{ZipExtraFields.put(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null&&name.length()>0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name,rawName);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.substring(0,rawName.length+1));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,name.substring(0,rawName.length-1));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newString[]{EMPTY});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+5);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+16);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name.length()>=0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName.toCharArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName.cloneTree());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length());if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,name.length());if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalbyte[]rawName=name.substring(0,name.length()-2);if(rawName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.toBytes());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=internalAttributes.cloneTree();
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=internalAttributes.length;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,newString(rawName));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,newbyte[0],null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.set(name,rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,newbyte[0]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{RawName.NAME});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{RawName.TYPE});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{rawName!=);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length*1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()==0){setName(rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[2]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name==null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(name.length()==0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(name!=null){setRawName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],rawName,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(sourceName!=null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(sourceName==null){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[4]);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length()-1);if(rawName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name==null){finalStringrawName=name.substring(0,name.length()-1);if(rawName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringrawName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringname=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toUpperCase(),rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658(this.rawName!=null||name.length()==0)){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],sourceName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null&&name.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,newString[]{});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),this.rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=newLong(externalAttributes.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=DEFAULT_EXTERNAL_ATTRIBUTE;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{this.rawName});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null&&rawName.length()==0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null&&rawName.length()>0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null&&name.length()>0){setName(name);}else{thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,rawName.length()-1);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName.length-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName)+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name,rawName.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,EMPTY?EMPTY:name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName?EMPTY:DUPLICATE_NAME);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name.toLowerCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toUpperCase(),name.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),this.rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size;++i
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName.length()==0){setRawName(name);}else{super.setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName.length()==0){setRawName(name);}else{super.setName(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setString(name,rawName.length-1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=internalAttributes==null?EMPTY:internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=internalAttributes<null?EMPTY:internalAttributes;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes=internalAttributes!=null?internalAttributes:EMPTY;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,DEFAULT_NAME);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{ZipExtraFieldData[]allExtraFields=newZipExtraFieldData[size()];for(inti=0,size=allExtraFields.size();i<size;++i
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName.length()==0){setRawName(name);}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()==0){setName(name);}else{thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY.getBytes());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawNames=Sets.newHashSet(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName!=null&&this.externalAttributes==null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(this.rawName!=null&&name.length()>0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=this.zipExtraFields.get(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),name.toUpperCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),rawName.toUpperCase(),EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&name.charAt(0)!='/')){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&name.charAt(0)!='-')){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&name.charAt(0)!='/'))thrownewIllegalStateException("");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&name.charAt(0)!='-'))thrownewIllegalStateException("");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toUpperCase(),EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toUpperCase(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValues(name,rawName.length);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setRaw(name,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&name.charAt(0)!='/')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&name.charAt(0)!='-')){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&name.charAt(0)!='/'))thrownewIllegalArgumentException("");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658||(name.length()==0&&name.charAt(0)!='-'))thrownewIllegalArgumentException("");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setValue(name,rawName.getBytes());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,b,EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,this);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658zipExtraFields.put(name,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name.length()!=0){setRawName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length()-2);if(entryName==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,rawName.length-2+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[]{rawName,EMPTY});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[]{rawName,null});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length());if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length());if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,rawName.length()-1);if(entryName!=null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){finalStringentryName=name.substring(0,name.length()-1);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,rawName.length()-1);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){setName(name);}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658this.internalAttributes.put(name,newbyte[0],rawName);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length()-2);if(entryName!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658parent==null||name.length()==0){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658parent==null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658parent==null||parent!=null){thrownewIllegalArgumentException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],rawName,1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[0],rawName));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toLowerCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.toLowerCase(),null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,newString(name.length()));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,this.name.length());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,name.length())+1;
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringrawName=name.substring(0,root.length());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,EMPTY,false);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null&&rawName.length()>0){setName(name);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null){finalStringentryName=name.substring(0,name.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658finalStringentryName=name.substring(0,name.length());if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(name!=null){finalStringentryName=name.substring(0,name.length());if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){finalStringentryName=name.substring(0,rawName.length()-1);if(entryName==null){thrownewIllegalStateException("");}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(!name.endsWith(".java"));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkArgument(!name.equals("null"));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null){setName(name,EMPTY);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,null);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newString[]{});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY,rawName,this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRawName(name.getBytes());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+".js");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,rawName+"no");
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRequired(name.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),this);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name.toLowerCase(),null,rawName.toLowerCase());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0],this.extra);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,newbyte[0],this);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setString(name,rawName,true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toUpperCase(),EMPTY);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name.toUpperCase(),true);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null||name.length()==0);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Preconditions.checkState(rawName!=null||!name.equals(""));
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setName(name,EMPTY.toCharArray());
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(this.rawName!=null){setRaw(this.rawName);}else{Class<?>rawFlag=EMPTY;setRaw(rawFlag);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,EMPTY,b);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658setRaw(name,EMPTY+1);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658Set<String>rawName=Sets.newHashSet();setRawName(name);
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName==null||name.length()==0){setName(name,rawName);}
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658super.setName(name,newbyte[]{});
projects/Compress42/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java658if(rawName!=null||rawName.length()==0){setName(name,EMPTY);}
