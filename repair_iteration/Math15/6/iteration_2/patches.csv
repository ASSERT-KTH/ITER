bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  if((  x  <  0)&&(x  <  0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  x  <  0)&&(x  <  0))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  x  <  0)&&(x  <  0))  {	  if((    x    <    0)||(x    <    0))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
5	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
6	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
7	[BUG]  [BUGGY]  null  bits  =  Double.doubleToLongBits(x);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  null  bits  =  Double.doubleToLongBits(x);  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	null  bits  =  Double.doubleToLongBits(x);	  long    bits    =    Double.doubleToLongBits(x);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  if(x  >  0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  >  0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  >  0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits!=    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(bits!=  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(bits!=  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(bits!=  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(bits!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
11	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(bits  >=  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(bits  >=  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(bits  >=  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(bits!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
12	[BUG]  [BUGGY]  ||(x  <  0  &&  y  <  =  0)||(x  >  0  &&  y  <  =  1))  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  ||(x  <  0  &&  y  <  =  0)||(x  >  0  &&  y  <  =  1))  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	||(x  <  0  &&  y  <  =  0)||(x  >  0  &&  y  <  =  1))  {  return  Double.NaN;  }	  ||(x    <    0    &&    y    <    =    0)||(x    >    0    &&    y    <    =    0))    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  ||  x  <  0)  {  return  Double.POSITIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  ||  x  <  0)  {  return  Double.POSITIVE_INFINITY;  }  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	||  x  <  0)  {  return  Double.POSITIVE_INFINITY;  }	  if(x    <    0    ||    x    >    0)    {    return    Double.POSITIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
14	[BUG]  [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  0.0)||(x  >  0.0))  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  0.0)||(x  >  0.0))  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  0.0)||(x  >  0.0))  {  return  Double.NaN;  }	  if(Double.isNaN(x)||    Double.isNaN(y)||(x    <    =    0.0)||(x    >    0.0))    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
15	[BUG]  [BUGGY]  ||  x  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  ||  x  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	||  x  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    <    0    ||    x    >    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  ||  Double.isNaN(x))  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  ||  Double.isNaN(x))  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	||  Double.isNaN(x))  {  return  Double.NEGATIVE_INFINITY;  }	  if(Double.isNaN(x)||    Double.isNaN(y))    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
17	[BUG]  [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||  Double.isInfinite(x))  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||  Double.isInfinite(x))  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(x)||  Double.isNaN(y)||  Double.isInfinite(x))  {  return  Double.NEGATIVE_INFINITY;  }	  if(Double.isNaN(x)||    Double.isNaN(y))    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  ||(x  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  ||(x  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	||(x  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if((    x    &    0x8000000000000000L)!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
19	[BUG]  [BUGGY]  if(x  <  0  ||  Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  =  0.0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0  ||  Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  =  0.0))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0  ||  Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  =  0.0))  {	  if(x    <    0    ||    Double.isNaN(x)||    Double.isNaN(y)||(x    >    0)||(x    <    =    0.0))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
20	[BUG]  [BUGGY]  if(x  <  0  ||  Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  0.0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0  ||  Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  0.0))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0  ||  Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  0.0))  {	  if(x    <    0    ||    Double.isNaN(x)||    Double.isNaN(y)||(x    >    0)||(x    <    =    0.0))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
21	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  1)  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0  ||  x  >  1)  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0  ||  x  >  1)  {  return  Double.NaN;  }	  if(x    <    0)    {    return    Double.NaN;    }    else    if(x    >    1)    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
22	[BUG]  [BUGGY]  if(x  <  =  0)  {  if(x  <  0)  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  =  0)  {  if(x  <  0)  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  =  0)  {  if(x  <  0)  {  return  Double.NaN;  }	  if(x    <    0)    {    return    Double.NaN;    }    else    if(x    >    1)    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  if(x  <  0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  >=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  >=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  >=  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    >=    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
26	[BUG]  [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0.0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
27	[BUG]  [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_	  if(x    >    0.0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
28	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0)  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0  ||  y  >  0)  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0  ||  y  >  0)  {  return  Double.NaN;  }	  if(x    <    0    ||    x    >    0)    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  ==  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  ==  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  ==  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
30	[BUG]  [BUGGY]  if((  x  <  0)&&(x  >  0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  x  <  0)&&(x  >  0))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  x  <  0)&&(x  >  0))  {	  if((    x    <    0)||(x    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
31	[BUG]  [BUGGY]  if((  x  <  0)||(x  >  1))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  x  <  0)||(x  >  1))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  x  <  0)||(x  >  1))  {	  if((    x    <    0)||(x    >    0))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
32	[BUG]  [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0.0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
33	[BUG]  [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_	  if(x    >    0.0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
34	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
35	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
36	[BUG]  [BUGGY]  double[]  bits  =  lnMant.doubleToLongBits(x,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  double[]  bits  =  lnMant.doubleToLongBits(x,  y);  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	double[]  bits  =  lnMant.doubleToLongBits(x,  y);	  double[]    bits    =    lnMant.doubleToLongBits(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  if(x  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {	  if(x    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
39	[BUG]  [BUGGY]  if((  x  >  0)&&(x  <  =  0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  x  >  0)&&(x  <  =  0))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  x  >  0)&&(x  <  =  0))  {	  if((    x    >    0)&&(x    <    0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  ||  Double.isNaN(x)||(x  <  =  0.0)||(x  <  =  0.0))  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  ||  Double.isNaN(x)||(x  <  =  0.0)||(x  <  =  0.0))  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	||  Double.isNaN(x)||(x  <  =  0.0)||(x  <  =  0.0))  {  return  Double.NEGATIVE_INFINITY;  }	  if(Double.isNaN(x)||    Double.isNaN(y)||(x    <    =    0.0)||(x    <    =    0.0))    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
41	[BUG]  [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  0.0)||(x  <  0.0))  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  0.0)||(x  <  0.0))  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  0.0)||(x  <  0.0))  {  return  Double.NEGATIVE_INFINITY;  }	  if(Double.isNaN(x)||    Double.isNaN(y)||(x    <    =    0.0)||(x    <    =    0.0))    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
42	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y!=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y!=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  if(x  <  0.0)  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  return  Double.NaN;  }	  if(x    ==    0.0)    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
45	[BUG]  [BUGGY]  if(Double.isNaN(y)||  Double.isNaN(x))  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(y)||  Double.isNaN(x))  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(y)||  Double.isNaN(x))  {  return  Double.NEGATIVE_INFINITY;  }	  if(Double.isNaN(x)||    Double.isNaN(y))    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  double[]  bits  =  lnMant.doubleToLongBits(x  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  double[]  bits  =  lnMant.doubleToLongBits(x  +  1);  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	double[]  bits  =  lnMant.doubleToLongBits(x  +  1);	  double[]    bits    =    lnMant.doubleToLongBits(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  if(x  ==  0.0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0.0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0.0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    ==    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
48	[BUG]  [BUGGY]  if(bits  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  if(bits!=  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  if(x  <  0)  {  return  Double.NaN;  }  else  if(x  >  2)  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  return  Double.NaN;  }  else  if(x  >  2)  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  return  Double.NaN;  }  else  if(x  >  2)  {  return  Double.NaN;  }	  if(x    <    0)    {    return    Double.NaN;    }    else    if(x    >    1)    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
52	[BUG]  [BUGGY]  if((  x  >  0)&&(y  <  0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  x  >  0)&&(y  <  0))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  x  >  0)&&(y  <  0))  {	  if((    x    >    0)&&(x    <    0))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  =  0.0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  =  0.0))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(x)||  Double.isNaN(y)||(x  >  0.0)||(x  <  =  0.0))  {	  if(x    <    0    ||    Double.isNaN(x)||    Double.isNaN(y)||(x    >    0)||(x    <    =    0.0))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
54	[BUG]  [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  >  0)||(x  <  =  0.0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  >  0)||(x  <  =  0.0))  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(x)||  Double.isNaN(y)||(x  >  0)||(x  <  =  0.0))  {	  if(x    <    0    ||    Double.isNaN(x)||    Double.isNaN(y)||(x    >    0)||(x    <    =    0.0))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
55	[BUG]  [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0.0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
56	[BUG]  [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0.0)  {  if(x  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0.0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
57	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(bits  <  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0.0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
58	[BUG]  [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
59	[BUG]  [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  127)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  127)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  127)  {  return  Double.NEGATIVE_IN	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
60	[BUG]  [BUGGY]  if(x  ==  0)  {  return  Double.POSITIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0)  {  return  Double.POSITIVE_INFINITY;  }  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0)  {  return  Double.POSITIVE_INFINITY;  }	  if(x    <    0)    {    return    Double.POSITIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
61	[BUG]  [BUGGY]  if(x  ==  0.0)  {  return  Double.POSITIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  ==  0.0)  {  return  Double.POSITIVE_INFINITY;  }  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  ==  0.0)  {  return  Double.POSITIVE_INFINITY;  }	  if(x    <    0)    {    return    Double.POSITIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
62	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >=  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >=  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >=  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
63	[BUG]  [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
65	[BUG]  [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  ==  0.0))  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  ==  0.0))  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(x)||  Double.isNaN(y)||(x  ==  0.0))  {  return  Double.NaN;  }	  if(x    ==    0.0)    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
66	[BUG]  [BUGGY]  long  bits  =  Double.doubleToLongBits(x  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  long  bits  =  Double.doubleToLongBits(x  -  1);  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	long  bits  =  Double.doubleToLongBits(x  -  1);	  long    bits    =    Double.doubleToLongBits(x);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  ||(x  <  0  &&  y  <  0)||(x  >  0  &&  y  <  =  0))  {  return  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  ||(x  <  0  &&  y  <  0)||(x  >  0  &&  y  <  =  0))  {  return  Double.NaN;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	||(x  <  0  &&  y  <  0)||(x  >  0  &&  y  <  =  0))  {  return  Double.NaN;  }	  ||(x    <    0    &&    y    <    =    0)||(x    >    0    &&    y    <    =    0))    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    >    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
70	[BUG]  [BUGGY]  bits  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  bits  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	bits  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    >    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if((    x    &    0x8000000000000000L)!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
72	[BUG]  [BUGGY]  if((  bits  &  0x8000000000000000L)!=  0)  {  long  y  =  (long)y;  if((  bits  &  0x8000000000000000L)!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  bits  &  0x8000000000000000L)!=  0)  {  long  y  =  (long)y;  if((  bits  &  0x8000000000000000L)!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  bits  &  0x8000000000000000L)!=  0)  {  long  y  =  (long)y;  if((  bits  &  0x8000000000000000L)!=  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if((    x    &    0x8000000000000000L)!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
73	[BUG]  [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits!=    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
74	[BUG]  [BUGGY]  long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits!=    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
75	[BUG]  [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y!=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
76	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y!=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y!=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
78	[BUG]  [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
79	[BUG]  [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  null)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
81	[BUG]  [BUGGY]  if(bits  <  0)  {  long  x  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  <  0)  {  long  x  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  <  0)  {  long  x  =  Double.doubleToLongBits(x);  if(bits  >  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    >    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
82	[BUG]  [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  =  0.0)||(x  >  0.0))  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  =  0.0)||(x  >  0.0))  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(x)||  Double.isNaN(y)||(x  <  =  0.0)||(x  >  0.0))  {  return  Double.NEGATIVE_INFINITY;  }	  if(Double.isNaN(x)||    Double.isNaN(y)||(x    <    =    0.0)||(x    <    =    0.0))    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
83	[BUG]  [BUGGY]  if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
84	[BUG]  [BUGGY]  if(x  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  >  0.0)  {  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  >  0.0)  {	  if(x    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
85	[BUG]  [BUGGY]  int  bits  =  Double.doubleToLongBits(x);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  int  bits  =  Double.doubleToLongBits(x);  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	int  bits  =  Double.doubleToLongBits(x);	  long    bits    =    Double.doubleToLongBits(x);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
86	[BUG]  [BUGGY]  if((  x  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  x  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  x  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits!=  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits!=    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  ||(x  <  0  &&  y  <  =  0)||(x  >  0  &&  y  <  =  0))  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  ||(x  <  0  &&  y  <  =  0)||(x  >  0  &&  y  <  =  0))  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	||(x  <  0  &&  y  <  =  0)||(x  >  0  &&  y  <  =  0))  {  return  Double.NEGATIVE_INFINITY;  }	  ||(x    <    0    &&    y    <    =    0)||(x    >    0    &&    y    <    =    0))    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    >    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
89	[BUG]  [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  ==  0))  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(Double.isNaN(x)||  Double.isNaN(y)||(x  ==  0))  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(Double.isNaN(x)||  Double.isNaN(y)||(x  ==  0))  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    ==    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
90	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
91	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
92	[BUG]  [BUGGY]  if(x  <  0)  {  return  Double.NaN;  }  else  if(x  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  return  Double.NaN;  }  else  if(x  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  return  Double.NaN;  }  else  if(x  >  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    <    0)    {    return    Double.NaN;    }    else    if(x    >    1)    {    return    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
93	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  >=  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_IN    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
95	[BUG]  [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
96	[BUG]  [BUGGY]  if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >=  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(bits  >  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  >=  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    >=    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
97	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  1)  {  return  Double.POSITIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0  ||  x  >  1)  {  return  Double.POSITIVE_INFINITY;  }  [BUGGY]      long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0  ||  x  >  1)  {  return  Double.POSITIVE_INFINITY;  }	  if(x    <    0    ||    x    >    0)    {    return    Double.POSITIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
98	[BUG]  [BUGGY]  if((  y  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  y  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  y  &  0x8000000000000000L)!=  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if((    x    &    0x8000000000000000L)!=    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
99	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >=  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >=  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >=  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
100	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  >  0  &&  y  <  =  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(bits    <    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    >    0    &&    y    >=    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
101	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0  ||  x  >  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0  ||  x  >  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    <    0    ||    x    >    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
102	[BUG]  [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0.0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
103	[BUG]  [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  yi  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  yi  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  long  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  yi  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    long    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
104	[BUG]  [BUGGY]  if((  x  &  0x8000000000000000L)!=  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if((  x  &  0x8000000000000000L)!=  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if((  x  &  0x8000000000000000L)!=  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0)  {  return  Double.NEGATIVE_INFINITY;  }	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
105	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
106	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (y  ==  0.0)  {  return  1.0;  }  if  (x  !=  x)  {  //  X  is  NaN  return  x;  }        [BUGGY]  if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN  [BUGGY]      if  (x  ==  0)  {  long  bits  =  Double.doubleToLongBits(x);  if  ((bits  &  0x8000000000000000L)  !=  0)  {  long  yi  =  (long)  y;  if  (y  <  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_INFINITY;  }  if  (y  >  0  &&  y  ==  yi  &&  (yi  &  1)  ==  1)  {  [CLASS]  FastMath  ExpIntTable  ExpFracTable  lnMant  CodyWaite  [METHOD]  pow  [RETURN_TYPE]  double  double  x  double  y  [VARIABLES]  boolean  RECOMPUTE_TABLES_AT_RUNTIME  negate  negative  double[]  CBRTTWO  COSINE_TABLE_A  COSINE_TABLE_B  EIGHTHS  EXP_FRAC_TABLE_A  EXP_FRAC_TABLE_B  EXP_INT_TABLE_A  EXP_INT_TABLE_B  SINE_TABLE_A  SINE_TABLE_B  TANGENT_TABLE_A  TANGENT_TABLE_B  hiPrec  hiPrecOut  lnCoef_i  lnCoef_last  lnm  lns  long[]  PI_O_4_BITS  RECIP_2PI  double  E  F_11_12  F_13_14  F_15_16  F_1_11  F_1_13  F_1_15  F_1_17  F_1_2  F_1_3  F_1_4  F_1_5  F_1_7  F_1_9  F_3_4  F_5_6  F_7_8  F_9_10  LN_2_A  LN_2_B  LOG_MAX_VALUE  PI  TWO_POWER_52  a  a2  aa  ab  absAsinh  absAtanh  b  base  baseA  baseB  c  d  da  daa  dab  db  denom  denomb  denomr  epsilon  extra  finalRemA  finalRemB  fracPartA  fracPartB  fx1  intPartA  intPartB  lna  lnb  lnza  lnzb  lores  na  nb  numer  ra  ratio  ratioa  ratiob  rb  recip  recipa  recipb  remA  remB  result  rln10a  rln10b  t  temp  tempA  tempB  tempC  tmp  tmp1  tmp2  x  xa  xb  xpa  xpb  y  ya  yaa  yab  yb  z  za  zb  double[][]  LN_HI_PREC_COEF  LN_MANT  LN_QUICK_COEF  int  EXP_FRAC_TABLE_LEN  EXP_INT_TABLE_LEN  EXP_INT_TABLE_MAX_INDEX  LN_MANT_LEN  SINE_TABLE_LEN  exp  finalK  i  intFrac  intVal  k  long  HEX_40000000  MASK_30BITS  bits  xl  yi  	projects/Math15/src/main/java/org/apache/commons/math3/util/FastMath.java	0.5773502691896258	1453	1453	1	replace	if(x  <  0)  {  if(x  >  0)  {  bits  =  Double.doubleToLongBits(x);  if(bits  <  0  &&  y  ==  0  &&  y  ==  0  &&  (yi  &  1)  ==  1)  {  return  Double.NEGATIVE_IN	  if(x    >    0)    {    if(x    <    0)    {    bits    =    Double.doubleToLongBits(x);    if(bits    <    0    &&    y    <    0    &&    y    ==    yi    &&    (yi    &    1)    ==    1)    {    return    Double.NEGATIVE_INFINITY;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
