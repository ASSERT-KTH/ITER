name,outcome,runtime,stacktrace
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn,PASS,995189392,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement,PASS,669442645,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp,PASS,489914073,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign,PASS,542755683,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode,PASS,355890065,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath,PASS,511529644,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition,PASS,727922163,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath,PASS,411360297,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse,PASS,452116787,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode,PASS,464735632,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions,PASS,385064616,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition,PASS,496403156,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop,PASS,723494788,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop,PASS,376236250,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse,PASS,400530413,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine,PASS,375527233,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths,PASS,339680135,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath,PASS,318613498,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions,PASS,348791689,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1,PASS,363167380,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2,PASS,319481096,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3,PASS,601077987,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4,PASS,398953642,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5,PASS,331581698,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6,PASS,310143489,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7,PASS,402034015,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8,PASS,327860187,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9,PASS,442337665,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10,PASS,347145713,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11,PASS,345665752,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12,PASS,319602873,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13,PASS,332796562,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach,PASS,325249964,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction,PASS,419064780,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue,PASS,336665486,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction,PASS,399491319,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch,PASS,329165325,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp,PASS,330209155,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2,PASS,339014792,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3,PASS,349292165,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle,PASS,324706011,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors,PASS,415894603,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits,PASS,307105879,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits,PASS,313152741,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits,PASS,302545441,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop,PASS,406243114,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels,PASS,381167479,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1,PASS,291293501,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2,PASS,406772912,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3,PASS,408404230,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4,PASS,361885051,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect,PASS,604153667,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables,PASS,347344262,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign,PASS,569400771,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments,PASS,402390266,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1,PASS,318026394,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2,PASS,305046383,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes,PASS,371039552,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698,PASS,311344803,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777,PASS,335304507,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1,PASS,293217993,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2,PASS,346411334,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a,PASS,293541080,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b,FAIL,338147075,junit.framework.AssertionFailedError: Expected: function _func(){var x=1;try{x=x+someFunction()}catch(e){}x=x+1;try{x=x+someFunction()}catch(e$$1){}return x} Result: function _func(){var x;try{x=1+someFunction()}catch(e){}try{x=x+1+someFunction()}catch(e$$1){}return x} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _func 1 [source_file: expected0] NAME _func 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] TRY 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME someFunction 1 [source_file: expected0] BLOCK 1 [source_file: expected0] CATCH 1 [source_file: expected0] NAME e 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] TRY 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME someFunction 1 [source_file: expected0] BLOCK 1 [source_file: expected0] CATCH 1 [source_file: expected0] NAME e$$1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] RETURN 1 [source_file: expected0] NAME x 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _func 1 [source_file: testcode] NAME _func 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x 1 [source_file: testcode] TRY 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME x 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME someFunction 1 [source_file: testcode] BLOCK 1 [source_file: testcode] CATCH 1 [source_file: testcode] NAME e 1 [source_file: testcode] BLOCK 1 [source_file: testcode] TRY 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME x 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME x 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME someFunction 1 [source_file: testcode] BLOCK 1 [source_file: testcode] CATCH 1 [source_file: testcode] NAME e$$1 1 [source_file: testcode] BLOCK 1 [source_file: testcode] RETURN 1 [source_file: testcode] NAME x 1 [source_file: testcode]   Subtree1: BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] TRY 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME someFunction 1 [source_file: expected0] BLOCK 1 [source_file: expected0] CATCH 1 [source_file: expected0] NAME e 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] TRY 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME someFunction 1 [source_file: expected0] BLOCK 1 [source_file: expected0] CATCH 1 [source_file: expected0] NAME e$$1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] RETURN 1 [source_file: expected0] NAME x 1 [source_file: expected0]   Subtree2: BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x 1 [source_file: testcode] TRY 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME x 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME someFunction 1 [source_file: testcode] BLOCK 1 [source_file: testcode] CATCH 1 [source_file: testcode] NAME e 1 [source_file: testcode] BLOCK 1 [source_file: testcode] TRY 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME x 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME x 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME someFunction 1 [source_file: testcode] BLOCK 1 [source_file: testcode] CATCH 1 [source_file: testcode] NAME e$$1 1 [source_file: testcode] BLOCK 1 [source_file: testcode] RETURN 1 [source_file: testcode] NAME x 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:409) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:387) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:526) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:522) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testIssue794b(FlowSensitiveInlineVariablesTest.java:513) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse,PASS,315522600,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign,PASS,394256548,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn,PASS,463877503,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase,PASS,304854532,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported,PASS,344588068,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar,PASS,389582411,
