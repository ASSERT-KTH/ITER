bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (tokenLen  ==  2)  {  [CE]  not  a  statement  [FE]    ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]  if  (tokenLen  ==  2)  {  [BUGGY]  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	if  (tokenLen  ==  2)  {	if  (tokenLen  ==  1)  {  	non-compiled	[CE]  not  a  statement	9	None	replace
2	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]      ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    [BUGGY]  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	  	if  (tokenLen  ==  1)  {  	non-compiled	[CE]  not  a  statement	9	None	replace
3	[BUG]  [BUGGY]    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  [CE]  not  a  statement  [FE]    ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);		non-compiled	[CE]  not  a  statement	10	None	add
4	[BUG]  [BUGGY]    if(tokenLen  ==  2)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  [CE]  not  a  statement  [FE]      ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    if(tokenLen  ==  2)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    if(tokenLen  ==  2)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }		non-compiled	[CE]  not  a  statement	10	None	add
5	[BUG]  [BUGGY]    if(tokenLen  ==  1)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  [CE]  not  a  statement  [FE]        ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    if(tokenLen  ==  1)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    if(tokenLen  ==  1)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }		non-compiled	[CE]  not  a  statement	10	None	add
6	[BUG]  [BUGGY]    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  [CE]  not  a  statement  [FE]          ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;		non-compiled	[CE]  not  a  statement	10	None	add
7	[BUG]  [BUGGY]    if(tokenLen  ==  2)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.  [CE]  not  a  statement  [FE]            ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    if(tokenLen  ==  2)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    if(tokenLen  ==  2)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.		non-compiled	[CE]  not  a  statement	10	None	add
8	[BUG]  [BUGGY]    rule  =  selectNumberRule(mTimeZone,  tokenLen);  [CE]  not  a  statement  [FE]    ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    rule  =  selectNumberRule(mTimeZone,  tokenLen);  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    rule  =  selectNumberRule(mTimeZone,  tokenLen);		non-compiled	[CE]  not  a  statement	10	None	add
9	[BUG]  [BUGGY]    Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen);  [CE]  not  a  statement  [FE]      ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen);  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen);		non-compiled	[CE]  not  a  statement	10	None	add
10	[BUG]  [BUGGY]    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [CE]  not  a  statement  [FE]        ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);		non-compiled	[CE]  not  a  statement	10	None	add
11	[BUG]  [BUGGY]    rule  =  selectNumberRule(mValue,  tokenLen);  [CE]  not  a  statement  [FE]    ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]    rule  =  selectNumberRule(mValue,  tokenLen);  [BUGGY]  if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	    rule  =  selectNumberRule(mValue,  tokenLen);		non-compiled	[CE]  not  a  statement	10	None	add
12	[BUG]  [BUGGY]  if(tokenLen  >=  2)  {  [CE]  not  a  statement  [FE]    ComparisonFailure  [CONTEXT]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)  [BUGGY]  if(tokenLen  >=  2)  {  [BUGGY]  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	if(tokenLen  >=  2)  {	if  (tokenLen  ==  1)  {  	non-compiled	[CE]  not  a  statement	9	None	replace
