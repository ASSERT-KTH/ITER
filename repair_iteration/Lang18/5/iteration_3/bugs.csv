bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);	  rule    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	12	None	replace
2	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  value  -  1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  value  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  value  -  1);	  rule    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	12	None	replace
3	[BUG]  [BUGGY]  if(tokenLen!=  1)  {  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  if(tokenLen!=  1)  {  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	if(tokenLen!=  1)  {	  if(tokenLen!=    2)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
4	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);	  Rule    rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	23	None	replace
5	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);	  Rule    rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	23	None	replace
6	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR,  value);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  selectNumberRule(Calendar.HOUR,  value);	  Rule    rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	23	None	replace
7	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
8	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
9	[BUG]  [BUGGY]  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	=  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);	  =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	8	None	replace
10	[BUG]  [BUGGY]  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	=  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);	  =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	8	None	replace
11	[BUG]  [BUGGY]  =  selectNumberRule(Calendar.HOUR,  value);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  =  selectNumberRule(Calendar.HOUR,  value);  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	=  selectNumberRule(Calendar.HOUR,  value);	  =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	8	None	replace
12	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);  break;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);  break;	  rule    =    selectNumberRule(Calendar.HOUR_OF_DAY,    tokenLen);    break;    	non-compiled	[CE]  not  a  statement	27	None	replace
13	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen  +  1);  break;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen  +  1);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen  +  1);  break;	  rule    =    selectNumberRule(Calendar.HOUR_OF_DAY,    tokenLen);    break;    	non-compiled	[CE]  not  a  statement	27	None	replace
14	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DATE,  tokenLen  +  1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.DATE,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.DATE,  tokenLen  +  1);	  rule    =    selectNumberRule(Calendar.DATE,    tokenLen);    	non-compiled	[CE]  not  a  statement	2	None	replace
15	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DATE,  value);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.DATE,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.DATE,  value);	  rule    =    selectNumberRule(Calendar.DATE,    tokenLen);    	non-compiled	[CE]  not  a  statement	2	None	replace
16	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DATE,  tokenLen  -  1);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.DATE,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.DATE,  tokenLen  -  1);	  rule    =    selectNumberRule(Calendar.DATE,    tokenLen);    	non-compiled	[CE]  not  a  statement	2	None	replace
17	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DATE,  tokenLen,  value);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.DATE,  tokenLen,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.DATE,  tokenLen,  value);	  rule    =    selectNumberRule(Calendar.DATE,    tokenLen);    	non-compiled	[CE]  not  a  statement	2	None	replace
18	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen  +  1);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen  +  1);	  rule    =    selectNumberRule(Calendar.ZONE_OFFSET,    tokenLen);    	non-compiled	[CE]  not  a  statement	24	None	replace
19	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen  -  1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen  -  1);	  rule    =    selectNumberRule(Calendar.ZONE_OFFSET,    tokenLen);    	non-compiled	[CE]  not  a  statement	24	None	replace
20	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen,  value);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen,  value);	  rule    =    selectNumberRule(Calendar.ZONE_OFFSET,    tokenLen);    	non-compiled	[CE]  not  a  statement	24	None	replace
21	[BUG]  [BUGGY]  Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);	  Rule    token    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	22	None	replace
22	[BUG]  [BUGGY]  Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);	  Rule    token    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	22	None	replace
23	[BUG]  [BUGGY]  Rule  token  =  selectNumberRule(Calendar.HOUR,  value);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  selectNumberRule(Calendar.HOUR,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  selectNumberRule(Calendar.HOUR,  value);	  Rule    token    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	22	None	replace
24	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  tokenLen);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  tokenLen);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1,    value);    	non-compiled	[CE]  not  a  statement	10	None	replace
25	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  timeZone);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  timeZone);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  timeZone);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1,    value);    	non-compiled	[CE]  not  a  statement	10	None	replace
26	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  1);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  1);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1,    value);    	non-compiled	[CE]  not  a  statement	10	None	replace
27	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE,  tokenLen  +  1);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE,  tokenLen  +  1);	  rule    =    selectNumberRule(Calendar.ZONE,    tokenLen);    	non-compiled	[CE]  not  a  statement	1	None	replace
28	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE,  tokenLen  -  1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE,  tokenLen  -  1);	  rule    =    selectNumberRule(Calendar.ZONE,    tokenLen);    	non-compiled	[CE]  not  a  statement	1	None	replace
29	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE,  value);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE,  value);	  rule    =    selectNumberRule(Calendar.ZONE,    tokenLen);    	non-compiled	[CE]  not  a  statement	1	None	replace
30	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen  +  1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen  +  1);	  rule    =    selectNumberRule(Calendar.ZONE_OFF,    tokenLen);    	non-compiled	[CE]  not  a  statement	25	None	replace
31	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen  -  1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen  -  1);	  rule    =    selectNumberRule(Calendar.ZONE_OFF,    tokenLen);    	non-compiled	[CE]  not  a  statement	25	None	replace
32	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFF,  value);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFF,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE_OFF,  value);	  rule    =    selectNumberRule(Calendar.ZONE_OFF,    tokenLen);    	non-compiled	[CE]  not  a  statement	25	None	replace
33	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen);  break;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    value);    break;    	non-compiled	[CE]  not  a  statement	18	None	replace
34	[BUG]  [BUGGY]  rule  =  selectNullRule(Calendar.HOUR,  tokenLen);  break;  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNullRule(Calendar.HOUR,  tokenLen);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNullRule(Calendar.HOUR,  tokenLen);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    value);    break;    	non-compiled	[CE]  not  a  statement	18	None	replace
35	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.SECOND,  tokenLen  +  1);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.SECOND,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.SECOND,  tokenLen  +  1);	  rule    =    selectNumberRule(Calendar.SECOND,    tokenLen);    	non-compiled	[CE]  not  a  statement	33	None	replace
36	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.SECOND,  value);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.SECOND,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.SECOND,  value);	  rule    =    selectNumberRule(Calendar.SECOND,    tokenLen);    	non-compiled	[CE]  not  a  statement	33	None	replace
37	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.SECOND,  tokenLen  -  1);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.SECOND,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.SECOND,  tokenLen  -  1);	  rule    =    selectNumberRule(Calendar.SECOND,    tokenLen);    	non-compiled	[CE]  not  a  statement	33	None	replace
38	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  not  a  statement	3	None	replace
39	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  value);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  value);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  not  a  statement	3	None	replace
40	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);	  rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  not  a  statement	3	None	replace
41	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  tokenLen);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  tokenLen);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.TIME_ZONE);    	non-compiled	[CE]  not  a  statement	7	None	replace
42	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.ZONE);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.ZONE);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.ZONE);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.TIME_ZONE);    	non-compiled	[CE]  not  a  statement	7	None	replace
43	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  value);  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  value);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.TIME_ZONE);    	non-compiled	[CE]  not  a  statement	7	None	replace
44	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    	non-compiled	[CE]  not  a  statement	11	None	replace
45	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    	non-compiled	[CE]  not  a  statement	11	None	replace
46	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    	non-compiled	[CE]  not  a  statement	11	None	replace
47	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  break;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    break;    	non-compiled	[CE]  not  a  statement	16	None	replace
48	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);  break;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    break;    	non-compiled	[CE]  not  a  statement	16	None	replace
49	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);  break;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    break;    	non-compiled	[CE]  not  a  statement	16	None	replace
50	[BUG]  [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);	  Rule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	5	None	replace
51	[BUG]  [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);	  Rule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	5	None	replace
52	[BUG]  [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);	  Rule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	5	None	replace
53	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    2);    	non-compiled	[CE]  not  a  statement	9	None	replace
54	[BUG]  [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);	  Rule    token    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	26	None	replace
55	[BUG]  [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);	  Rule    token    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	26	None	replace
56	[BUG]  [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);	  Rule    token    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	26	None	replace
57	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  token);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  token);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  token);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	15	None	replace
58	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Value.HOUR,  tokenLen);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Value.HOUR,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Value.HOUR,  tokenLen);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	15	None	replace
59	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  key);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  key);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  key);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	15	None	replace
60	[BUG]  [BUGGY]  rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);	  rule    =    selectNumberRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	29	None	replace
61	[BUG]  [BUGGY]  rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.HOUR);	  rule    =    selectNumberRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	29	None	replace
62	[BUG]  [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);	  RuleRule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	6	None	replace
63	[BUG]  [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);	  RuleRule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	6	None	replace
64	[BUG]  [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mDaylight,  TimeZone.SHORT);	  RuleRule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	6	None	replace
65	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  tokenLen);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	4	None	replace
66	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.SHORT);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	4	None	replace
67	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen  +  1);	  rule    =    SelectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	21	None	replace
68	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  SelectNumberRule(Calendar.HOUR,  tokenLen  -  1);	  rule    =    SelectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	21	None	replace
69	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR,  value);  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  SelectNumberRule(Calendar.HOUR,  value);	  rule    =    SelectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	21	None	replace
70	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.INSTANCE_NO_COLON,  tokenLen);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.INSTANCE_NO_COLON,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.INSTANCE_NO_COLON,  tokenLen);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.INSTANCE_NO_COLON);    	non-compiled	[CE]  not  a  statement	20	None	replace
71	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.INSTANCE_NO_COLON);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.INSTANCE_NO_COLON);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mStandard,  TimeZone.INSTANCE_NO_COLON);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.INSTANCE_NO_COLON);    	non-compiled	[CE]  not  a  statement	20	None	replace
72	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
73	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  3);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
74	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  4);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen    +    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
75	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);  break;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1);    break;    	non-compiled	[CE]  not  a  statement	17	None	replace
76	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  value);  break;  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  value);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  value);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1);    break;    	non-compiled	[CE]  not  a  statement	17	None	replace
77	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  2;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  2;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  2;	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen)+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
78	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  3;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  3;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  3;	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen)+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
79	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  4;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  4;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)+  4;	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen)+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
80	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  value);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  value);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
81	[BUG]  [BUGGY]  if(tokenLen  >  1)  {  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  if(tokenLen  >  1)  {  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	if(tokenLen  >  1)  {	  if(tokenLen    >=    1)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
82	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.INSTANCE_COLON,  tokenLen);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.INSTANCE_COLON,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.INSTANCE_COLON,  tokenLen);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.INSTANCE_NO_COLON);    	non-compiled	[CE]  not  a  statement	20	None	replace
83	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);	  Rule    rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	23	None	replace
84	[BUG]  [BUGGY]  rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.START);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.START);  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(mTimeZone,  mLocale,  TimeZone.START);	  rule    =    selectNumberRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	29	None	replace
85	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	15	None	replace
86	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  value  -  1);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  value  -  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  value  -  1);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	15	None	replace
87	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  1);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.TIME_ZONE,  1);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.TIME_ZONE);    	non-compiled	[CE]  not  a  statement	7	None	replace
88	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);  break;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  3);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1);    break;    	non-compiled	[CE]  not  a  statement	17	None	replace
89	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  SelectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  SelectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);	  rule    =    SelectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	21	None	replace
90	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen  -  1);  break;  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen  -  1);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen  -  1);  break;	  rule    =    selectNumberRule(Calendar.HOUR_OF_DAY,    tokenLen);    break;    	non-compiled	[CE]  not  a  statement	27	None	replace
91	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen)+  1;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen)+  1;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE_OFF,  tokenLen)+  1;	  rule    =    selectNumberRule(Calendar.ZONE_OFF,    tokenLen);    	non-compiled	[CE]  not  a  statement	25	None	replace
92	[BUG]  [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);	  RuleRule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	6	None	replace
93	[BUG]  [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	RuleRule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);	  RuleRule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	6	None	replace
94	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen)+  1;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen)+  1;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.ZONE_OFFSET,  tokenLen)+  1;	  rule    =    selectNumberRule(Calendar.ZONE_OFFSET,    tokenLen);    	non-compiled	[CE]  not  a  statement	24	None	replace
95	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	4	None	replace
96	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	4	None	replace
97	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  TimeZone.SHORT);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  TimeZone.SHORT);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1,    value);    	non-compiled	[CE]  not  a  statement	10	None	replace
98	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  mStandard);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  mStandard);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  mStandard);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1,    value);    	non-compiled	[CE]  not  a  statement	10	None	replace
99	[BUG]  [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  1);	  Rule    token    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	26	None	replace
100	[BUG]  [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);	  Rule    token    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	26	None	replace
101	[BUG]  [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.HOUR);	  Rule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	5	None	replace
102	[BUG]  [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.START);	  Rule    rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	5	None	replace
103	[BUG]  [BUGGY]  =  selectNumberRule(tokenLen,  Calendar.HOUR);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  =  selectNumberRule(tokenLen,  Calendar.HOUR);  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	=  selectNumberRule(tokenLen,  Calendar.HOUR);	  =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	8	None	replace
104	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  value);	  rule    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	12	None	replace
105	[BUG]  [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  1);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT,  1);	  rule    =    new    TimeZoneNameRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	4	None	replace
106	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  mDaylight);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  mDaylight);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1,  mDaylight);	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1,    value);    	non-compiled	[CE]  not  a  statement	10	None	replace
107	[BUG]  [BUGGY]  rule  =  selectNumber(Calendar.HOUR,  tokenLen);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumber(Calendar.HOUR,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumber(Calendar.HOUR,  tokenLen);	  rule    =    selectNumberRule(Calendar.HOUR);    	non-compiled	[CE]  not  a  statement	30	None	replace
108	[BUG]  [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  2);	  Rule    rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	23	None	replace
109	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  4);  break;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  4);  break;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  4);  break;	  rule    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1);    break;    	non-compiled	[CE]  not  a  statement	17	None	replace
110	[BUG]  [BUGGY]  rule  =  SelectNumberRule(mTimeZone,  mLocale,  TimeZone.SHORT);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  rule  =  SelectNumberRule(mTimeZone,  mLocale,  TimeZone.SHORT);  [BUGGY]      rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	rule  =  SelectNumberRule(mTimeZone,  mLocale,  TimeZone.SHORT);	  rule    =    selectNumberRule(mTimeZone,    mLocale,    TimeZone.SHORT);    	non-compiled	[CE]  not  a  statement	29	None	replace
111	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  4);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  4);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  4);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
112	[BUG]  [BUGGY]  Rule  tokenLen  =  SelectNumberRule(Calendar.HOUR,  tokenLen);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  SelectNumberRule(Calendar.HOUR,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  SelectNumberRule(Calendar.HOUR,  tokenLen);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	15	None	replace
113	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(calendar.HOUR,  tokenLen);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(calendar.HOUR,  tokenLen);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(calendar.HOUR,  tokenLen);	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    value);    	non-compiled	[CE]  not  a  statement	15	None	replace
114	[BUG]  [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)/  1;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)/  1;  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  tokenLen  =  selectNumberRule(Calendar.HOUR,  tokenLen)/  1;	  Rule    tokenLen    =    selectNumberRule(Calendar.HOUR,    tokenLen)+    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
115	[BUG]  [BUGGY]  Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      rule  =  selectNumberRule(Calendar.HOUR,  tokenLen);  break;  case  'z':  //  time  zone  (text)  if  (tokenLen  >=  4)  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.LONG);  }  else  {  rule  =  new  TimeZoneNameRule(mTimeZone,  mLocale,  TimeZone.SHORT);  }  break;  case  'Z':  //  time  zone  (value)      [BUGGY]  Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);  [BUGGY]      if  (tokenLen  ==  1)  {  rule  =  TimeZoneNumberRule.INSTANCE_NO_COLON;  }  else  {  rule  =  TimeZoneNumberRule.INSTANCE_COLON;  }  break;  case  '\'':  //  literal  text  String  sub  =  token.substring(1);  if  (sub.length()  ==  1)  {  rule  =  new  CharacterLiteral(sub.charAt(0));  }  else  {  [CLASS]  FastDateFormat  1  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  ConcurrentMap  cTimeZoneDisplayCache  TwoDigitYearField  INSTANCE  int[]  indexRef  String  mDaylight  mPattern  mStandard  mValue  pattern  prior  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  FormatCache  cache  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  DateFormatSymbols  symbols  List  rules  Rule  rule  	projects/Lang18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java	1.0	562	562	1	replace	Rule  token  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  2);	  Rule    token    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  not  a  statement	22	None	replace
