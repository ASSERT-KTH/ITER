bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createEscaped(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscaped(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscaped(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createEscaped(str);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
2	[BUG]  [BUGGY]  return  createEscaped(str,  clazz);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscaped(str,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscaped(str,  clazz);	  return    createEscaped(str);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
3	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
5	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  'else'  without  'if'	45	None	replace
6	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
7	[BUG]  [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);	  return    createExpectedFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
8	[BUG]  [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);	  return    createExpectedFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
9	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createElement(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createElement(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createElement(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
10	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createElements(str);    }    	non-compiled	[CE]  'else'  without  'if'	51	None	replace
11	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createElements(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createElements(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createElements(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createElements(str);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
12	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createElements(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createElements(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createElements(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createElements(str);    }    	non-compiled	[CE]  'else'  without  'if'	51	None	replace
13	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
14	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createLocal(str);    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
15	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createLocal(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createLocal(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createLocal(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createLocal(str);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createLocal(str);  }  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createLocal(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createLocal(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createLocal(str);    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
17	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
18	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
19	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ENUM_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ENUM_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ENUM_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.ENUM_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
20	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.SOURCENAME_VALUE!=  clazz)  {  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.SOURCENAME_VALUE!=  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.SOURCENAME_VALUE!=  clazz)  {	  else    if(PatternOptionBuilder.SOURCENAME_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
24	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
25	[BUG]  [BUGGY]  return  createEscapedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscapedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscapedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);	  return    createEscapedFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
26	[BUG]  [BUGGY]  return  createFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  method  createFile  in  class  TypeHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createEscapedFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  method  createFile  in  class  TypeHandler  cannot  be  applied  to  given  types;	23	None	replace
27	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
28	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
29	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createClass(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createClass(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
33	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createExistingFile(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	40	None	replace
34	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  else    if(PatternOptionBuilder.EXISTING_FILE_VALUE!=    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
35	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE,  clazz);	  return    createExistingFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
36	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);	  return    createExistingFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
37	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EMPTY_FILE_VALUE);  [CE]  cannot  find  symbol  EMPTY_FILE_VALUE  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EMPTY_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.EMPTY_FILE_VALUE);	  return    createExistingFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  EMPTY_FILE_VALUE	3	None	replace
38	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
39	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.DEFAULT_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  'else'  without  'if'	42	None	replace
40	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createLocal(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createLocal(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createLocal(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createLocal(str);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
41	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LITERAL_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LITERAL_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LITERAL_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createLocal(str);    }    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
42	[BUG]  [BUGGY]  return  createEscapedFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscapedFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscapedFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createEscapedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
43	[BUG]  [BUGGY]  return  createFile(str,  clazz);  [CE]  method  createFile  in  class  TypeHandler  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createFile(str,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createFile(str,  clazz);	  return    createEscapedFile(str,    clazz);    	non-compiled	[CE]  method  createFile  in  class  TypeHandler  cannot  be  applied  to  given  types;	24	None	replace
44	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.ALL_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  'else'  without  'if'	46	None	replace
45	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
47	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
48	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.ALL_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
49	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE,  clazz);  [CE]  cannot  find  symbol  EMPTY_STRING_FILE_VALUE  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE,  clazz);	  return    createExistingFile(str,    PatternOptionBuilder.EMPTY_STRING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  EMPTY_STRING_FILE_VALUE	5	None	replace
50	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  EMPTY_STRING_FILE_VALUE  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createExistingFile(str,    PatternOptionBuilder.EMPTY_STRING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  EMPTY_STRING_FILE_VALUE	5	None	replace
51	[BUG]  [BUGGY]  return  createEscape(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscape(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscape(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createEscape(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
52	[BUG]  [BUGGY]  return  createExpr(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpr(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpr(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createExpr(str);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
53	[BUG]  [BUGGY]  return  createExpr(str,  clazz);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpr(str,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpr(str,  clazz);	  return    createExpr(str);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
54	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE,  clazz);  [CE]  cannot  find  symbol  DEFAULT_FILE_VALUE  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE,  clazz);	  return    createExistingFile(str,    PatternOptionBuilder.DEFAULT_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FILE_VALUE	52	None	replace
55	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  DEFAULT_FILE_VALUE  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createExistingFile(str,    PatternOptionBuilder.DEFAULT_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FILE_VALUE	52	None	replace
56	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.STRING_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.STRING_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.STRING_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE.toString());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE.toString());  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE.toString());	  return    createExpectedFile(str.toString());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
59	[BUG]  [BUGGY]  return  createExpectedFile(str,  Pattern.EXISTING_FILE_VALUE.toString());  [CE]  package  Pattern  does  not  exist  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  Pattern.EXISTING_FILE_VALUE.toString());  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  Pattern.EXISTING_FILE_VALUE.toString());	  return    createExpectedFile(str.toString());    	non-compiled	[CE]  package  Pattern  does  not  exist	47	None	replace
60	[BUG]  [BUGGY]  return  createExpectedFile(str,  str.toString());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  str.toString());  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  str.toString());	  return    createExpectedFile(str.toString());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
61	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.CLASS_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
62	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExpr(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExpr(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExpr(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
63	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExisting(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExisting(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createExisting(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
64	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
65	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
66	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExpr(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExpr(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createExpr(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
67	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExpr(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExpr(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExpr(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
68	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createExpression(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createExpression(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createExpression(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
69	[BUG]  [BUGGY]  return  createExistingFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createExistingFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
70	[BUG]  [BUGGY]  return  createExistingFile(str,  clazz,  PatternOptionBuilder.EMPTY_FILE_VALUE);  [CE]  cannot  find  symbol  EMPTY_FILE_VALUE  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  clazz,  PatternOptionBuilder.EMPTY_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  clazz,  PatternOptionBuilder.EMPTY_FILE_VALUE);	  return    createExistingFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  EMPTY_FILE_VALUE	4	None	replace
71	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOAD_FILE_VALUE!=  clazz)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOAD_FILE_VALUE!=  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOAD_FILE_VALUE!=  clazz)  {	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
72	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
73	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExpr(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExpr(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExpr(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
74	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExisting(str);  }  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExisting(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExisting(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
75	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
76	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
77	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
79	[BUG]  [BUGGY]  return  createEmptyFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEmptyFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEmptyFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createEmptyFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
80	[BUG]  [BUGGY]  return  createEmptyFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEmptyFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEmptyFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createEmptyFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
81	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
82	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
83	[BUG]  [BUGGY]  return  createExpectedFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  clazz,  PatternOptionBuilder.EXISTING_FILE_VALUE);	  return    createExpectedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
84	[BUG]  [BUGGY]  return  createExpectedFile(str,  clazz,  PatternOptionBuilder.EMPTY_FILE_VALUE);  [CE]  cannot  find  symbol  EMPTY_FILE_VALUE  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  clazz,  PatternOptionBuilder.EMPTY_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  clazz,  PatternOptionBuilder.EMPTY_FILE_VALUE);	  return    createExpectedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  EMPTY_FILE_VALUE	7	None	replace
85	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ELEMENT_VALUE  ==  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
86	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
87	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.LOADING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
88	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createLocalFile(str);  }	  else    if(PatternOptionBuilder.LOADING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
89	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.SOURCE_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.SOURCE_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.SOURCE_FILE_VALUE!=  clazz)  {  return  createExistingFileValue(str);  }	  else    if(PatternOptionBuilder.SOURCE_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
90	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createLocal(str);    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
91	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createClass(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createClass(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExistingFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createExistingFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
94	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
95	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createEscapedFile(str);  }  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
96	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.SELECTION_FILE_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.SELECTION_FILE_VALUE  ==  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.SELECTION_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.SOURCENAME_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
97	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE  +  1);  [CE]  cannot  find  symbol  DEFAULT_FILE_VALUE  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE  +  1);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE  +  1);	  return    createExistingFile(str,    PatternOptionBuilder.DEFAULT_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FILE_VALUE	52	None	replace
98	[BUG]  [BUGGY]  return  createExpectedFile(str,  clazz.toString());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  clazz.toString());  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  clazz.toString());	  return    createExpectedFile(str.toString());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
99	[BUG]  [BUGGY]  return  createExpectedFile(str.toString(),  clazz);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str.toString(),  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str.toString(),  clazz);	  return    createExpectedFile(str.toString());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
100	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createOutlineFile(str);  }  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createOutlineFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createOutlineFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
101	[BUG]  [BUGGY]  return  createEscapedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscapedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscapedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE  +  1);	  return    createEscapedFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	23	None	replace
102	[BUG]  [BUGGY]  return  createEscapedFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE);  [CE]  cannot  find  symbol  EMPTY_STRING_FILE_VALUE  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscapedFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscapedFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE);	  return    createEscapedFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  EMPTY_STRING_FILE_VALUE	23	None	replace
103	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
104	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createOutlineFile(str);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createOutlineFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOAD_FILE_VALUE  ==  clazz)  {  return  createOutlineFile(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
105	[BUG]  [BUGGY]  return  createEscape(str,  clazz,  clazz);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscape(str,  clazz,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscape(str,  clazz,  clazz);	  return    createEscape(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
106	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.END_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.END_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.END_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
107	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createExistingFile(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_VALUE!=  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
108	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createExpr(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createExpr(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createExpr(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
109	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOADING_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
110	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
111	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LEFT_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LEFT_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LEFT_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  else    if(PatternOptionBuilder.EXISTING_FILE_VALUE!=    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
112	[BUG]  [BUGGY]  return  createEscapedFile(str,  clazz,  clazz);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscapedFile(str,  clazz,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscapedFile(str,  clazz,  clazz);	  return    createEscapedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
113	[BUG]  [BUGGY]  return  createEscapedFile(str,  clazz,  _objectIdReader);  [CE]  cannot  find  symbol  _objectIdReader  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscapedFile(str,  clazz,  _objectIdReader);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscapedFile(str,  clazz,  _objectIdReader);	  return    createEscapedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  _objectIdReader	24	None	replace
114	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
115	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createEnd(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createEnd(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createEnd(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
116	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ENUM_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ENUM_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ENUM_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.ENUM_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
117	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOAD_FILE_VALUE!=  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOAD_FILE_VALUE!=  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOAD_FILE_VALUE!=  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
118	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
119	[BUG]  [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE),  clazz);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE),  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE),  clazz);	  return    createExpectedFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  ';'  expected	6	None	replace
120	[BUG]  [BUGGY]  return  createExistingFile(str,  clazz,  clazz);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  clazz,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  clazz,  clazz);	  return    createExistingFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
121	[BUG]  [BUGGY]  return  createExistingFile(str,  clazz,  clozz);  [CE]  cannot  find  symbol  clozz  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  clazz,  clozz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  clazz,  clozz);	  return    createExistingFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  clozz	4	None	replace
122	[BUG]  [BUGGY]  return  createExistingFile(str,  clazz.getName());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  clazz.getName());  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  clazz.getName());	  return    createExistingFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
123	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ESCAPE_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ESCAPE_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ESCAPE_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createElements(str);    }    	non-compiled	[CE]  'else'  without  'if'	51	None	replace
124	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createEscapedFile(str);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.CLASS_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
125	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	40	None	replace
126	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE  +  1);  [CE]  cannot  find  symbol  EMPTY_STRING_FILE_VALUE  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE  +  1);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.EMPTY_STRING_FILE_VALUE  +  1);	  return    createExistingFile(str,    PatternOptionBuilder.EMPTY_STRING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  EMPTY_STRING_FILE_VALUE	5	None	replace
127	[BUG]  [BUGGY]  return  createEmptyFile(str,  clazz,  clazz);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEmptyFile(str,  clazz,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEmptyFile(str,  clazz,  clazz);	  return    createEmptyFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
128	[BUG]  [BUGGY]  return  createExpectedFile(str,  clazz,  clazz);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  clazz,  clazz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  clazz,  clazz);	  return    createExpectedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
129	[BUG]  [BUGGY]  return  createExpectedFile(str,  clazz,  clozz);  [CE]  cannot  find  symbol  clozz  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  clazz,  clozz);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  clazz,  clozz);	  return    createExpectedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  clozz	7	None	replace
130	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE!=  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE!=  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_FILE_VALUE!=  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
131	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createExistingFile(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
132	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
133	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
134	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.CLASS_VALUE!=  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.CLASS_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
135	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LOCALE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LOCALE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LOCALE_VALUE  ==  clazz)  {  return  createLocal(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createLocal(str);    }    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
136	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.SOURCENAME_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.SOURCENAME_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.SOURCENAME_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
137	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExpr(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExpr(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExpr(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
138	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createOutputFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createOutputFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  createOutputFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
139	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
140	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
141	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.EXISTING_FILE_VALUE!=    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
142	[BUG]  [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE.toString());  [CE]  cannot  find  symbol  DEFAULT_FILE_VALUE  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE.toString());  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  PatternOptionBuilder.DEFAULT_FILE_VALUE.toString());	  return    createExpectedFile(str.toString());    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FILE_VALUE	47	None	replace
143	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.ENUM_VALUE    ==    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
144	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.CLASS_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
145	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.INTERFACE_VALUE  ==  clazz)  {  return  createExpr(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.INTERFACE_VALUE  ==  clazz)  {  return  createExpr(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.INTERFACE_VALUE  ==  clazz)  {  return  createExpr(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
146	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.TEXT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.TEXT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.TEXT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
147	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE)  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE)  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE)	  return    createExistingFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  ';'  expected	3	None	replace
148	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createLocal(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createLocal(str);    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
149	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
150	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createEmpty(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createEmpty(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  return  createEmpty(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
151	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
152	[BUG]  [BUGGY]  return  createEscapedFile(str,  clazz,  Object.class);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEscapedFile(str,  clazz,  Object.class);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEscapedFile(str,  clazz,  Object.class);	  return    createEscapedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
153	[BUG]  [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE)+  1;  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  PatternOptionBuilder.EXISTING_FILE_VALUE)+  1;	  return    createExpectedFile(str,    PatternOptionBuilder.EXISTING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
154	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LISTING_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
155	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.INTERFACE_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.INTERFACE_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.INTERFACE_VALUE  ==  clazz)  {  return  createClass(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
156	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.ENUM_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.ENUM_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.ENUM_VALUE  ==  clazz)  {  return  createClass(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
157	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ExISTING_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ExISTING_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ExISTING_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  else    if(PatternOptionBuilder.SOURCE_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
158	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
159	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ASSIGNING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ASSIGNING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ASSIGNING_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
160	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
161	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.SYNTHETIC_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  'else'  without  'if'  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.SYNTHETIC_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.SYNTHETIC_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.LOAD_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
162	[BUG]  [BUGGY]  return  createEmptyFile(str,  clazz,  PatternOptionBuilder.DEFAULT_FILE_VALUE);  [CE]  cannot  find  symbol  DEFAULT_FILE_VALUE  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createEmptyFile(str,  clazz,  PatternOptionBuilder.DEFAULT_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createEmptyFile(str,  clazz,  PatternOptionBuilder.DEFAULT_FILE_VALUE);	  return    createEmptyFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FILE_VALUE	44	None	replace
163	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [CE]  'else'  without  'if'  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createClass(str);  }	  else    if(PatternOptionBuilder.CLASS_VALUE    ==    clazz)    {    return    createClass(str);    }    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
164	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ALL_FILE_VALUE  ==  clazz)  {  return  createElements(str);  }	  else    if(PatternOptionBuilder.ELEMENTS_VALUE    ==    clazz)    {    return    createElements(str);    }    	non-compiled	[CE]  'else'  without  'if'	51	None	replace
165	[BUG]  [BUGGY]  return  createExpectedFile(str,  clazz,  PatternOptionBuilder.DEFAULT_FILE_VALUE);  [CE]  cannot  find  symbol  DEFAULT_FILE_VALUE  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExpectedFile(str,  clazz,  PatternOptionBuilder.DEFAULT_FILE_VALUE);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExpectedFile(str,  clazz,  PatternOptionBuilder.DEFAULT_FILE_VALUE);	  return    createExpectedFile(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FILE_VALUE	7	None	replace
166	[BUG]  [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.ERROR);  [CE]  cannot  find  symbol  ERROR  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  return  createExistingFile(str,  PatternOptionBuilder.ERROR);  [BUGGY]      }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	return  createExistingFile(str,  PatternOptionBuilder.ERROR);	  return    createExistingFile(str,    PatternOptionBuilder.EMPTY_STRING_FILE_VALUE);    	non-compiled	[CE]  cannot  find  symbol  ERROR	5	None	replace
167	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExpr(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExpr(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createExpr(str);  }	  else    if(PatternOptionBuilder.EXISTING_FILE_VALUE!=    clazz)    {    return    createExpr(str);    }    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
168	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  'else'  without  'if'  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_FILE_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  else    if(PatternOptionBuilder.CLASS_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
169	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.LEFT_FILE_VALUE  ==  clazz)  {  return  createExistingFileValue(str);  }	  else    if(PatternOptionBuilder.DEFAULT_FILE_VALUE    ==    clazz)    {    return    createExistingFileValue(str);    }    	non-compiled	[CE]  'else'  without  'if'	42	None	replace
170	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ERROR_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ERROR_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ERROR_FILE_VALUE  ==  clazz)  {  return  createExistingFile(str);  }	  else    if(PatternOptionBuilder.EXISTING_FILE_VALUE!=    clazz)    {    return    createExistingFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
171	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createEscapedFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE!=  clazz)  {  return  createEscapedFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
172	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  }  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	}  else  if(PatternOptionBuilder.END_VALUE  ==  clazz)  {  return  createEscapedFile(str);  }	  }    else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createEscapedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
173	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.ELEMENT_VALUE!=  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.ELEMENT_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
174	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.SYNTHETIC_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.CLASS_VALUE  ==  clazz)  {  return  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {      [BUGGY]  else  if(PatternOptionBuilder.SYNTHETIC_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }  [BUGGY]      return  createFile(str);  }  else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  else  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  Object  String  str  Class<?>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli39/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	92	92	2	replace	else  if(PatternOptionBuilder.SYNTHETIC_FILE_VALUE  ==  clazz)  {  return  createFile(str);  }	  else    if(PatternOptionBuilder.LOADING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
