bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	22	None	replace
2	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
3	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
4	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	15	None	replace
5	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	15	None	replace
6	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	15	None	replace
7	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	15	None	replace
8	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }	      if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  }	      if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }	      if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	add	}	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	compilable	  [FE]  AssertionFailedError  	5	2	replace
12	[BUG]  [BUGGY]  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	compilable	  [FE]  AssertionFailedError  	5	2	replace
13	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	5	None	replace
14	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	9	None	replace
15	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	9	None	replace
16	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	9	None	replace
17	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	      if(c    ==    'e')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
18	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    'e')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    'e')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
20	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    'e')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
21	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	2	None	replace
22	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	19	None	replace
23	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
24	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	29	None	replace
25	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	29	None	replace
26	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    1)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	26	None	replace
27	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	27	None	replace
28	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	27	None	replace
29	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }	      if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  }  break  partial;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  }  break  partial;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  }  break  partial;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    break    partial;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	4	None	replace
32	[BUG]  [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'b':  X=   "byte ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'b':  X=   "byte ";id=true;  break  partial;  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(0))  {  case  'b':  X=   "byte ";id=true;  break  partial;	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'a':  X=   "byte ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'a':  X=   "byte ";id=true;  break  partial;  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(0))  {  case  'a':  X=   "byte ";id=true;  break  partial;	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  case  4:  X=   "byte ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  case  4:  X=   "byte ";id=true;  break  partial;  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  X=   "byte ";id=true;  break  partial;	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	21	None	replace
36	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'f'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'f'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'f'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	21	None	replace
37	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
38	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
39	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
40	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	8	None	replace
41	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	8	None	replace
42	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	8	None	replace
43	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	3	None	replace
46	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
47	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
48	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
49	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }	      if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'f':  X=   "byte ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'f':  X=   "byte ";id=true;  break  partial;  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(0))  {  case  'f':  X=   "byte ";id=true;  break  partial;	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'a':  X=   "byte ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'a':  X=   "byte ";id=true;  break  partial;  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(1))  {  case  'a':  X=   "byte ";id=true;  break  partial;	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }	  }    else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
53	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
54	[BUG]  [BUGGY]  if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	9	None	replace
55	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	9	None	replace
56	[BUG]  [BUGGY]  if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	8	None	replace
57	[BUG]  [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	15	None	replace
58	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
59	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
60	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
61	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
62	[BUG]  [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }	      if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
63	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
64	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
65	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
66	[BUG]  [BUGGY]  if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
67	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
69	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
70	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(id  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    'e')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
71	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
72	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
73	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
74	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
75	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }	      if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	      if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
77	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
78	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
79	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  }  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  }	  }    else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
80	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    break    partial;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
82	[BUG]  [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'r':  X=   "byte ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'r':  X=   "byte ";id=true;  break  partial;  [BUGGY]    case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(0))  {  case  'r':  X=   "byte ";id=true;  break  partial;	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
83	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;    [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=   "byte   ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    'e')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
