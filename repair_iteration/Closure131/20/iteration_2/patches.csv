bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(3)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	16	None	replace
2	[BUG]  [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(1)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
3	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
4	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'a')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'a')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
5	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
6	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	37	None	replace
7	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	37	None	replace
8	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	37	None	replace
9	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(3)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	25	None	replace
10	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(3)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(3)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(3)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(3)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	25	None	replace
11	[BUG]  [BUGGY]  case  4:  switch(s.charAt(2))  {  case  'f':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(2))  {  case  'f':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(2))  {  case  'f':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'f':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
12	[BUG]  [BUGGY]  case  4:  switch(s.charAt(3))  {  case  'f':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(3))  {  case  'f':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(3))  {  case  'f':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'f':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
13	[BUG]  [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'f':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'f':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(1))  {  case  'f':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'f':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
14	[BUG]  [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	15	None	replace
15	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
16	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	21	None	replace
17	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	21	None	replace
18	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	21	None	replace
19	[BUG]  [BUGGY]  case  4:  switch(s.charAt(2))  {  case  'a':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(2))  {  case  'a':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(2))  {  case  'a':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(1))    {    case    'a':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
20	[BUG]  [BUGGY]  case  4:  switch(s.charAt(3))  {  case  'a':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(3))  {  case  'a':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(3))  {  case  'a':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(1))    {    case    'a':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
21	[BUG]  [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'a':  X= "byte   ";id=false;  break  partial;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'a':  X= "byte   ";id=false;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(1))  {  case  'a':  X= "byte   ";id=false;  break  partial;	  case    4:    switch(s.charAt(1))    {    case    'a':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
22	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=true;    }    break    partial;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	5	None	replace
24	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	5	None	replace
25	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	5	None	replace
26	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	47	None	replace
27	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	47	None	replace
28	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	47	None	replace
29	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  }    else    if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
30	[BUG]  [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'a':  X= "byte   ";id=false;  break  partial;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'a':  X= "byte   ";id=false;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(0))  {  case  'a':  X= "byte   ";id=false;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'a':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
31	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
32	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
33	[BUG]  [BUGGY]  case  4:  X= "byte   ";id=false;  break  partial;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  X= "byte   ";id=false;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  X= "byte   ";id=false;  break  partial;	  case    4:    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
34	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
35	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
36	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	3	None	replace
37	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	3	None	replace
38	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
39	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
40	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
41	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
42	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	56	None	replace
43	[BUG]  [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
44	[BUG]  [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
45	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
46	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
48	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	45	None	replace
49	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	45	None	replace
50	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	45	None	replace
51	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  if(c  ==  'E')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'E')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'E')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }	  if(id    ==    'e')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
55	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	48	None	replace
56	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	48	None	replace
57	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	48	None	replace
58	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	41	None	replace
59	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
60	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  c  ==  'r')  {  id=false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  c  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  ||  c  ==  'r')  {  id=false;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
61	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
62	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
63	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
64	[BUG]  [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	4	None	replace
65	[BUG]  [BUGGY]  case  4:  switch(s.charAt(3))  {  case  'b':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(3))  {  case  'b':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(3))  {  case  'b':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'b':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
66	[BUG]  [BUGGY]  case  4:  switch(s.charAt(2))  {  case  'b':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(2))  {  case  'b':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(2))  {  case  'b':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'b':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
67	[BUG]  [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'b':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'b':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(1))  {  case  'b':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'b':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
68	[BUG]  [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'b':  X= "byte   ";id=false;  break  partial;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'b':  X= "byte   ";id=false;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(0))  {  case  'b':  X= "byte   ";id=false;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'b':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
69	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
70	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
71	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
72	[BUG]  [BUGGY]  ||  c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  ||  c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	||  c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
73	[BUG]  [BUGGY]  ||!id.equals( "   "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  ||!id.equals( "   "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	||!id.equals( "   "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(!id.equals(   "   "))    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
74	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(!id.equals(   "   "))    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	66	None	replace
75	[BUG]  [BUGGY]  case  4:  if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	39	None	replace
76	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'f')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	39	None	replace
77	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'f')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	39	None	replace
78	[BUG]  [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
79	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
80	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
81	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=false;  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	40	None	replace
82	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'h')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
83	[BUG]  [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  orphaned  case	11	None	add
84	[BUG]  [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  orphaned  case	11	None	add
85	[BUG]  [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  }	  	non-compiled	[CE]  orphaned  case	11	None	add
86	[BUG]  [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  variable  c  might  not  have  been  initialized  [FE]          AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  variable  c  might  not  have  been  initialized	11	None	add
87	[BUG]  [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  orphaned  case	11	None	add
88	[BUG]  [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  orphaned  case	11	None	add
89	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
90	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
91	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
92	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	2	None	replace
93	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	2	None	replace
94	[BUG]  [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
95	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
96	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
97	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'f'    &&    s.charAt(    2)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	36	None	replace
98	[BUG]  [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  'e')  {  if(s.charAt(1)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'f'    &&    s.charAt(    2)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	36	None	replace
99	[BUG]  [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'f'    &&    s.charAt(    2)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	36	None	replace
100	[BUG]  [BUGGY]  case  4:  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
101	[BUG]  [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	54	None	replace
102	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
103	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
104	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	46	None	replace
105	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	46	None	replace
106	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	35	None	replace
107	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    't'    ||    c    ==    'y'    ||    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
108	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    't'    ||    c    ==    'y'    ||    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
109	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(3)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(3)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(3)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    't'    ||    c    ==    'y'    ||    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
110	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    't'    ||    c    ==    'y'    ||    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
111	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	22	None	replace
112	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	22	None	replace
113	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	22	None	replace
114	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	27	None	replace
115	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
116	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
117	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(1)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
118	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'r'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
119	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'r'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
120	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  }	  }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
121	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
122	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  }	  }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
123	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
124	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
125	[BUG]  [BUGGY]  case  4:  switch(s.charAt(2))  {  case  'r':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(2))  {  case  'r':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(2))  {  case  'r':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'r':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
126	[BUG]  [BUGGY]  case  4:  switch(s.charAt(3))  {  case  'r':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(3))  {  case  'r':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(3))  {  case  'r':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'r':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
127	[BUG]  [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'r':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(1))  {  case  'r':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(1))  {  case  'r':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'r':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
128	[BUG]  [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'r':  X= "byte   ";id=false;  break  partial;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  4:  switch(s.charAt(0))  {  case  'r':  X= "byte   ";id=false;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  4:  switch(s.charAt(0))  {  case  'r':  X= "byte   ";id=false;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'r':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
129	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  partial;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
130	[BUG]  [BUGGY]  if(id  ==  'else')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'else')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'else')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  unclosed  character  literal	58	None	replace
131	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	58	None	replace
132	[BUG]  [BUGGY]  if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	27	None	replace
133	[BUG]  [BUGGY]  case  'f':  X=   "byte ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  'f':  X=   "byte ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  'f':  X=   "byte ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'f':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
134	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
135	[BUG]  [BUGGY]  if(id  ==  '.')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  '.')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  '.')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }	  if(!id.equals(   "   "))    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	66	None	replace
136	[BUG]  [BUGGY]  if(id!=  '.')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  '.')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  '.')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }	  if(!id.equals(   "   "))    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	66	None	replace
137	[BUG]  [BUGGY]  }  case  4:  switch(s.charAt(0))  {  case  'a':  X=   "byte ";id=true;  break  partial;  [CE]  duplicate  case  label  [FE]    AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  case  4:  switch(s.charAt(0))  {  case  'a':  X=   "byte ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    case  4:  switch(s.charAt(0))  {  case  'a':  X=   "byte ";id=true;  break  partial;	  	non-compiled	[CE]  duplicate  case  label	11	None	add
138	[BUG]  [BUGGY]  }  case  4:  switch(s.charAt(0))  {  case  'f':  X=   "byte ";id=true;  break  partial;  [CE]  duplicate  case  label  [FE]      AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  case  4:  switch(s.charAt(0))  {  case  'f':  X=   "byte ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    case  4:  switch(s.charAt(0))  {  case  'f':  X=   "byte ";id=true;  break  partial;	  	non-compiled	[CE]  duplicate  case  label	11	None	add
139	[BUG]  [BUGGY]  }  if(c  ==  'e')  {  X=   "byte ";id=true;  break  partial;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  if(c  ==  'e')  {  X=   "byte ";id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    if(c  ==  'e')  {  X=   "byte ";id=true;  break  partial;  }	  	non-compiled	[CE]  orphaned  case	11	None	add
140	[BUG]  [BUGGY]  }  case  4:  X=   "byte ";id=true;  break  partial;  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  case  4:  X=   "byte ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    case  4:  X=   "byte ";id=true;  break  partial;	  	non-compiled	[CE]  orphaned  case	11	None	add
141	[BUG]  [BUGGY]  }  if(c  ==  'e')  {  X=   "byte ";id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  if(c  ==  'e')  {  X=   "byte ";id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    if(c  ==  'e')  {  X=   "byte ";id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	11	None	add
142	[BUG]  [BUGGY]  }  case  'f':  X=   "byte ";id=true;  break  partial;  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  case  'f':  X=   "byte ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    case  'f':  X=   "byte ";id=true;  break  partial;	  	non-compiled	[CE]  orphaned  case	11	None	add
143	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    't'    ||    c    ==    'y'    ||    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
144	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y')  {  id=true;  break  complete;  }	  if(c    ==    't'    ||    c    ==    'y'    ||    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
145	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    't'    ||    c    ==    'y'    ||    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
146	[BUG]  [BUGGY]  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
147	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(3)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	25	None	replace
148	[BUG]  [BUGGY]  if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
149	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
150	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	46	None	replace
151	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	46	None	replace
152	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
153	[BUG]  [BUGGY]  if(id  ==  'f')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'f')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'f')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
154	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	48	None	replace
155	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	21	None	replace
156	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	21	None	replace
157	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
158	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(3)  ==  'f'  &&  s.charAt(2)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'f'    &&    s.charAt(    2)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	36	None	replace
159	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(0)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(0)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(0)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'f'    &&    s.charAt(    2)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	36	None	replace
160	[BUG]  [BUGGY]  if(c  ==  'e')  {  X=   "byte ";id=true;  break  partial;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  X=   "byte ";id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  X=   "byte ";id=true;  break  partial;  }	  }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
161	[BUG]  [BUGGY]  if(c  ==  'e')  {  X=   "byte ";id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  X=   "byte ";id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  X=   "byte ";id=true;  break  complete;  }	  }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
162	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
163	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
164	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  ||  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  ||  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  ||  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	24	None	replace
165	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	24	None	replace
166	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	3	None	replace
167	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	3	None	replace
168	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	3	None	replace
169	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	22	None	replace
170	[BUG]  [BUGGY]  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
171	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(0)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(0)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(0)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
172	[BUG]  [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	54	None	replace
173	[BUG]  [BUGGY]  if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	54	None	replace
174	[BUG]  [BUGGY]  if(id  ==  'f')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'f')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'f')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	39	None	replace
175	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	39	None	replace
176	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=false;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
177	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	35	None	replace
178	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'f'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	35	None	replace
179	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	37	None	replace
180	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	37	None	replace
181	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  1)  ==  'r'  &&  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	2	None	replace
182	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	2	None	replace
183	[BUG]  [BUGGY]  case  'r':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  'r':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  'r':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'r':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
184	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'y'  &&  s.charAt(2)  ==  'r')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
185	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'r'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	60	None	replace
186	[BUG]  [BUGGY]  if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	45	None	replace
187	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	45	None	replace
188	[BUG]  [BUGGY]  if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }	  if(id    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	76	None	replace
189	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
190	[BUG]  [BUGGY]  if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
191	[BUG]  [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	56	None	replace
192	[BUG]  [BUGGY]  if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id.equals( " "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	56	None	replace
193	[BUG]  [BUGGY]  if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id.equals( " "))  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	47	None	replace
194	[BUG]  [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	47	None	replace
195	[BUG]  [BUGGY]  if(id  ==  'else')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id  ==  'else')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id  ==  'else')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  unclosed  character  literal	65	None	replace
196	[BUG]  [BUGGY]  if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }	  if(id!=    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
197	[BUG]  [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
198	[BUG]  [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
199	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	39	None	replace
200	[BUG]  [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
201	[BUG]  [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
202	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
203	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }	  if(c    ==    'e')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
204	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
205	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
206	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	40	None	replace
207	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
208	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
209	[BUG]  [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
210	[BUG]  [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
211	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  0)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  0)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'f'  &&  s.charAt(  0)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(3)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	25	None	replace
212	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  0)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  0)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  0)  ==  'f'  &&  s.charAt(  1)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(3)    ==    'f'    &&    s.charAt(1)    ==    'a')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	25	None	replace
213	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(3)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
214	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(3)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
215	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=true;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(3)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
216	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
217	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
218	[BUG]  [BUGGY]  if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }	  if(id!=    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	57	None	replace
219	[BUG]  [BUGGY]  }  else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
220	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
221	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
222	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
223	[BUG]  [BUGGY]  else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
224	[BUG]  [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
225	[BUG]  [BUGGY]  else  if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(id  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
226	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
227	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
228	[BUG]  [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
229	[BUG]  [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
230	[BUG]  [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'a'    &&    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
231	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't'  ||  c  ==  'y'  ||  s.charAt(1)  ==  'r')  {  id=false;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
232	[BUG]  [BUGGY]  }  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	  }    else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
233	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  0)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  0)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  0)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	27	None	replace
234	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  5)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  5)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  5)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	27	None	replace
235	[BUG]  [BUGGY]  if(!id.equals(name))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(!id.equals(name))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id.equals(name))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(!id.equals(   "   "))    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	66	None	replace
236	[BUG]  [BUGGY]  if(!id.equals( "* "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(!id.equals( "* "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id.equals( "* "))  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(!id.equals(   "   "))    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	66	None	replace
237	[BUG]  [BUGGY]  if(id!=  null)  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  null)  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  null)  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(!id.equals(   "   "))    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	66	None	replace
238	[BUG]  [BUGGY]  }  case  'a':  X=   "byte ";id=true;  break  partial;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  case  'a':  X=   "byte ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    case  'a':  X=   "byte ";id=true;  break  partial;	  	non-compiled	[CE]  orphaned  case	11	None	add
239	[BUG]  [BUGGY]  }  case  't':  X=   "byte ";id=true;  break  complete;  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  case  't':  X=   "byte ";id=true;  break  complete;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    case  't':  X=   "byte ";id=true;  break  complete;	  	non-compiled	[CE]  orphaned  case	11	None	add
240	[BUG]  [BUGGY]  }  case  't':  X=   "byte ";id=true;  break  partial;  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  case  't':  X=   "byte ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}    case  't':  X=   "byte ";id=true;  break  partial;	  	non-compiled	[CE]  orphaned  case	11	None	add
241	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	46	None	replace
242	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
243	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
244	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=false;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=false;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  0)  ==  'r')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
245	[BUG]  [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'r'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
246	[BUG]  [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'r'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
247	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(3)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	16	None	replace
248	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(3)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	16	None	replace
249	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
250	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
251	[BUG]  [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(c  ==  'e')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'h')  {  id=false;  }	  else    if(c    ==    'e')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'h')    {    id=false;    }    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
252	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	22	None	replace
253	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(0)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(0)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(0)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    partial;    }    	non-compiled	[CE]  orphaned  case	22	None	replace
254	[BUG]  [BUGGY]  if(!id)  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(!id)  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(!id)  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }	  if(id    ==    't')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=false;    }    	non-compiled	[CE]  orphaned  case	56	None	replace
255	[BUG]  [BUGGY]  case  'a':  X= "byte   ";id=true;  break  partial;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  case  'a':  X= "byte   ";id=true;  break  partial;  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	case  'a':  X= "byte   ";id=true;  break  partial;	  case    4:    switch(s.charAt(0))    {    case    'a':    X=       "byte   ";id=true;    break    partial;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
256	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
257	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	48	None	replace
258	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  0)  ==  'h')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  0)  ==  'h')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  &&  s.charAt(  0)  ==  'h')  {  id=true;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	48	None	replace
259	[BUG]  [BUGGY]  if(id!=  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }	  if(id    ==    'e')    {    if(s.charAt(    2)    ==    'y'    &&    s.charAt(    1)    ==    'r')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
260	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
261	[BUG]  [BUGGY]  if(s.charAt(  2)  ==  'y')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(  2)  ==  'y')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(  2)  ==  'y')  {  id=true;  break  complete;  }	  if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
262	[BUG]  [BUGGY]  if(s.charAt(0)  ==  'y'  &&  s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(s.charAt(0)  ==  'y'  &&  s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(s.charAt(0)  ==  'y'  &&  s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }	  if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
263	[BUG]  [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(id!=  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }	  if(id    ==    't')    {    if(s.charAt(2)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    }    break    partial;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
264	[BUG]  [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  {  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
265	[BUG]  [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	else  if(id  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  else    if(c    ==    'e')    {    if(s.charAt(    2)    ==    'f'    &&    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
266	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  if(c    ==    't')    {    if(s.charAt(    1)    ==    'y'    &&    s.charAt(    2)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
267	[BUG]  [BUGGY]  }  else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  }  else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	  }    else    if(c    ==    't')    {    if(s.charAt(    2)    ==    'y'    ||    s.charAt(    1)    ==    'r')    {    id=true;    }    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
268	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  'e')  {  if(s.charAt(  2)  ==  'a'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'e')    {    if(s.charAt(2)    ==    'a'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	47	None	replace
269	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  3)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(3)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	7	None	replace
270	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X=     "byte     ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  5)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(3)    ==    'y'    &&    s.charAt(1)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	7	None	replace
