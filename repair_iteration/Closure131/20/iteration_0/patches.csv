bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
2	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]      AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
3	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
4	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
5	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'h')  {  id=false;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	  	}  break  partial;  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
7	[BUG]  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
8	[BUG]  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=false;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
9	[BUG]  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
10	[BUG]  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }  [CE]  unreachable  statement  [FE]          AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  }  break  partial;  }		non-compiled	[CE]  unreachable  statement	40	None	add
11	[BUG]  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  unreachable  statement  [FE]            AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  't')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }		non-compiled	[CE]  unreachable  statement	40	None	add
12	[BUG]  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
13	[BUG]  [BUGGY]    if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  unreachable  statement  [FE]      AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  'e')  {  if(s.charAt(2)  ==  'y'  &&  s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  }		non-compiled	[CE]  unreachable  statement	40	None	add
14	[BUG]  [BUGGY]    if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  'e')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
15	[BUG]  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(id  ==  't')  {  if(s.charAt(  1)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
16	[BUG]  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  incomparable  types:  boolean  and  char  [FE]            AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  &&  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }		non-compiled	[CE]  incomparable  types:  boolean  and  char	40	None	add
17	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
18	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]      AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
19	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
20	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  partial;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
21	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
22	[BUG]  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
23	[BUG]  [BUGGY]    if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
24	[BUG]  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  incomparable  types:  boolean  and  char  [FE]        AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(id  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }		non-compiled	[CE]  incomparable  types:  boolean  and  char	40	None	add
25	[BUG]  [BUGGY]    if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [CE]  unreachable  statement  [FE]          AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(c  ==  't')  {  if(s.charAt(  2)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  }		non-compiled	[CE]  unreachable  statement	40	None	add
26	[BUG]  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    if(id  ==  't')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]  }  break  partial;  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	    if(id  ==  't')  {  if(s.charAt(  1)  ==  'y'  ||  s.charAt(  1)  ==  'r')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	40	None	add
27	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
28	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [CE]  'else'  without  'if'  [FE]      AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'a'  &&  s.charAt(1)  ==  'h')  {  id=true;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
29	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError  [CONTEXT]  id=true;  break  complete;  }  break  partial;  case  't':  if  (s.charAt(2)=='y'  &&  s.charAt(1)=='r')  {  id=true;  break  complete;  }  break  partial;  case  'v':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]  }  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]  case  4:  switch  (s.charAt(0))  {  case  'b':  X= "byte ";id=true;  break  partial;  case  'c':  c=s.charAt(3);  if  (c=='e')  {  if  (s.charAt(2)=='s'  &&  s.charAt(1)=='a')  {  id=true;  break  complete;}  }  else  if  (c=='r')  {  if  (s.charAt(2)=='a'  &&  s.charAt(1)=='h')  {  id=true;  break  complete;  }  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	94	94	2	replace	}  else  if(c  ==  'e')  {  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	}  break  partial;  	non-compiled	[CE]  'else'  without  'if'	39	None	replace
