bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't')  {  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't')  {  if(c  ==  'f')  {	  }    else    if(c    ==    'f')    {    if(c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	221	None	replace
2	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(c  ==  'E')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e')  {  if(c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'e')  {  if(c  ==  'E')  {	  }    else    if(c    ==    'f')    {    if(c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	221	None	replace
3	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(c  ==  'E'  ||  c  ==  'E')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e')  {  if(c  ==  'E'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'e')  {  if(c  ==  'E'  ||  c  ==  'E')  {	  }    else    if(c    ==    'f')    {    if(c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	221	None	replace
4	[BUG]  [BUGGY]  Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	108	None	replace
5	[BUG]  [BUGGY]  Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	108	None	replace
6	[BUG]  [BUGGY]  Context.checkState(id  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(id  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	108	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }    else    if(c!=    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	160	2	replace
8	[BUG]  [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }    else    if(c!=    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	160	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
10	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
11	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	113	None	add
12	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	113	None	add
13	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	113	None	add
14	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
15	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	113	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
17	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
19	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
21	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
22	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  RuntimeException  	256	3	add
23	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'r')  {  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  RuntimeException  	256	3	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
25	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
27	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	256	2	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
29	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
31	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
33	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
35	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
37	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
39	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	196	2	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  '.')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    {    'd')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
41	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  '.')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    {    'd')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ')')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  ')')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    {    'd')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
43	[BUG]  [BUGGY]  }  else  if(c  ==  ')')  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ')')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  ')')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    {    'd')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
44	[BUG]  [BUGGY]  parent  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }	  parent    ==    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  not  a  statement	276	None	replace
45	[BUG]  [BUGGY]  parent!=  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent!=  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent!=  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }	  parent    ==    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  not  a  statement	276	None	replace
46	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	242	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	242	2	replace
48	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	242	2	replace
49	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	242	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	106	2	add
51	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	106	2	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	106	2	add
53	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	106	2	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	106	2	add
55	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	106	2	add
56	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  ')'  expected	106	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
58	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
59	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	9	None	add
60	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	9	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
62	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
64	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  '-'  ||  c  ==  '+')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
66	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  '-'  ||  c  ==  '+')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
67	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  =='<  ')  {  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  =='<  ')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  '-'  ||  c  =='<  ')  {	  }    else    if(c    ==    '-')    {    	non-compiled	[CE]  unclosed  character  literal	273	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  '-'  ||  c  ==  '.')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
69	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '.')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  '-'  ||  c  ==  '.')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  '-'  ||  c  ==  ':')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
71	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  '-'  ||  c  ==  ':')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  't'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	147	2	replace
73	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	147	2	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	147	2	replace
75	[BUG]  [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	147	2	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
77	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
79	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
81	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
83	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
85	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
87	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
89	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
91	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
93	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
95	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
97	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
99	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'O'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }    else    if(c!=    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
101	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'O'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }    else    if(c!=    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }    else    if(c!=    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
103	[BUG]  [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }    else    if(c!=    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
105	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
107	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
109	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
111	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
113	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
115	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
117	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
119	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
121	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(2);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(3);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
123	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(3);  c=s.charAt(2);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(3);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(1);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
125	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(1);  c=s.charAt(2);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  c=s.charAt(1);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	86	2	add
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
127	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
128	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	74	None	add
129	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	74	None	add
130	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	74	None	add
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
132	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  't'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }    else    if(c    ==    'o'    ||    c    >=    'd')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
134	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }    else    if(c    ==    'o'    ||    c    >=    'd')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
136	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
138	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
140	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  >=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
142	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  >=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
144	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	117	2	add
145	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  else  if(c  ==  'd'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    else  if(c  ==  'd'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	117	None	add
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	206	2	add
147	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	206	2	add
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	206	2	add
149	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	206	2	add
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n')    {    }  else  if(c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	206	2	add
151	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  >=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n')    {    }  else  if(c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	206	2	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	206	2	add
153	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	206	2	add
154	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  {  'n')  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  }  else  if(c  {  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n')    {    }  else  if(c  {  'n')  {	  	non-compiled	[CE]  ')'  expected	206	None	add
155	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  else  if(c  ==  'n')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n')    {    else  if(c  ==  'n')  {	  	non-compiled	[CE]  'else'  without  'if'	206	None	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
157	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
159	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
161	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
163	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
165	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
167	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
169	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
171	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c!=  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c!=  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
173	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c!=  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c!=  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c!=  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  >=  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  >=  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
175	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  >=  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  >=  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  >=  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
177	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	225	2	add
178	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  {  'f'  ||  c  ==  'r')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  }  else  if(c  {  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    }  else  if(c  {  'f'  ||  c  ==  'r')  {	  	non-compiled	[CE]  ')'  expected	225	None	add
179	[BUG]  [BUGGY]  Context.checkState(c  ==  't');  [CE]  cannot  find  symbol  Context  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't');  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't');	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  cannot  find  symbol  Context	68	None	replace
180	[BUG]  [BUGGY]  Context.codeBug();  [CE]  cannot  find  symbol  Context  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.codeBug();  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.codeBug();	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  cannot  find  symbol  Context	68	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	62	2	add
182	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	62	2	add
183	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	62	None	add
184	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	62	None	add
185	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	62	None	add
186	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd  [CE]  unclosed  character  literal  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd	  	non-compiled	[CE]  unclosed  character  literal	62	None	add
187	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	62	None	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
189	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
191	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c!=  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c!=  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
193	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c!=  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c!=  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c!=  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  >=  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  >=  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
195	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  >=  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  >=  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  >=  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
196	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  else  if(c  ==  'O'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    else  if(c  ==  'O'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	198	None	add
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
198	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	198	2	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
200	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
202	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
204	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
206	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
207	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >>  'f')  {  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >>  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >>  'f')  {	  	non-compiled	[CE]  incompatible  types	98	None	add
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
209	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
210	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	71	2	replace
211	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	71	2	replace
212	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	aughtExceptionHandler.handleMissingException( " ");	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	77	None	replace
213	[BUG]  [BUGGY]  AssertionFailedError.make(name,  case  3);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  AssertionFailedError.make(name,  case  3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	AssertionFailedError.make(name,  case  3);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
214	[BUG]  [BUGGY]  AssertionFailedError.make(name,  case  2);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  AssertionFailedError.make(name,  case  2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	AssertionFailedError.make(name,  case  2);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
215	[BUG]  [BUGGY]  AssertionFailedError.make(name,  c,  case  3);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  AssertionFailedError.make(name,  c,  case  3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	AssertionFailedError.make(name,  c,  case  3);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
217	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
219	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
221	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
223	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  't')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
225	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  >=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
227	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'e')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
229	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
230	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  incomplete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  incomplete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  incomplete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
231	[BUG]  [BUGGY]  Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c!=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
232	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  full;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  full;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  full;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
233	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c!=  'r'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c!=  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c!=  'r'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
235	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
237	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
239	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
241	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
243	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
245	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  c  ==  'o')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	195	2	replace
247	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  c  ==  'o')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	195	2	replace
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  'o')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	195	2	replace
249	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  'o')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	195	2	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'O')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	195	2	replace
251	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'O')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'O')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	195	2	replace
252	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  'o')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	195	2	replace
253	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  'o')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	195	2	replace
254	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	240	None	replace
255	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	240	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
257	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
259	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
261	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
262	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	260	3	add
263	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'f'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	260	3	add
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
265	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'f'  &&  s.charAt(2)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
267	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  >=  'f'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	260	2	add
268	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	105	None	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
270	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'D')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
272	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'D')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'D')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
274	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
276	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c!=  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
278	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'y')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'y')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
280	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'y')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'y')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'y')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  't'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }    else    if(c    {    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	224	2	replace
282	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }    else    if(c    {    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	224	2	replace
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  c  ==  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
284	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  c  ==  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
286	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'd'  ||  c  ==  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
288	[BUG]  [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'd'  ||  c  ==  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c!=  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
290	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c!=  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    >=    'f')    {    	compilable	  [FE]  AssertionFailedError  	99	2	replace
292	[BUG]  [BUGGY]  }  else  if(c!=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    >=    'f')    {    	compilable	  [FE]  AssertionFailedError  	99	2	replace
293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	12	2	replace
294	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	12	2	replace
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
296	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
298	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
300	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
302	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
304	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'h')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'h')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
306	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'h')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'h')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'h')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
308	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
310	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
312	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
313	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  RuntimeException  	274	3	add
314	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'o')  {  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  RuntimeException  	274	3	add
315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
316	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)!=  'o')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  >=  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  >=  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
318	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  >=  'd'  &&  s.charAt(2)  ==  'o')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  }  else  if(c  >=  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    }  else  if(c  >=  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	274	2	add
319	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  ==  'o'  &&  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
320	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  ==  'o'  &&  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c!=  'o'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c!=  'o'  &&  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
322	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c!=  'o'  &&  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c!=  'o'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c!=  'o'  &&  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  ==  'o'  &&  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
324	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c!=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  ==  'o'  &&  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  >=  'o'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  >=  'o'  &&  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
326	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  >=  'o'  &&  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  >=  'o'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  >=  'o'  &&  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
327	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  ==  'o'  &&  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
328	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c  >=  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  ==  'o'  &&  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
329	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  else  if(c  ==  'o'  &&  c  ==  'd')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  else  if(c  ==  'o'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    else  if(c  ==  'o'  &&  c  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
331	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
333	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
335	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
337	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
339	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
341	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
343	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(4);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
344	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt((4);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt((4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt((4);	  	non-compiled	[CE]  ')'  expected	92	None	add
345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
346	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
347	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(5);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt(5);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
348	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(5);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(5);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt(5);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(6);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt(6);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
350	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(6);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt(6);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt(6);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(3);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(3);  c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
352	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(3);  c=s.charAt(4);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(3);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(3);  c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	92	2	add
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	261	2	replace
354	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	261	2	replace
355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'd')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	261	2	replace
356	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'd')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	261	2	replace
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	261	2	replace
358	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'd')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	261	2	replace
359	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	269	2	replace
360	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	269	2	replace
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	269	2	replace
362	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	269	2	replace
363	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	116	None	replace
364	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	116	None	replace
365	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	116	None	replace
366	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	116	None	replace
367	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  finish;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	116	None	replace
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
369	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
371	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
373	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
375	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
377	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
379	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    '-')    {    }  else  if(c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
381	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    '-')    {    }  else  if(c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
383	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c!=  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    '-')    {    }  else  if(c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
385	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >=  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
386	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  {  '-')  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  {  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  {  '-')  {	  	non-compiled	[CE]  ')'  expected	272	None	add
387	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  else  if(c  ==  '-')  {  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  else  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    else  if(c  ==  '-')  {	  	non-compiled	[CE]  'else'  without  'if'	272	None	add
388	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >>  '-')  {  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >>  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  >>  '-')  {	  	non-compiled	[CE]  incompatible  types	272	None	add
389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
390	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'z')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
392	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'z')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'z')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
394	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
396	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
397	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
398	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
399	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
400	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
401	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
402	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
403	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
404	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
405	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
406	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
407	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(4)  ==  'd')  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
408	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
409	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
410	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
411	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
413	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
414	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
415	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
417	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
418	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'r'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
419	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'r'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
420	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  =='s')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
421	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  =='s')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
423	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'O'  &&  c  ==  'f')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
425	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'O'  &&  c  ==  'f')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'O'  ||  c  ==  'f')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
427	[BUG]  [BUGGY]  }  else  if(c!=  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'O'  ||  c  ==  'f')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
428	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'O'  ||  c  ==  'F')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
429	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'F')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'O'  ||  c  ==  'F')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
430	[BUG]  [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    &&    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	220	None	replace
431	[BUG]  [BUGGY]  deal(s.charAt(2))  {  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(s.charAt(2))  {  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    &&    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	220	None	replace
432	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    &&    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	220	None	replace
433	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    &&    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	220	None	replace
434	[BUG]  [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    &&    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	220	None	replace
435	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
436	[BUG]  [BUGGY]  deal(s.charAt(2))  {  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(s.charAt(2))  {  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
438	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
439	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
440	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
441	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
442	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
444	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
445	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
446	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
448	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
449	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
450	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
451	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
452	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
453	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	66	None	add
454	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	66	None	add
455	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	66	None	add
456	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  'd  [CE]  unclosed  character  literal  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  'd  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  'd	  	non-compiled	[CE]  unclosed  character  literal	66	None	add
457	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	66	None	add
458	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	112	None	replace
459	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	112	None	replace
460	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	112	None	replace
461	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	112	None	replace
462	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c!=  'd')  {	  }    else    if(c    ==    'o'    &&    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
463	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c!=  'd')  {	  }    else    if(c    ==    'o'    &&    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
464	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  c  ==  'o')  {	  }    else    if(c    ==    'o'    &&    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
465	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  c  ==  'o')  {	  }    else    if(c    ==    'o'    &&    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
466	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  <=  'd')  {	  }    else    if(c    ==    'o'    &&    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
467	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  <=  'd')  {	  }    else    if(c    ==    'o'    &&    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
468	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {	  }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
469	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {	  }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
470	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(0)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  s.charAt(0)  ==  'o')  {	  }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
471	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(0)  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(0)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  s.charAt(0)  ==  'o')  {	  }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
472	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'o')  {	  }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    	compilable	  [FE]  RuntimeException  	275	3	replace
473	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'o')  {  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  s.charAt(2)  ==  'o')  {	  }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    	compilable	  [FE]  RuntimeException  	275	3	replace
474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    {    'f')    {    	compilable	  [FE]  AssertionFailedError  	100	2	replace
475	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    {    'f')    {    	compilable	  [FE]  AssertionFailedError  	100	2	replace
476	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
477	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
478	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
479	[BUG]  [BUGGY]  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
480	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
481	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
483	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
484	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(3);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(3);    c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	58	2	add
485	[BUG]  [BUGGY]  c=s.charAt(3);  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(3);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(3);    c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	58	2	add
486	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(3);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(3);    c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	58	2	add
487	[BUG]  [BUGGY]  c=s.charAt(3);  c=s.charAt(2);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(3);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(3);    c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	58	2	add
488	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(3);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(3);    c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	58	2	add
489	[BUG]  [BUGGY]  c=s.charAt(3);  c=s.charAt(4);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(3);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(3);    c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	58	2	add
490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(3);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(3);    c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	58	2	add
491	[BUG]  [BUGGY]  c=s.charAt(3);  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(3);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(3);    c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	58	2	add
492	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
493	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
494	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
495	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
496	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
497	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
499	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
501	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
503	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
505	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
507	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
508	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c!=  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c!=  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
509	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c!=  'O'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c!=  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c!=  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
510	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  >=  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  >=  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
511	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  >=  'O'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  >=  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  >=  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
512	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
513	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
514	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  else  if(c  ==  'O'  ||  c  ==  'r')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    else  if(c  ==  'O'  ||  c  ==  'r')  {	  	non-compiled	[CE]  'else'  without  'if'	140	None	add
515	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	203	None	replace
516	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	203	None	replace
517	[BUG]  [BUGGY]  Context.checkArgument(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkArgument(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkArgument(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	203	None	replace
518	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	203	None	replace
519	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(1);    c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	55	2	add
520	[BUG]  [BUGGY]  c=s.charAt(1);  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(1);    c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	55	2	add
521	[BUG]  [BUGGY]  c=s.charAt(1);  c=s.charAt(  1;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(1);    c=s.charAt(  1;	  	non-compiled	[CE]  ')'  expected	55	None	add
522	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(1);    c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	55	2	add
523	[BUG]  [BUGGY]  c=s.charAt(1);  c=s.charAt(2);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(1);    c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	55	2	add
524	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(1);    c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	55	2	add
525	[BUG]  [BUGGY]  c=s.charAt(1);  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(1);    c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	55	2	add
526	[BUG]  [BUGGY]  c=s.charAt(1);  int  c=s.charAt(1);  [CE]  variable  c  is  already  defined  in  method  isKeyword(String)  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  int  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(1);    int  c=s.charAt(1);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isKeyword(String)	55	None	add
527	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
528	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
530	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
531	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
532	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
534	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
535	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
536	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
537	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
538	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
539	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
540	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
542	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
544	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
546	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
547	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
548	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
549	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
550	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
551	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
552	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
553	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
554	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
555	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
556	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
558	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  ==  'd'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
560	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  ==  'd'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  ==  'd'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
562	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  ==  'd'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
563	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c!=  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c!=  'd'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
564	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c!=  'd'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c!=  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c!=  'd'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
565	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  >=  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  >=  'd'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
566	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  >=  'd'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  >=  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  >=  'd'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  ==  'd'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
568	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  ==  'd'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  ==  'd'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	204	2	add
569	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  else  if(c  ==  'd'  ||  c  ==  'a')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  else  if(c  ==  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    else  if(c  ==  'd'  ||  c  ==  'a')  {	  	non-compiled	[CE]  'else'  without  'if'	204	None	add
570	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'r')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'r')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'r')  {  if(c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    if(c    ==    'o'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	223	None	replace
571	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    if(c    ==    'o'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	223	None	replace
572	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	111	2	add
573	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	111	2	add
574	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	111	None	add
575	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	111	None	add
576	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	111	None	add
577	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
578	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	111	None	add
579	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  ==  'f'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
580	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  ==  'f'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
581	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  ==  'f'  ||  c!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
582	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c!=  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  ==  'f'  ||  c!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
583	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c!=  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c!=  'f'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
584	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c!=  'f'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c!=  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c!=  'f'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
585	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  >=  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  >=  'f'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
586	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  >=  'f'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  >=  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  >=  'f'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
587	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  ==  'f'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
588	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c  >=  'o')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  ==  'f'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  ==  'f'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	194	2	add
589	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  {  'f'  ||  c  ==  'o')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  }  else  if(c  {  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    }  else  if(c  {  'f'  ||  c  ==  'o')  {	  	non-compiled	[CE]  ')'  expected	194	None	add
590	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
591	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
592	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'F')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
593	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'F')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'F')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
594	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
595	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
596	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
597	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c!=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
598	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'D')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
599	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'D')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'D')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
600	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
601	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  >=  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
603	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
605	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
606	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
607	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
609	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
610	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
611	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
612	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
613	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  >=  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
614	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
615	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
616	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
617	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
618	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'D')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
619	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'D')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'D')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
620	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
621	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c    >=    'f')    {    	compilable	  [FE]  AssertionFailedError  	153	2	replace
623	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c    >=    'f')    {    	compilable	  [FE]  AssertionFailedError  	153	2	replace
624	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
625	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
626	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	64	None	add
627	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	64	None	add
628	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	64	None	add
629	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	64	None	add
630	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s	  	non-compiled	[CE]  ')'  expected	64	None	add
631	[BUG]  [BUGGY]  Context.checkState(c  >=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  >=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  >=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
632	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c!=  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c!=  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c!=  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
633	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
634	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
635	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
636	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
637	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
638	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
639	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
640	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
641	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
642	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
643	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
644	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
645	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
646	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
647	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
648	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
650	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
651	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
652	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
653	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
654	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
655	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
656	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
657	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
658	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
659	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
660	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
661	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
662	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
663	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
664	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  =='s')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
666	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  =='s')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
667	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
668	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
669	[BUG]  [BUGGY]  c=s.charAt(id,  c);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(id,  c);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(id,  c);	  c=s.charAt(id);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	57	None	replace
670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(c);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(c);	  c=s.charAt(id);    	compilable	  [FE]  AssertionFailedError  	57	2	replace
671	[BUG]  [BUGGY]  c=s.charAt(c);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(c);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(c);	  c=s.charAt(id);    	compilable	  [FE]  AssertionFailedError  	57	2	replace
672	[BUG]  [BUGGY]  c=s.charAt(c,  id);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(c,  id);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(c,  id);	  c=s.charAt(id);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	57	None	replace
673	[BUG]  [BUGGY]  c=s.charAt(id,  name);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(id,  name);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(id,  name);	  c=s.charAt(id);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	57	None	replace
674	[BUG]  [BUGGY]  c=s.charAt(name,  id);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(name,  id);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(name,  id);	  c=s.charAt(id);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	57	None	replace
675	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
676	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
677	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
678	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  't')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  't')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  't')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
679	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
680	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
681	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
682	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
683	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
684	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
685	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
686	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
687	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
689	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
690	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
691	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
692	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
693	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
694	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
695	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c!=  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c!=  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
697	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c!=  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c!=  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c!=  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
698	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  >=  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  >=  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
699	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  >=  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  >=  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  >=  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
700	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
701	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
702	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  else  if(c  ==  'f'  ||  c  ==  'a')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    else  if(c  ==  'f'  ||  c  ==  'a')  {	  	non-compiled	[CE]  'else'  without  'if'	49	None	add
703	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'e')  {	  }    else    if(c    ==    'd')    {    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	214	2	replace
704	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'e')  {	  }    else    if(c    ==    'd')    {    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	214	2	replace
705	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'e')  {	  }    else    if(c    ==    'd')    {    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	214	2	replace
706	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'e')  {	  }    else    if(c    ==    'd')    {    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	214	2	replace
707	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
708	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
709	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  ==  'd'  ||  c!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
710	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c!=  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  ==  'd'  ||  c!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
711	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c!=  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
712	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c!=  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
713	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  >=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  >=  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
714	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  >=  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  >=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  >=  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
715	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  ==  'd'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
716	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c  >=  'o')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  ==  'd'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  ==  'd'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
717	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  else  if(c  ==  'd'  ||  c  ==  'o')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    else  if(c  ==  'd'  ||  c  ==  'o')  {	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
718	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'i')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'i')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'i')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	80	None	replace
719	[BUG]  [BUGGY]  deal(s.charAt(2))  {  if(c  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(s.charAt(2))  {  if(c  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  if(c  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	247	None	replace
720	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    >=    'd')    {    	compilable	  [FE]  AssertionFailedError  	187	2	replace
721	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    >=    'd')    {    	compilable	  [FE]  AssertionFailedError  	187	2	replace
722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  ==  'n'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
723	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  ==  'n'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  ==  'n'  ||  c!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
725	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c!=  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  ==  'n'  ||  c!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
726	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c!=  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c!=  'n'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
727	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c!=  'n'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c!=  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c!=  'n'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  >=  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  >=  'n'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
729	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  >=  'n'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  >=  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  >=  'n'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  ==  'n'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
731	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c  >=  'o')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  ==  'n'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  ==  'n'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
732	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  else  if(c  ==  'n'  ||  c  ==  'o')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  else  if(c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    else  if(c  ==  'n'  ||  c  ==  'o')  {	  	non-compiled	[CE]  'else'  without  'if'	218	None	add
733	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
734	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
735	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	76	None	add
736	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	76	None	add
737	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
738	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	76	None	add
739	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	76	None	add
740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
741	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
742	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
743	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
744	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
745	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
746	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
747	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
748	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
749	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
750	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
751	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
752	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	non-compiled	[CE]  orphaned  case	267	None	replace
753	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  ||  c  ==  'd')  {  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	non-compiled	[CE]  orphaned  case	267	None	replace
754	[BUG]  [BUGGY]  }  else  if(c  ==  'o')  {  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o')  {  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o')  {  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	non-compiled	[CE]  orphaned  case	267	None	replace
755	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
756	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
757	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
758	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
759	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
760	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
761	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'O')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
762	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'O')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'O')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
763	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
764	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
765	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
766	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
767	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	109	2	add
768	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	109	2	add
769	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	109	None	add
770	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	109	None	add
771	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	109	None	add
772	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	109	None	add
773	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
774	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(0);  c=s.charAt(0);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(0);    c=s.charAt(0);	  	compilable	  [FE]  AssertionFailedError  	53	2	add
775	[BUG]  [BUGGY]  c=s.charAt(0);  c=s.charAt(0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(0);  c=s.charAt(0);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(0);    c=s.charAt(0);	  	compilable	  [FE]  AssertionFailedError  	53	2	add
776	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(0);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(0);    c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	53	2	add
777	[BUG]  [BUGGY]  c=s.charAt(0);  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(0);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(0);    c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	53	2	add
778	[BUG]  [BUGGY]  c=s.charAt(0);  c=s.charAt(  1;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(0);  c=s.charAt(  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(0);    c=s.charAt(  1;	  	non-compiled	[CE]  ')'  expected	53	None	add
779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(0);  c=s.charAt(  2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(0);    c=s.charAt(  2);	  	compilable	  [FE]  AssertionFailedError  	53	2	add
780	[BUG]  [BUGGY]  c=s.charAt(0);  c=s.charAt(  2);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(0);  c=s.charAt(  2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(0);    c=s.charAt(  2);	  	compilable	  [FE]  AssertionFailedError  	53	2	add
781	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
782	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
783	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
784	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
785	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
786	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  2)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
787	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
788	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
789	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
790	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
791	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
792	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
793	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
794	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
795	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
796	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	138	2	add
797	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  {  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  {  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  {  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	non-compiled	[CE]  ')'  expected	138	None	add
798	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
799	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
801	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
802	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
803	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
804	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
805	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
806	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
807	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
808	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
809	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
810	[BUG]  [BUGGY]  case  2:  c=s.charAt(1);  break  partial;  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  2:  c=s.charAt(1);  break  partial;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(1);  break  partial;	  case    2:    c=s.charAt(2);    break    partial;    	non-compiled	[CE]  orphaned  case	271	None	replace
811	[BUG]  [BUGGY]  case  2:  c=s.charAt(0);  break  partial;  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  2:  c=s.charAt(0);  break  partial;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(0);  break  partial;	  case    2:    c=s.charAt(2);    break    partial;    	non-compiled	[CE]  orphaned  case	271	None	replace
812	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
813	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
814	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	79	None	add
815	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	79	None	add
816	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
817	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	79	None	add
818	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	79	None	add
819	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete    	non-compiled	[CE]  orphaned  case	82	None	replace
820	[BUG]  [BUGGY]  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  not  a  statement	270	None	replace
821	[BUG]  [BUGGY]  s.charAt(2)  ==  'r')  {  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  s.charAt(2)  ==  'r')  {  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	s.charAt(2)  ==  'r')  {  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  not  a  statement	270	None	replace
822	[BUG]  [BUGGY]  s.charAt(2)  {  'r')  {  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  s.charAt(2)  {  'r')  {  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	s.charAt(2)  {  'r')  {  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	270	None	replace
823	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  =='s')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
824	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  =='s')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  =='s')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
825	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
826	[BUG]  [BUGGY]  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
827	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
828	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'O'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
829	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
830	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c!=  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
831	[BUG]  [BUGGY]  Context.checkArgument(c  ==  't');  [CE]  cannot  find  symbol  Context  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkArgument(c  ==  't');  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkArgument(c  ==  't');	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  cannot  find  symbol  Context	233	None	replace
832	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
833	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
834	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
835	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
836	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
837	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
838	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  >=  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
839	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
840	[BUG]  [BUGGY]  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	s.charAt(1)  ==  'n')  {  id=false;  break  complete;	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	262	None	replace
841	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
842	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
843	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
844	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
845	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
846	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
847	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
848	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
849	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
850	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
851	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
852	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
853	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {	  }    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	202	2	replace
854	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  ||  s.charAt(0)  ==  'd')  {	  }    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	202	2	replace
855	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  c  ==  'a')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
856	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  c  ==  'a')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
857	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'z')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
858	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'z')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'z')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
859	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
860	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'r')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
861	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	65	None	replace
862	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	65	None	replace
863	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	65	None	replace
864	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	69	None	replace
865	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	69	None	replace
866	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	69	None	replace
867	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
868	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
869	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
870	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
871	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
872	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
873	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
874	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
875	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
876	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
877	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
878	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
879	[BUG]  [BUGGY]  case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  orphaned  case	241	None	replace
880	[BUG]  [BUGGY]  case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  orphaned  case	241	None	replace
881	[BUG]  [BUGGY]  case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  3:  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  orphaned  case	241	None	replace
882	[BUG]  [BUGGY]  Context.checkState(c!=  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c!=  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
883	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  incomplete;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  incomplete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  incomplete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
884	[BUG]  [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  't'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  't'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  'd'  ||  c  ==  't'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
885	[BUG]  [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  't')  {  break  complete;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  't')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  'd'  ||  c  ==  't')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
886	[BUG]  [BUGGY]  case  2:  c=s.charAt(1);  break  1;  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  2:  c=s.charAt(1);  break  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(1);  break  1;	  case    2:    c=s.charAt(2);    break    1;    	non-compiled	[CE]  orphaned  case	208	None	replace
887	[BUG]  [BUGGY]  case  2:  c=s.charAt(0);  break  1;  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  2:  c=s.charAt(0);  break  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(0);  break  1;	  case    2:    c=s.charAt(2);    break    1;    	non-compiled	[CE]  orphaned  case	208	None	replace
888	[BUG]  [BUGGY]  case  2:  c=s.charAt(3);  break  1;  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  2:  c=s.charAt(3);  break  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(3);  break  1;	  case    2:    c=s.charAt(2);    break    1;    	non-compiled	[CE]  orphaned  case	208	None	replace
889	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
890	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
891	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
892	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
893	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
894	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
895	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
896	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
897	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
898	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
899	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'd'  ||  c  ==  'o')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
900	[BUG]  [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'd'  ||  c  ==  'o')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
901	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c!=  'o')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
902	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c!=  'o')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
903	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
904	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
905	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
906	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
907	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
908	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
909	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
910	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
911	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
912	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
913	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
914	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
915	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  c  ==  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    't')    {    	compilable	  [FE]  AssertionFailedError  	259	2	replace
916	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  't')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  c  ==  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    't')    {    	compilable	  [FE]  AssertionFailedError  	259	2	replace
917	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    't')    {    	compilable	  [FE]  AssertionFailedError  	259	2	replace
918	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    't')    {    	compilable	  [FE]  AssertionFailedError  	259	2	replace
919	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    't')    {    	compilable	  [FE]  AssertionFailedError  	259	2	replace
920	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  't')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    't')    {    	compilable	  [FE]  AssertionFailedError  	259	2	replace
921	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  >=  'f'  ||  c  ==  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    't')    {    	compilable	  [FE]  AssertionFailedError  	259	2	replace
922	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  >=  'f'  ||  c  ==  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    't')    {    	compilable	  [FE]  AssertionFailedError  	259	2	replace
923	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	263	2	add
924	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	263	2	add
925	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	263	2	add
926	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	263	2	add
927	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	263	2	add
928	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	263	2	add
929	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  ')'  expected	263	None	add
930	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
931	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
932	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
933	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
934	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
935	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
936	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
937	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
938	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
939	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
940	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
941	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
942	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
943	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
944	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	209	3	add
945	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	209	3	add
946	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	209	3	add
947	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	209	3	add
948	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(1)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
949	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)!=  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  ||  s.charAt(1)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  ||  s.charAt(1)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
951	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  ||  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
952	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
953	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  ||  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
954	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	72	2	add
955	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	72	2	add
956	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	72	2	add
957	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	72	2	add
958	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	72	2	add
959	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	72	2	add
960	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }	  	non-compiled	[CE]  ')'  expected	72	None	add
961	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	72	None	add
962	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
963	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
964	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
965	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
966	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
967	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  >=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
968	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
969	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
970	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
971	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
972	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
973	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
974	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(2);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(2);  c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	90	2	add
975	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(2);  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(2);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(2);  c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	90	2	add
976	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(3);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(3);  c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	90	2	add
977	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(3);  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(3);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(3);  c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	90	2	add
978	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(  2);  c=s.charAt(  1;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(  2);  c=s.charAt(  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(  2);  c=s.charAt(  1;	  	non-compiled	[CE]  ')'  expected	90	None	add
979	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(1);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(1);  c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	90	2	add
980	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(1);  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(1);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(1);  c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	90	2	add
981	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'd')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'd')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'd')  {  if(c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    if(c    ==    'o'    ||    c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	230	None	replace
982	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    if(c    ==    'o'    ||    c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	230	None	replace
983	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c!=  'f')  {	  }    else    if(c    ==    'o'    &&    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	193	2	replace
984	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c!=  'f')  {	  }    else    if(c    ==    'o'    &&    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	193	2	replace
985	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  c  ==  'f')  {	  }    else    if(c    ==    'f'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	48	2	replace
986	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  c  ==  'f')  {	  }    else    if(c    ==    'f'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	48	2	replace
987	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  'f')  {	  }    else    if(c    ==    'f'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	48	2	replace
988	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  'f')  {	  }    else    if(c    ==    'f'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	48	2	replace
989	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  'f')  {	  }    else    if(c    ==    'f'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	48	2	replace
990	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  'f')  {	  }    else    if(c    ==    'f'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	48	2	replace
991	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'F')  {	  }    else    if(c    ==    'f'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	48	2	replace
992	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'F')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'F')  {	  }    else    if(c    ==    'f'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	48	2	replace
993	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
994	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
995	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
996	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
997	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
998	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
999	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1000	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1001	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1002	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1003	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  =='s'  ||  c  =='s')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1004	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  =='s'  ||  c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  =='s'  ||  c  =='s')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1005	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
1006	[BUG]  [BUGGY]  deal(s.charAt(2))  {  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(s.charAt(2))  {  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	246	None	replace
1007	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	257	2	replace
1008	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  s.charAt(1)  ==  'r')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	257	2	replace
1009	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'r')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	257	2	replace
1010	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  s.charAt(0)  ==  'r')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	257	2	replace
1011	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	257	2	replace
1012	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  s.charAt(3)  ==  'r')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	257	2	replace
1013	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1014	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1015	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1016	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1017	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1018	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1019	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'd'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1020	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'd'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1021	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1022	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1023	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1024	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1025	[BUG]  [BUGGY]  Context.checkState(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
1026	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	29	None	replace
1027	[BUG]  [BUGGY]  deal(s.charAt(2))  {  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(s.charAt(2))  {  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1028	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1029	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1030	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1031	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1032	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1033	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c!=  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c!=  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1034	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c!=  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c!=  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c!=  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1035	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  >=  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  >=  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1036	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  >=  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  >=  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  >=  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1037	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1038	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  >=  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1039	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  {  'f'  ||  c  ==  'd')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  }  else  if(c  {  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    }  else  if(c  {  'f'  ||  c  ==  'd')  {	  	non-compiled	[CE]  ')'  expected	51	None	add
1040	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1041	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1042	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1043	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1044	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1045	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1046	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1047	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1048	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1049	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1050	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1051	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1052	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	52	2	replace
1053	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	52	2	replace
1054	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	52	2	replace
1055	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	52	2	replace
1056	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	52	2	replace
1057	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	52	2	replace
1058	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1059	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1060	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1061	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1062	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1063	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1064	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1065	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1066	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1067	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1068	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1069	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1070	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1071	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1072	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1073	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1074	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1075	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1076	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1077	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1078	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1079	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1080	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1081	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1082	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    if(c    ==    'o'    ||    c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	238	None	replace
1083	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    if(c    ==    'o'    ||    c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	238	None	replace
1084	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    if(c    ==    'o'    ||    c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	238	None	replace
1085	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c!=  'r')  {	  }    else    if(c    ==    'o'    &&    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1086	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c!=  'r')  {	  }    else    if(c    ==    'o'    &&    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1087	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  <=  'r')  {	  }    else    if(c    ==    'o'    &&    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1088	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  <=  'r')  {	  }    else    if(c    ==    'o'    &&    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1089	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  ==  'r'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    &&    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1090	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  ==  'r'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    &&    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1091	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1092	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1093	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c!=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1094	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c!=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1095	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1096	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1097	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  >=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1098	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  >=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1099	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1100	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	227	2	add
1101	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  {  'f'  ||  c  ==  'n')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  {  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  {  'f'  ||  c  ==  'n')  {	  	non-compiled	[CE]  ')'  expected	227	None	add
1102	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'd')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'd')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'd')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	166	None	replace
1103	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	166	None	replace
1104	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(  2)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(  2)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd')  {  if(s.charAt(  2)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	166	None	replace
1105	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'a')  {  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'a')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'a')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	166	None	replace
1106	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'i')  {  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'i')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'i')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	166	None	replace
1107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1108	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1110	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1112	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1114	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1116	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1118	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1120	[BUG]  [BUGGY]  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  &&  s.charAt(2)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't'  &&  s.charAt(2)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1122	[BUG]  [BUGGY]  if(c  ==  't'  &&  s.charAt(2)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  &&  s.charAt(2)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't'  &&  s.charAt(2)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  &&  s.charAt(0)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't'  &&  s.charAt(0)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1124	[BUG]  [BUGGY]  if(c  ==  't'  &&  s.charAt(0)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  &&  s.charAt(0)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't'  &&  s.charAt(0)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't'  ||  c  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1126	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't'  ||  c  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
1127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1128	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1130	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1132	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c!=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1133	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >>  'd')  {  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >>  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >>  'd')  {	  	non-compiled	[CE]  incompatible  types	186	None	add
1134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1135	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'i')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  ==  'i')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1137	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'i')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  ==  'i')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  ==  'i')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1138	[BUG]  [BUGGY]  case  4:  c=s.charAt(1);  break  1;  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  4:  c=s.charAt(1);  break  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(1);  break  1;	  case    4:    c=s.charAt(2);    break    1;    	non-compiled	[CE]  orphaned  case	213	None	replace
1139	[BUG]  [BUGGY]  case  4:  c=s.charAt(0);  break  1;  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  4:  c=s.charAt(0);  break  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(0);  break  1;	  case    4:    c=s.charAt(2);    break    1;    	non-compiled	[CE]  orphaned  case	213	None	replace
1140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1141	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'd'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1143	[BUG]  [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'd'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c!=  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1145	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c!=  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1147	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  ==  'r'  ||  c!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1149	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c!=  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  ==  'r'  ||  c!=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c!=  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1151	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c!=  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  >=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  >=  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1153	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  >=  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  >=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  >=  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  ==  'r'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1155	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c  >=  'o')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  ==  'r'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  ==  'r'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
1156	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  {  'r'  ||  c  ==  'o')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  }  else  if(c  {  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    }  else  if(c  {  'r'  ||  c  ==  'o')  {	  	non-compiled	[CE]  ')'  expected	142	None	add
1157	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	63	None	replace
1158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1159	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1161	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1163	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  >=  'f'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1165	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1167	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1169	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1171	[BUG]  [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1173	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c!=  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
1175	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
1176	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	70	None	add
1177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1178	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c!=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1180	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c!=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1182	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  >=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  >=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1184	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  >=  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  >=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  >=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1186	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
1187	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  {  'd'  ||  c  ==  'r')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  {  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  {  'd'  ||  c  ==  'r')  {	  	non-compiled	[CE]  ')'  expected	121	None	add
1188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  &&  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  &&  c  ==  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1189	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  &&  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  &&  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  &&  c  ==  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'n'  ||  c  ==  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1191	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'n'  ||  c  ==  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  'O')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1193	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'O')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'O')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c!=  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1195	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c!=  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1196	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	234	None	replace
1197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	234	2	replace
1198	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	234	2	replace
1199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  ==  'o'  &&  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1200	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  ==  'o'  &&  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c!=  'o'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c!=  'o'  &&  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1202	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c!=  'o'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c!=  'o'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c!=  'o'  &&  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  ==  'o'  &&  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1204	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  ==  'o'  &&  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  >=  'o'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  >=  'o'  &&  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1206	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  >=  'o'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  >=  'o'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  >=  'o'  &&  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  ==  'o'  &&  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1208	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'o'  &&  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  ==  'o'  &&  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
1209	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  else  if(c  ==  'o'  &&  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  else  if(c  ==  'o'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    else  if(c  ==  'o'  &&  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	192	None	add
1210	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	67	None	replace
1211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	131	2	replace
1212	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	131	2	replace
1213	[BUG]  [BUGGY]  Context.checkState(c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1214	[BUG]  [BUGGY]  Context.checkState(c  ==  'r'  ||  c  ==  'n');  [CE]  cannot  find  symbol  Context  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'r'  ||  c  ==  'n');  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  'r'  ||  c  ==  'n');	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  cannot  find  symbol  Context	131	None	replace
1215	[BUG]  [BUGGY]  Context.checkState(c  ==  'r'  ||  c  ==  'n');  break  complete;  [CE]  cannot  find  symbol  Context  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'r'  ||  c  ==  'n');  break  complete;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  'r'  ||  c  ==  'n');  break  complete;	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  cannot  find  symbol  Context	131	None	replace
1216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }    else    if(c    ==    'd'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1217	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }    else    if(c    ==    'd'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1219	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1221	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(4)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1223	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1225	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1227	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1229	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  ==  'f'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1231	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  ==  'f'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c!=  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  ==  'f'  ||  c!=  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1233	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c!=  't')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c!=  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  ==  'f'  ||  c!=  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c!=  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c!=  'f'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1235	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c!=  'f'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c!=  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c!=  'f'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  >=  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  >=  'f'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1237	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  >=  'f'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  >=  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  >=  'f'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c  >=  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  ==  'f'  ||  c  >=  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1239	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c  >=  't')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  ==  'f'  ||  c  >=  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  ==  'f'  ||  c  >=  't')  {	  	compilable	  [FE]  AssertionFailedError  	258	2	add
1240	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  {  'f'  ||  c  ==  't')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  }  else  if(c  {  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    't')    {    }  else  if(c  {  'f'  ||  c  ==  't')  {	  	non-compiled	[CE]  ')'  expected	258	None	add
1241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  't')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    >>    'd')    {    	compilable	  [FE]  AssertionFailedError  	189	2	replace
1242	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  't')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    >>    'd')    {    	compilable	  [FE]  AssertionFailedError  	189	2	replace
1243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  'd')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1244	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'd')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1246	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1248	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1249	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	110	None	replace
1250	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  finish;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  finish;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  ';'  expected	81	None	replace
1251	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	81	None	replace
1252	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	81	None	replace
1253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1254	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1256	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1258	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1260	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1262	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1264	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  &&  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'r'  &&  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1266	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  &&  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  &&  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  &&  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1268	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1270	[BUG]  [BUGGY]  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'r'  ||  c!=  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1272	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c!=  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c!=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  ||  c!=  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1273	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	133	None	replace
1274	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	133	None	replace
1275	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	133	None	replace
1276	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(1))  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(1))  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(1))  {	  }    else    if(c    ==    'f')    {    case    3:    switch(s.charAt(2))    {    	non-compiled	[CE]  orphaned  case	222	None	replace
1277	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(0))  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(0))  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(0))  {	  }    else    if(c    ==    'f')    {    case    3:    switch(s.charAt(2))    {    	non-compiled	[CE]  orphaned  case	222	None	replace
1278	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(3))  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(3))  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(3))  {	  }    else    if(c    ==    'f')    {    case    3:    switch(s.charAt(2))    {    	non-compiled	[CE]  orphaned  case	222	None	replace
1279	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	232	None	replace
1280	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	232	None	replace
1281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1282	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'f'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1284	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'f'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c!=  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1286	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c!=  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  >=  'f'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1288	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1289	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {	  }    else    if(c    ==    'd')    {    if(c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	215	None	replace
1290	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  if(c  ==  'd')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't')  {  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't')  {  if(c  ==  'd')  {	  }    else    if(c    ==    'd')    {    if(c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	215	None	replace
1291	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {	  }    else    if(c    ==    'd')    {    if(c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	215	None	replace
1292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1293	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1295	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1297	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1299	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1301	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1303	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1305	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1307	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1309	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1311	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1313	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1314	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1315	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'O'  &&  c  ==  'r')  {	  }    else    if(c    ==    'O'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1317	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  &&  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'O'  &&  c  ==  'r')  {	  }    else    if(c    ==    'O'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'O'  ||  c  ==  'r')  {	  }    else    if(c    ==    'O'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1319	[BUG]  [BUGGY]  }  else  if(c!=  'O'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'O'  ||  c  ==  'r')  {	  }    else    if(c    ==    'O'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'O'  ||  c!=  'r')  {	  }    else    if(c    ==    'O'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1321	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'O'  ||  c!=  'r')  {	  }    else    if(c    ==    'O'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1323	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1325	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1326	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1327	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1328	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1329	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  >=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1331	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1333	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  't')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
1334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1335	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1337	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c!=  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c!=  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1339	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c!=  'f'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c!=  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c!=  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  >=  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  >=  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1341	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  >=  'f'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  >=  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  >=  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1343	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1344	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  else  if(c  ==  'f'  ||  c  ==  'e')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    else  if(c  ==  'f'  ||  c  ==  'e')  {	  	non-compiled	[CE]  'else'  without  'if'	45	None	add
1345	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	167	None	replace
1346	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	167	None	replace
1347	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	167	None	replace
1348	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	10	2	replace
1349	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	10	2	replace
1350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	10	2	replace
1351	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	10	2	replace
1352	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'F')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    ==    'F')    {    	compilable	  [FE]  AssertionFailedError  	102	2	replace
1353	[BUG]  [BUGGY]  }  else  if(c  ==  'F')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'F')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    ==    'F')    {    	compilable	  [FE]  AssertionFailedError  	102	2	replace
1354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    ==    'F')    {    	compilable	  [FE]  AssertionFailedError  	102	2	replace
1355	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    ==    'F')    {    	compilable	  [FE]  AssertionFailedError  	102	2	replace
1356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'f')    {    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	103	2	replace
1357	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'f')    {    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	103	2	replace
1358	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1359	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1361	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1363	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1365	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1367	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1368	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  {  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  {  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  {  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  ')'  expected	3	None	add
1369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1370	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
1371	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1372	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1373	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1374	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1375	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1376	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1377	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1378	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1379	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1380	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1381	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1382	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1383	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(2)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(2)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(2)  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	169	None	replace
1384	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(0)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(0)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(0)  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	169	None	replace
1385	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(3)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(3)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(3)  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	169	None	replace
1386	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1387	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1389	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1390	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1391	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1392	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1393	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1394	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1395	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1396	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1397	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'D')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    ==    'D')    {    	compilable	  [FE]  AssertionFailedError  	191	2	replace
1399	[BUG]  [BUGGY]  }  else  if(c  ==  'D')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'D')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    ==    'D')    {    	compilable	  [FE]  AssertionFailedError  	191	2	replace
1400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1401	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1402	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1403	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1405	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1406	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	15	3	add
1407	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	15	3	add
1408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1409	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)!=  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1411	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1412	[BUG]  [BUGGY]  parent  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'n')  {  break  complete;  }	  parent    ==    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  not  a  statement	248	None	replace
1413	[BUG]  [BUGGY]  parent  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }	  parent    ==    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  not  a  statement	248	None	replace
1414	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1415	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1417	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1418	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1419	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1420	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1421	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1423	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1425	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1427	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1428	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c!=  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c!=  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1429	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c!=  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c!=  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c!=  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1430	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1431	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  >=  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  >=  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1433	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  >=  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  >=  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  >=  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1434	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1435	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1436	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  else  if(c  ==  'f'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    else  if(c  ==  'f'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
1437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  >=  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    >=    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	151	2	replace
1438	[BUG]  [BUGGY]  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  >=  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    >=    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	151	2	replace
1439	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1440	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1441	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c!=  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1442	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c!=  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  ==  'd'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1444	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  ==  'd'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1445	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  >=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  >=  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1446	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  >=  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  >=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  >=  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  ==  'd'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1448	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  ==  'd'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  ==  'd'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1449	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  {  'd'  ||  c  ==  'n')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  }  else  if(c  {  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    }  else  if(c  {  'd'  ||  c  ==  'n')  {	  	non-compiled	[CE]  ')'  expected	119	None	add
1450	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  ==  'o'  &&  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1451	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  ==  'o'  &&  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1452	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c!=  'o'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c!=  'o'  &&  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1453	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c!=  'o'  &&  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c!=  'o'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c!=  'o'  &&  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1454	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  ==  'o'  &&  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1455	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c!=  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  ==  'o'  &&  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1456	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  >=  'o'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  >=  'o'  &&  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1457	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  >=  'o'  &&  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  >=  'o'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  >=  'o'  &&  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1458	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  ==  'o'  &&  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1459	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  ==  'o'  &&  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	136	2	add
1460	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  else  if(c  ==  'o'  &&  c  ==  'r')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  else  if(c  ==  'o'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    else  if(c  ==  'o'  &&  c  ==  'r')  {	  	non-compiled	[CE]  'else'  without  'if'	136	None	add
1461	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	249	None	replace
1462	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  't')  {  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  't')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  't')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1463	[BUG]  [BUGGY]  deal(s.charAt(2))  {  'r')  {  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(s.charAt(2))  {  'r')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  'r')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1464	[BUG]  [BUGGY]  Context.checkState(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1465	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
1466	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
1467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
1468	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
1469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  c  ==  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1470	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  c  ==  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1472	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'd'  ||  c  ==  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1474	[BUG]  [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'd'  ||  c  ==  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1475	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c!=  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1476	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c!=  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1477	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1478	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1479	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1480	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1481	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1482	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1483	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1484	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1485	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1486	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1487	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1488	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1489	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(3);    c=s.charAt(2);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	88	2	add
1490	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(3);    c=s.charAt(2);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	88	2	add
1491	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(3);    c=s.charAt(2);  c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	88	2	add
1492	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);  c=s.charAt(4);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(3);    c=s.charAt(2);  c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	88	2	add
1493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(3);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(3);    c=s.charAt(3);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	88	2	add
1494	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(3);  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(3);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(3);    c=s.charAt(3);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	88	2	add
1495	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);  c=s.charAt((3);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  c=s.charAt(2);  c=s.charAt((3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(3);    c=s.charAt(2);  c=s.charAt((3);	  	non-compiled	[CE]  ')'  expected	88	None	add
1496	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	74	None	add
1497	[BUG]  [BUGGY]  if(id  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(id  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	29	None	replace
1498	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    	non-compiled	[CE]  ';'  expected	240	None	replace
1499	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  if(c  ==  '-')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    if(c  ==  '-')  {	  	non-compiled	[CE]  orphaned  case	272	None	add
1500	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  case  3:  c=s.charAt(2);  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  case  3:  c=s.charAt(2);  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    case  3:  c=s.charAt(2);	  	non-compiled	[CE]  orphaned  case	272	None	add
1501	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  case  3:  switch(s.charAt(2))  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  case  3:  switch(s.charAt(2))  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    case  3:  switch(s.charAt(2))  {	  	non-compiled	[CE]  orphaned  case	272	None	add
1502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1503	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'e'  ||  c  ==  'f')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1505	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'e'  ||  c  ==  'f')  {	  }    else    if(c    ==    'f'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1506	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  {  'd'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  {  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  {  'd'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	117	None	add
1507	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  if(c  ==  'd'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'f')    {    if(c  ==  'd'  ||  c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	117	None	add
1508	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  if(c  ==  'o'  &&  c  ==  'r')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  if(c  ==  'o'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    if(c  ==  'o'  &&  c  ==  'r')  {	  	non-compiled	[CE]  orphaned  case	136	None	add
1509	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  't')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    {    'f')    {    	compilable	  [FE]  AssertionFailedError  	100	2	replace
1510	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    {    'f')    {    	compilable	  [FE]  AssertionFailedError  	100	2	replace
1511	[BUG]  [BUGGY]  if(id  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [CE]  incomparable  types:  boolean  and  char  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(id  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  incomparable  types:  boolean  and  char	73	None	replace
1512	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'l'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'l'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
1513	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'l'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'l'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'l'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
1514	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
1515	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
1516	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1517	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  'r')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1519	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'r')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1520	[BUG]  [BUGGY]  Context.checkState(name  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(name  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(name  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
1521	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'r'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c    >=    'f')    {    	compilable	  [FE]  AssertionFailedError  	153	2	replace
1522	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c    >=    'f')    {    	compilable	  [FE]  AssertionFailedError  	153	2	replace
1523	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  {  'd')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  {  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  {  'd')  {	  	non-compiled	[CE]  ')'  expected	190	None	add
1524	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
1525	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  >=  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
1526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1527	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1529	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1530	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1531	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1532	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1533	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1534	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1535	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
1536	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	260	None	add
1537	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1538	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1539	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1540	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1541	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  int  c=s.charAt(2);  c=s.charAt(2);  [CE]  variable  c  is  already  defined  in  method  isKeyword(String)  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(2);  int  c=s.charAt(2);  c=s.charAt(2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(2);    int  c=s.charAt(2);  c=s.charAt(2);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isKeyword(String)	86	None	add
1542	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  if(c  ==  'd'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  if(c  ==  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    if(c  ==  'd'  ||  c  ==  'a')  {	  	non-compiled	[CE]  orphaned  case	204	None	add
1543	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  {  'd'  ||  c  ==  'a')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  }  else  if(c  {  'd'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'a')    {    }  else  if(c  {  'd'  ||  c  ==  'a')  {	  	non-compiled	[CE]  ')'  expected	204	None	add
1544	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'r'  ||  c  ==  'd')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
1545	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  ||  c  ==  'd')  {	  }    else    if(c    ==    'd'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
1546	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	201	None	add
1547	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [CE]  orphaned  case  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	201	None	add
1548	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1549	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1551	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1552	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c  >>  'f')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'o'  ||  c  >>  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'o'  ||  c  >>  'f')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	152	None	add
1553	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  else  if(c  ==  'f'  ||  c  ==  'r')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    else  if(c  ==  'f'  ||  c  ==  'r')  {	  	non-compiled	[CE]  'else'  without  'if'	225	None	add
1554	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  if(c  ==  'f'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'r')    {    if(c  ==  'f'  ||  c  ==  'r')  {	  	non-compiled	[CE]  orphaned  case	225	None	add
1555	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1556	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1557	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	66	None	add
1558	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	non-compiled	[CE]  'else'  without  'if'	138	None	add
1559	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  	non-compiled	[CE]  orphaned  case	138	None	add
1560	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
1561	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
1562	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	178	3	add
1563	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	178	3	add
1564	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
1565	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
1566	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
1567	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
1568	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
1569	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'h'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
1570	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  '-')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    {    'd')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1571	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  '-')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    {    'd')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1572	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  if(c  ==  'f'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    if(c  ==  'f'  ||  c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	47	None	add
1573	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  {  'f'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  }  else  if(c  {  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'f')    {    }  else  if(c  {  'f'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	47	None	add
1574	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1575	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1576	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1577	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1578	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1579	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1580	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
1581	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  {'s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  {'s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  {'s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  ')'  expected	7	None	add
1582	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	7	None	add
1583	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1584	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1585	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1586	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	265	2	add
1587	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1588	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1589	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1590	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1591	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  if(c  ==  'o'  &&  c  ==  'd')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  if(c  ==  'o'  &&  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    if(c  ==  'o'  &&  c  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	1	None	add
1592	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  if(c  ==  'n'  ||  c  ==  'o')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  if(c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    if(c  ==  'n'  ||  c  ==  'o')  {	  	non-compiled	[CE]  orphaned  case	218	None	add
1593	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  {  'n'  ||  c  ==  'o')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  }  else  if(c  {  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'o')    {    }  else  if(c  {  'n'  ||  c  ==  'o')  {	  	non-compiled	[CE]  ')'  expected	218	None	add
1594	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	209	None	add
1595	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	209	None	add
1596	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {	  	non-compiled	[CE]  'else'  without  'if'	256	None	add
1597	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  >>  'd')  {  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c  >>  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c  >>  'd')  {	  	non-compiled	[CE]  incompatible  types	184	None	add
1598	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c!=  'D')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
1599	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'D')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c!=  'D')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
1600	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'i')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c!=  'i')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
1601	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'i')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  'i')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c!=  'i')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
1602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	114	2	replace
1603	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	114	2	replace
1604	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  else  if(c  ==  'f'  ||  c  ==  'n')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    else  if(c  ==  'f'  ||  c  ==  'n')  {	  	non-compiled	[CE]  'else'  without  'if'	227	None	add
1605	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  if(c  ==  'f'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    if(c  ==  'f'  ||  c  ==  'n')  {	  	non-compiled	[CE]  orphaned  case	227	None	add
1606	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(  1)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	10	2	replace
1607	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  1)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  1)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	10	2	replace
1608	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  else  if(c  ==  'f'  ||  c  ==  'o')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  else  if(c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    else  if(c  ==  'f'  ||  c  ==  'o')  {	  	non-compiled	[CE]  'else'  without  'if'	194	None	add
1609	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'f'  ||  c  ==  'o')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o')    {    if(c  ==  'f'  ||  c  ==  'o')  {	  	non-compiled	[CE]  orphaned  case	194	None	add
1610	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {	  }    else    if(c    ==    'd')    {    if(c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	215	None	replace
1611	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  else  if(c  ==  'd'  ||  c  ==  'n')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    else  if(c  ==  'd'  ||  c  ==  'n')  {	  	non-compiled	[CE]  'else'  without  'if'	119	None	add
1612	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  if(c  ==  'd'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'n')    {    if(c  ==  'd'  ||  c  ==  'n')  {	  	non-compiled	[CE]  orphaned  case	119	None	add
1613	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	264	2	replace
1614	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	264	2	replace
1615	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
1616	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
1617	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
1618	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	170	2	add
1619	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(0);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(1);    c=s.charAt(0);	  	compilable	  [FE]  AssertionFailedError  	55	2	add
1620	[BUG]  [BUGGY]  c=s.charAt(1);  c=s.charAt(0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(1);  c=s.charAt(0);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(1);    c=s.charAt(0);	  	compilable	  [FE]  AssertionFailedError  	55	2	add
1621	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	111	None	add
1622	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s	  	non-compiled	[CE]  ')'  expected	111	None	add
1623	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	76	None	add
1624	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	76	None	add
1625	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
1626	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
1627	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1628	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1629	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1630	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1631	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1632	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1633	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  >>  'o'  ||  c  ==  'd')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c  >>  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c  >>  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	21	None	add
1634	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1635	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1637	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1638	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	79	None	add
1639	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	79	None	add
1640	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    if(c    ==    'o'    ||    c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	238	None	replace
1641	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    if(c    ==    'o'    ||    c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	238	None	replace
1642	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1643	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1644	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'y'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'y'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1645	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'y'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'y'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'y'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	33	2	add
1646	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(4);  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(4);  }	          c=s.charAt(2);    c=s.charAt(4);    	compilable	  [FE]  AssertionFailedError  	93	2	replace
1647	[BUG]  [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(4);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(4);  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(4);  }	          c=s.charAt(2);    c=s.charAt(4);    	compilable	  [FE]  AssertionFailedError  	93	2	replace
1648	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	62	None	add
1649	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete    	non-compiled	[CE]  ';'  expected	82	None	replace
1650	[BUG]  [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(c)  {  if(s.charAt(2)  ==  'r')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1651	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	249	None	replace
1652	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
1653	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
1654	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c  >>  'r')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'o'  ||  c  >>  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'o'  ||  c  >>  'r')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	163	None	add
1655	[BUG]  [BUGGY]  case  2:  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  2:  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	134	None	replace
1656	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'r')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    	compilable	  [FE]  RuntimeException  	257	3	replace
1657	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'r')  {  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'r')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    	compilable	  [FE]  RuntimeException  	257	3	replace
1658	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  RuntimeException  	261	3	replace
1659	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  RuntimeException  	261	3	replace
1660	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1661	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1662	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1663	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1665	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1666	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'r'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1667	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'r'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1668	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	104	None	add
1669	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
1670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'l')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'l'  ||  c  ==  'l')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	229	2	replace
1671	[BUG]  [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'l')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'l')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'l'  ||  c  ==  'l')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	229	2	replace
1672	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	212	None	replace
1673	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	212	None	replace
1674	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  else  if(c  ==  'f'  ||  c  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    else  if(c  ==  'f'  ||  c  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	51	None	add
1675	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  if(c  ==  'f'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'd')    {    if(c  ==  'f'  ||  c  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	51	None	add
1676	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	116	None	replace
1677	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	116	None	replace
1678	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  int  c=s.charAt(2);  c=s.charAt(3);  [CE]  variable  c  is  already  defined  in  method  isKeyword(String)  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(3);  int  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(3);    int  c=s.charAt(2);  c=s.charAt(3);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isKeyword(String)	88	None	add
1679	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	196	None	add
1680	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	196	None	add
1681	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  {'s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  {'s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  {'s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	196	None	add
1682	[BUG]  [BUGGY]  Context.checkState(name  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(name  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(name  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
1683	[BUG]  [BUGGY]  Context.checkState(id  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(id  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
1684	[BUG]  [BUGGY]  Context.checkState(name  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(name  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(name  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
1685	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'O'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'O'  &&  c  ==  'r')  {	  }    else    if(c    ==    'O'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1686	[BUG]  [BUGGY]  }  else  if(c!=  'O'  &&  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'O'  &&  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'O'  &&  c  ==  'r')  {	  }    else    if(c    ==    'O'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1687	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1688	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c  >=  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1689	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1690	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1691	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1692	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  >=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  >=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1693	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c  >>  'd')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'o'  ||  c  >>  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'o'  ||  c  >>  'd')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	25	None	add
1694	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1695	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
1696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
1697	[BUG]  [BUGGY]  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
1698	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	non-compiled	[CE]  'else'  without  'if'	274	None	add
1699	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  	non-compiled	[CE]  orphaned  case	274	None	add
1700	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
1701	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
1702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
1703	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
1704	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
1705	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
1706	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
1707	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c!=    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
1708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1709	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1710	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  =='s'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  =='s'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1711	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  =='s'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  =='s'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  =='s'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
1712	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(3);  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(3);  }	          c=s.charAt(2);    c=s.charAt(3);    	compilable	  [FE]  AssertionFailedError  	89	2	replace
1713	[BUG]  [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(3);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(3);  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(3);  }	          c=s.charAt(2);    c=s.charAt(3);    	compilable	  [FE]  AssertionFailedError  	89	2	replace
1714	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	11	None	add
1715	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'O')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
1716	[BUG]  [BUGGY]  }  else  if(c  ==  'O')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'O')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
1717	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
1718	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	172	2	add
1719	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  int  c=s.charAt(2);  c=s.charAt(4);  [CE]  variable  c  is  already  defined  in  method  isKeyword(String)  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  int  c=s.charAt(2);  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(4);    int  c=s.charAt(2);  c=s.charAt(4);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isKeyword(String)	92	None	add
1720	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
1721	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
1722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'l'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	165	2	replace
1723	[BUG]  [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'l'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	165	2	replace
1724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1725	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1726	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
1727	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
1728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
1729	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
1730	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >>  'o'  ||  c  ==  'r')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >>  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >>  'o'  ||  c  ==  'r')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	161	None	add
1731	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
1732	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c!=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
1733	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	69	None	replace
1734	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(X!=  null)  {  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	69	None	replace
1735	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  >>  'f')  {  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c  >>  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c  >>  'f')  {	  	non-compiled	[CE]  incompatible  types	96	None	add
1736	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	246	None	replace
1737	[BUG]  [BUGGY]  case  2:  c=s.charAt(id  +  1);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  2:  c=s.charAt(id  +  1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(id  +  1);	  case    2:    c=s.charAt(id);    	non-compiled	[CE]  orphaned  case	200	None	replace
1738	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1739	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
1740	[BUG]  [BUGGY]  parent!=  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent!=  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent!=  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  parent    ==    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	276	None	replace
1741	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
1742	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
1743	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	64	None	add
1744	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;	  	non-compiled	[CE]  orphaned  case	64	None	add
1745	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	166	None	replace
1746	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  if(c  ==  'f'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    if(c  ==  'f'  ||  c  ==  'a')  {	  	non-compiled	[CE]  orphaned  case	49	None	add
1747	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  {  'f'  ||  c  ==  'a')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  }  else  if(c  {  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'a')    {    }  else  if(c  {  'f'  ||  c  ==  'a')  {	  	non-compiled	[CE]  ')'  expected	49	None	add
1748	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  else  if(c  ==  'f'  ||  c  ==  't')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  else  if(c  ==  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    't')    {    else  if(c  ==  'f'  ||  c  ==  't')  {	  	non-compiled	[CE]  'else'  without  'if'	258	None	add
1749	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  if(c  ==  'f'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  if(c  ==  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    't')    {    if(c  ==  'f'  ||  c  ==  't')  {	  	non-compiled	[CE]  orphaned  case	258	None	add
1750	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1751	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1752	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1753	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1754	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1755	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1756	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1757	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1758	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    	compilable	  [FE]  RuntimeException  	16	3	replace
1759	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  ||  s.charAt(3)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    	compilable	  [FE]  RuntimeException  	16	3	replace
1760	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
1761	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'F')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
1762	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  {  'f')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  {  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  {  'f')  {	  	non-compiled	[CE]  ')'  expected	94	None	add
1763	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  <=  'f')  {	  }    else    if(c    ==    'o'    &&    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	193	2	replace
1764	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  <=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  <=  'f')  {	  }    else    if(c    ==    'o'    &&    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	193	2	replace
1765	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  ==  'f'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    &&    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	193	2	replace
1766	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  ==  'f'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    &&    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	193	2	replace
1767	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
1768	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
1769	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
1770	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(2)!=    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
1771	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    if(c    ==    'o'    ||    c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	230	None	replace
1772	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    if(c    ==    'o'    ||    c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	230	None	replace
1773	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    if(c    ==    'o'    ||    c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	230	None	replace
1774	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	9	None	add
1775	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	9	None	add
1776	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;	  	non-compiled	[CE]  orphaned  case	9	None	add
1777	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1778	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
1779	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    &&    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	220	None	replace
1780	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    &&    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	220	None	replace
1781	[BUG]  [BUGGY]  c=s.charAt(id,  2);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(id,  2);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(id,  2);	  c=s.charAt(id);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	57	None	replace
1782	[BUG]  [BUGGY]  c=s.charAt(id  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(id  +  1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(id  +  1);	  c=s.charAt(id);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	57	None	replace
1783	[BUG]  [BUGGY]  c=s.charAt(id,  1);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(id,  1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(id,  1);	  c=s.charAt(id);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	57	None	replace
1784	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
1785	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
1786	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
1787	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
1788	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {	  }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
1789	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'o')  {	  }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
1790	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  if(c  ==  'O'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    if(c  ==  'O'  ||  c  ==  'r')  {	  	non-compiled	[CE]  orphaned  case	140	None	add
1791	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  {  'O'  ||  c  ==  'r')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  {  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  {  'O'  ||  c  ==  'r')  {	  	non-compiled	[CE]  ')'  expected	140	None	add
1792	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd'  ||  c  ==  'a'  &&  c  <=  'z')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  ==  'd'  ||  c  ==  'a'  &&  c  <=  'z')  {	  }    else    if(c    ==    'o'    &&    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
1793	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd'  ||  c  ==  'a'  &&  c  <=  'z')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd'  ||  c  ==  'a'  &&  c  <=  'z')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  ==  'd'  ||  c  ==  'a'  &&  c  <=  'z')  {	  }    else    if(c    ==    'o'    &&    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
1794	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
1795	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	113	2	add
1796	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	113	None	add
1797	[BUG]  [BUGGY]  case  4:  c=s.charAt(3);  break  1;  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  4:  c=s.charAt(3);  break  1;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(3);  break  1;	  case    4:    c=s.charAt(2);    break    1;    	non-compiled	[CE]  orphaned  case	213	None	replace
1798	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  [Delete]  'd')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  [Delete]  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  [Delete]  'd')  {	  	non-compiled	[CE]  ')'  expected	186	None	add
1799	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >=  'D')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1800	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'D')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >=  'D')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1801	[BUG]  [BUGGY]  parent!=  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent!=  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent!=  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  parent    ==    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	248	None	replace
1802	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >=  'F')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
1803	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'F')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >=  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >=  'F')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
1804	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	216	None	add
1805	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  {  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  {  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  {  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	216	None	add
1806	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	216	None	add
1807	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	109	None	add
1808	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s	  	non-compiled	[CE]  ')'  expected	109	None	add
1809	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    	non-compiled	[CE]  ';'  expected	78	None	replace
1810	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    	non-compiled	[CE]  ';'  expected	78	None	replace
1811	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
1812	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
1813	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
1814	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
1815	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
1816	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
1817	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
1818	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
1819	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	133	None	replace
1820	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	133	None	replace
1821	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  {  'd'  ||  c  ==  'o')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  }  else  if(c  {  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    }  else  if(c  {  'd'  ||  c  ==  'o')  {	  	non-compiled	[CE]  ')'  expected	5	None	add
1822	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  if(c  ==  'd'  ||  c  ==  'o')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'o')    {    if(c  ==  'd'  ||  c  ==  'o')  {	  	non-compiled	[CE]  orphaned  case	5	None	add
1823	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'a'  ||  c  ==  'd')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
1824	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'a'  ||  c  ==  'd')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
1825	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1826	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1827	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1828	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
1829	[BUG]  [BUGGY]  if(c  ==  'r')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'r')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'r')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	203	None	replace
1830	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  int  c=s.charAt(2);  c=s.charAt(1);  [CE]  variable  c  is  already  defined  in  method  isKeyword(String)  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  int  c=s.charAt(2);  c=s.charAt(1);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(1);    int  c=s.charAt(2);  c=s.charAt(1);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isKeyword(String)	90	None	add
1831	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  {  'f')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  {  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  {  'f')  {	  	non-compiled	[CE]  ')'  expected	101	None	add
1832	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  if(c  ==  'o'  &&  c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  if(c  ==  'o'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    if(c  ==  'o'  &&  c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	192	None	add
1833	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
1834	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
1835	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
1836	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
1837	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >>  'o'  ||  c  ==  'f')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >>  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >>  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	150	None	add
1838	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
1839	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
1840	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n')  {  if(c  ==  'f')  {	  }    else    if(c    ==    'f')    {    if(c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	221	None	replace
1841	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  else  if(c  ==  'd'  ||  c  ==  'r')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    else  if(c  ==  'd'  ||  c  ==  'r')  {	  	non-compiled	[CE]  'else'  without  'if'	121	None	add
1842	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  if(c  ==  'd'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd'    ||    c    ==    'r')    {    if(c  ==  'd'  ||  c  ==  'r')  {	  	non-compiled	[CE]  orphaned  case	121	None	add
1843	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1844	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1845	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1846	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1847	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1848	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
1849	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  case  2:  switch(s.charAt(2))  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  case  2:  switch(s.charAt(2))  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f')  {  case  2:  switch(s.charAt(2))  {	  }    else    if(c    ==    'f')    {    case    3:    switch(s.charAt(2))    {    	non-compiled	[CE]  orphaned  case	222	None	replace
1850	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	112	2	replace
1851	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	112	2	replace
1852	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
1853	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
1854	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
1855	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'n'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
1856	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
1857	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
1858	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  else  if(c  ==  'r'  ||  c  ==  'o')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    else  if(c  ==  'r'  ||  c  ==  'o')  {	  	non-compiled	[CE]  'else'  without  'if'	142	None	add
1859	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'r'  ||  c  ==  'o')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'r'    ||    c    ==    'o')    {    if(c  ==  'r'  ||  c  ==  'o')  {	  	non-compiled	[CE]  orphaned  case	142	None	add
1860	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  if(c  ==  'O'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    if(c  ==  'O'  ||  c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	198	None	add
1861	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  {  'O'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  {  'O'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  {  'O'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	198	None	add
1862	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }	          c=s.charAt(2);    c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1863	[BUG]  [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }	          c=s.charAt(2);    c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1864	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  partial;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  partial;  }	          c=s.charAt(2);    c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1865	[BUG]  [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  partial;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  partial;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'f')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  partial;  }	          c=s.charAt(2);    c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1866	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
1867	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
1868	[BUG]  [BUGGY]  if(c  ==  'r')  {  if(s.charAt(2)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'r')  {  if(s.charAt(2)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'r')  {  if(s.charAt(2)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	131	None	replace
1869	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	167	None	replace
1870	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    if(c    ==    'o'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	223	None	replace
1871	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    if(c    ==    'o'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	223	None	replace
1872	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    if(c    ==    'o'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	223	None	replace
1873	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'y'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'y'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
1874	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'y'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'y'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'y'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
1875	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
1876	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
1877	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
1878	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
1879	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
1880	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
1881	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'l'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	154	2	replace
1882	[BUG]  [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'l'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	154	2	replace
1883	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
1884	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
1885	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
1886	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
1887	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
1888	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
1889	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1890	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1891	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1892	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1893	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1894	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1895	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1896	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
1897	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
1898	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	3	None	add
1899	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
1900	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {  }  else  if(c  =='s'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'd'    ||    c    ==    'f')    {    }  else  if(c  =='s'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	277	2	add
1901	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	32	None	replace
1902	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	32	None	replace
1903	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	32	None	replace
1904	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1905	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1906	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1907	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1908	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s')  {	  }    else    if(c    ==    'f')    {    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	103	2	replace
1909	[BUG]  [BUGGY]  }  else  if(c  =='s')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s')  {	  }    else    if(c    ==    'f')    {    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	103	2	replace
1910	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >>  'o'  ||  c  ==  'd')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >>  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >>  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	23	None	add
1911	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
1912	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
1913	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
1914	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
1915	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1916	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1917	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1918	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'D')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'D')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1919	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1920	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c!=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c!=  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1921	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'i')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'i')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1922	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'i')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'i')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'i')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1923	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'p')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'p')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1924	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'p')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'p')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'p')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
1925	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  if(c  ==  'n')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n')    {    if(c  ==  'n')  {	  	non-compiled	[CE]  orphaned  case	206	None	add
1926	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  if(c  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n')  {  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'n')    {    if(c  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	206	None	add
1927	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  if(c  ==  'f'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    if(c  ==  'f'  ||  c  ==  'e')  {	  	non-compiled	[CE]  orphaned  case	45	None	add
1928	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  {  'f'  ||  c  ==  'e')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  }  else  if(c  {  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'e')    {    }  else  if(c  {  'f'  ||  c  ==  'e')  {	  	non-compiled	[CE]  ')'  expected	45	None	add
1929	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
1930	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	15	None	add
1931	[BUG]  [BUGGY]  nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  not  a  statement	12	None	replace
1932	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'F'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1933	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1934	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	247	None	replace
1935	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n  -  1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n  -  1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n  -  1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	247	None	replace
1936	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1937	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1938	[BUG]  [BUGGY]  nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  not  a  statement	105	None	replace
1939	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
1940	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'O'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'O'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
1941	[BUG]  [BUGGY]  Context.checkState(c  >=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  >=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  >=  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
1942	[BUG]  [BUGGY]  Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
1943	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >  'd')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1944	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >  'd')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1945	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'i')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >=  'i')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1946	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'i')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {  }  else  if(c  >=  'i')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    >=    'd')    {    }  else  if(c  >=  'i')  {	  	compilable	  [FE]  AssertionFailedError  	186	2	add
1947	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1948	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c    >=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1949	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    if(c    ==    'o'    ||    c    ==    'd')    {    	non-compiled	[CE]  orphaned  case	230	None	replace
1950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
1951	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
1952	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(2);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	90	2	add
1953	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(2);  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(1);  c=s.charAt(2);  c=s.charAt(3);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(1);    c=s.charAt(2);  c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	90	2	add
1954	[BUG]  [BUGGY]  Context.checkState(s.charAt(2)  ==  't'  ||  s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(s.charAt(2)  ==  't'  ||  s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(s.charAt(2)  ==  't'  ||  s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	169	None	replace
1955	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ')'  expected	115	None	replace
1956	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'h'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'h'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1957	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'h'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {  }  else  if(c  ==  'h'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c!=    'r')    {    }  else  if(c  ==  'h'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	157	2	add
1958	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'h'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'h'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
1959	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'h'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'h'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'h'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	155	2	add
1960	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	167	None	replace
1961	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'e')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
1962	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'e')  {	  }    else    if(c    ==    'd'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	205	2	replace
1963	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1964	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'l'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'l'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'l'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1965	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'h'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'h'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1966	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'h'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'h'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c!=    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'h'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
1967	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  RuntimeException  	210	3	replace
1968	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  RuntimeException  	210	3	replace
1969	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	210	2	replace
1970	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	210	2	replace
1971	[BUG]  [BUGGY]  nisipTo(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipTo(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	nisipTo(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
1972	[BUG]  [BUGGY]  nisipTo(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipTo(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	nisipTo(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
1973	[BUG]  [BUGGY]  case  0:  c=s.charAt(0);  break  complete;  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  0:  c=s.charAt(0);  break  complete;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  0:  c=s.charAt(0);  break  complete;	  case    4:    c=s.charAt(1);    break    complete;    	non-compiled	[CE]  orphaned  case	83	None	replace
1974	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
1975	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
1976	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
1977	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'd'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	268	2	add
1978	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	264	2	replace
1979	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	264	2	replace
1980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'i'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
1981	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'i'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	174	2	add
1982	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }	          c=s.charAt(2);    c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1983	[BUG]  [BUGGY]  if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }	          c=s.charAt(2);    c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1984	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  complete;  }	          c=s.charAt(2);    c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1985	[BUG]  [BUGGY]  if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  complete;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  c=s.charAt(2);  c=s.charAt(2);  }  else  {  break  complete;  }	          c=s.charAt(2);    c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1986	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1987	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'r'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1988	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'y'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'y'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1989	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'y'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'y'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'y'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1990	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'i'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'i'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1991	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'i'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'i'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'i'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	41	3	add
1992	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1993	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1994	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  't')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1995	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  't')  {	  }    else    if(c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1996	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
1997	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    >=    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
1998	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c!=  'a'  &&  c  <=  'z')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  c!=  'a'  &&  c  <=  'z')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    >>    'd')    {    	compilable	  [FE]  AssertionFailedError  	189	2	replace
1999	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  c!=  'a'  &&  c  <=  'z')  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  c!=  'a'  &&  c  <=  'z')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  c!=  'a'  &&  c  <=  'z')  {	  }    else    if(c    ==    'd')    {    }    else    if(c    >>    'd')    {    	compilable	  [FE]  AssertionFailedError  	189	2	replace
2000	[BUG]  [BUGGY]  case  2:  c=s.charAt(3);  break  partial;  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  case  2:  c=s.charAt(3);  break  partial;  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(3);  break  partial;	  case    2:    c=s.charAt(2);    break    partial;    	non-compiled	[CE]  orphaned  case	271	None	replace
2001	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
2002	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
2003	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'O'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
2004	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'O'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'O'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	139	2	replace
2005	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
2006	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
2007	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
2008	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	228	2	replace
2009	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	243	2	replace
2010	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	243	2	replace
2011	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
2012	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  't')  {	  }    else    if(c    ==    'f'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	50	2	replace
2013	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n')  {  id=true;  break  complete;  }  }  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  unclosed  character  literal	263	None	add
2014	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n  =  'n')  {  id=true;  break  complete;  }  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n  =  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  n  =  'n')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  ')'  expected	263	None	add
2015	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(s);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  aughtExceptionHandler.handleMissingName(s);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	aughtExceptionHandler.handleMissingName(s);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	241	None	replace
2016	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  aughtExceptionHandler.handleMissingName();  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	aughtExceptionHandler.handleMissingName();	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	241	None	replace
2017	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(s,  name);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  aughtExceptionHandler.handleMissingName(s,  name);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	aughtExceptionHandler.handleMissingName(s,  name);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	241	None	replace
2018	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(s,  name);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  aughtExceptionHandler.handleMissingValue(s,  name);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	aughtExceptionHandler.handleMissingValue(s,  name);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	241	None	replace
2019	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
2020	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	32	None	replace
2021	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'o')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
2022	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'o')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
2023	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
2024	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)!=    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	176	2	add
2025	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.	  	non-compiled	[CE]  <identifier>  expected	66	None	add
2026	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(3)  ==  	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
2027	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
2028	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
2029	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'h'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'h'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
2030	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'h'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'h'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'h'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
2031	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
2032	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'l'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
2033	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
2034	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    >=    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	150	2	add
2035	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
2036	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'l'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
2037	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'h'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'h'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
2038	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'h'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'h'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'h'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
2039	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
2040	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
2041	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
2042	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c!=    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	148	2	add
2043	[BUG]  [BUGGY]  Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
2044	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	116	None	replace
2045	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	116	None	replace
2046	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	133	None	replace
2047	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
2048	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {  }  else  if(c  =='s'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'd'    ||    c    ==    'd')    {    }  else  if(c  =='s'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
2049	[BUG]  [BUGGY]  Context.checkState(c  >=  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  >=  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  >=  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'd'    ||    c    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
2050	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'r'  ||  c  ==  't')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    {    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	239	2	replace
2051	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  ||  c  ==  't')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    {    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	239	2	replace
2052	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
2053	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
2054	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
2055	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    =='s'    ||    c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	197	2	replace
2056	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'J')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'J')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
2057	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'J')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {  }  else  if(c  ==  'J')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'D')    {    }  else  if(c  ==  'J')  {	  	compilable	  [FE]  AssertionFailedError  	190	2	add
2058	[BUG]  [BUGGY]  cast(s.charAt(2)  ==  'r')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  cast(s.charAt(2)  ==  'r')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	cast(s.charAt(2)  ==  'r')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	249	None	replace
2059	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r')break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	249	None	replace
2060	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'O'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c!=  'O'  &&  c  ==  'f')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
2061	[BUG]  [BUGGY]  }  else  if(c!=  'O'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'O'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c!=  'O'  &&  c  ==  'f')  {	  }    else    if(c    ==    'O'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	199	2	replace
2062	[BUG]  [BUGGY]  nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r')    {    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  not  a  statement	270	None	replace
2063	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'h'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'h'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
2064	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'h'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'h'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'h'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
2065	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
2066	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
2067	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
2068	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	37	2	add
2069	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'O'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  ==  'O'  &&  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
2070	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'O'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  }  else  if(c  ==  'O'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'f')    {    }  else  if(c  ==  'O'  &&  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	192	2	add
2071	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	147	2	replace
2072	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }    else    if(c    ==    'o'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	147	2	replace
2073	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    	non-compiled	[CE]  ')'  expected	78	None	replace
2074	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n')  {  id=false;  break  complete;  }  }  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n')  {  id=false;  break  complete;  }  }	  	non-compiled	[CE]  unclosed  character  literal	72	None	add
2075	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	266	2	replace
2076	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'r')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }    else    if(c    ==    'd'    &&    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	266	2	replace
2077	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
2078	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	81	None	replace
2079	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=false;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  ')'  expected	81	None	replace
2080	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
2081	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
2082	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
2083	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'l'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
2084	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'r'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
2085	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'r'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'r'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c!=    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'r'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	159	2	add
2086	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
2087	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'n')  {  id=false;  break  complete;  }  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
2088	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	69	None	replace
2089	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
2090	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	236	2	add
2091	[BUG]  [BUGGY]  AssertionFailedError.make(name);  [CE]  cannot  find  symbol  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  AssertionFailedError.make(name);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	AssertionFailedError.make(name);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  cannot  find  symbol  AssertionFailedError	63	None	replace
2092	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n')  {  id=true;  break  complete;  }  }  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  unclosed  character  literal	106	None	add
2093	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n  =  'n')  {  id=true;  break  complete;  }  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n  =  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n  =  'n')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  ')'  expected	106	None	add
2094	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.	  	non-compiled	[CE]  <identifier>  expected	64	None	add
2095	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'O')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
2096	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'O')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'O'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'O')  {	  	compilable	  [FE]  AssertionFailedError  	254	2	add
2097	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
2098	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
2099	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'h'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'h'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
2100	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'h'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'h'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c    >=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'h'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	180	2	add
2101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'O')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
2102	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'O')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'O')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'O'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'O')  {	  	compilable	  [FE]  AssertionFailedError  	279	2	add
2103	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f'    &&    s.charAt(2)    ==    'r')    {    if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {	  	non-compiled	[CE]  orphaned  case	256	None	add
2104	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=false;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
2105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c!=  't')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
2106	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  't')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {  }  else  if(c!=  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c!=    'd')    {    }  else  if(c!=  't')  {	  	compilable	  [FE]  AssertionFailedError  	184	2	add
2107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'F'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	52	2	replace
2108	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	52	2	replace
2109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
2110	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
2111	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	166	None	replace
2112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	166	2	replace
2113	[BUG]  [BUGGY]  if(c  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	166	2	replace
2114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
2115	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
2116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
2117	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
2118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
2119	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
2120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
2121	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'r'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(1)        ==        'd')        {        }    else    if(c!=    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'r'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	178	2	add
2122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
2123	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'd'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
2124	[BUG]  [BUGGY]  parent  ==  if(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  parent    ==    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	276	None	replace
2125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  '-'  ||  c  ==  '*')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
2126	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  '-'  ||  c  ==  '*')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
2127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  '-'  ||  c  ==  ',')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
2128	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ',')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  '-'  ||  c  ==  ',')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
2129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt((4));  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt((4));	  	compilable	  [FE]  AssertionFailedError  	92	2	add
2130	[BUG]  [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt((4));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          c=s.charAt(2);    c=s.charAt(4);  c=s.charAt(2);  c=s.charAt((4));  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                c=s.charAt(2);        c=s.charAt(4);    c=s.charAt(2);  c=s.charAt((4));	  	compilable	  [FE]  AssertionFailedError  	92	2	add
2131	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(  d')  ==  'd')  {  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(  d')  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(0)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(  d')  ==  'd')  {	  	non-compiled	[CE]  unclosed  character  literal	13	None	add
2132	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'o')  {  if(c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    if(c    ==    'o'    ||    c    ==    'f')    {    	non-compiled	[CE]  orphaned  case	238	None	replace
2133	[BUG]  [BUGGY]  deal()  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal()  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal()  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	135	None	replace
2134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
2135	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'o')  {	  }    else    if(c    ==    'n'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	219	2	replace
2136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
2137	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'l'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'l'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
2138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
2139	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'f')        {        }    else    if(c    ==    'o'    ||    c!=    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	146	2	add
2140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'f'  ||  c  ==  'F')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
2141	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'F')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'f'  ||  c  ==  'F')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
2142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
2143	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
2144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
2145	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'F')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	101	2	add
2146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
2147	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
2148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
2149	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(3)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(5)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
2150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >  'f')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
2151	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {  }  else  if(c  >  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    >=    'f')    {    }  else  if(c  >  'f')  {	  	compilable	  [FE]  AssertionFailedError  	98	2	add
2152	[BUG]  [BUGGY]  parent  ==  if(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  parent    ==    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	248	None	replace
2153	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	31	None	replace
2154	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	244	None	replace
2155	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  not  a  statement	244	None	replace
2156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
2157	[BUG]  [BUGGY]  if(c  ==  't'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(s.charAt(2))    {    if(c    ==    't'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
2158	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'd'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.	  	non-compiled	[CE]  <identifier>  expected	62	None	add
2159	[BUG]  [BUGGY]  nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	nisipToLastChar(c)  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  not  a  statement	71	None	replace
2160	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'l'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'l'  ||  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
2161	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'l'  ||  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'l'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'l'  ||  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	201	3	add
2162	[BUG]  [BUGGY]  cast(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  cast(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	cast(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
2163	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(s);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  aughtExceptionHandler.handleMissingClass(s);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	aughtExceptionHandler.handleMissingClass(s);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	203	None	replace
2164	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(name);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  aughtExceptionHandler.handleMissingName(name);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	aughtExceptionHandler.handleMissingName(name);	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	233	None	replace
2165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
2166	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'd'    ||    c    ==    'r')    {    }  else  if(c  ==  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	252	2	add
2167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(4);	  c=s.charAt(0);    	compilable	  [FE]  AssertionFailedError  	54	2	replace
2168	[BUG]  [BUGGY]  c=s.charAt(4);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(4);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(4);	  c=s.charAt(0);    	compilable	  [FE]  AssertionFailedError  	54	2	replace
2169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'd'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
2170	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'd'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
2171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'r'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'r'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
2172	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'r'  ||  c  >=  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'r'  ||  c  >=  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'r'  ||  c  >=  'o')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
2173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'h'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'h'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
2174	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'h'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {  }  else  if(c  ==  'h'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    ==    'o'    ||    c    >=    'r')    {    }  else  if(c  ==  'h'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
2175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'O'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'O'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
2176	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'O'  ||  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'O'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'O'  ||  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	209	2	add
2177	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'r')  {  if(c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    if(c    ==    'o'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	223	None	replace
2178	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
2179	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c  {  'd')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  }  else  if(c  ==  'o'  &&  c  {  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'd')    {    }  else  if(c  ==  'o'  &&  c  {  'd')  {	  	non-compiled	[CE]  ')'  expected	1	None	add
2180	[BUG]  [BUGGY]  Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  <  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	108	None	replace
2181	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
2182	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n  -  1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n  -  1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  n  -  1)  ==  'n')  {  break  complete;  }	  if(c    ==    't')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
2183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
2184	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'i'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	35	2	add
2185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
2186	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'r'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
2187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'h'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'h'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
2188	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'h'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'h'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'h'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
2189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
2190	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'l'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'l'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'r')        {        }    else    if(c    >=    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'l'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	161	2	add
2191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c!=  'F')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
2192	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'F')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {  }  else  if(c!=  'F')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c!=    'f')    {    }  else  if(c!=  'F')  {	  	compilable	  [FE]  AssertionFailedError  	96	2	add
2193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    '-')    {    }  else  if(c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
2194	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
2195	[BUG]  [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	                if(c        ==        't')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'n')        {        id=true;        break        complete;        }        }        if(c    ==    't')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  else  if(c  ==  't')  {  if(s.charAt(2)  ==  	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
2196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
2197	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
2198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
2199	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
2200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
2201	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
2202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
2203	[BUG]  [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'f')        {        }    else    if(c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	94	2	add
2204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2205	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2207	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'r'    ||    c    ==    'o')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2208	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c  {  'r')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  }  else  if(c  ==  'o'  &&  c  {  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    c    ==    'r')    {    }  else  if(c  ==  'o'  &&  c  {  'r')  {	  	non-compiled	[CE]  ')'  expected	136	None	add
2209	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	240	None	replace
2210	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	234	2	replace
2211	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	234	2	replace
2212	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ')'  expected	234	None	replace
2213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	65	2	replace
2214	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	          if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c    ==    't')    {    if(s.charAt(1)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	65	2	replace
2215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	131	2	replace
2216	[BUG]  [BUGGY]  if(c  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	131	2	replace
2217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	131	2	replace
2218	[BUG]  [BUGGY]  if(c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  'r'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	  deal(c)    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	131	2	replace
2219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
2220	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {  }  else  if(c  ==  'd'  ||  c  >=  'r')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        ||        c        ==        'd')        {        }    else    if(c    ==    'o'    ||    c    >=    'd')    {    }  else  if(c  ==  'd'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
2221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  ')')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  ')')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    {    'f')    {    	compilable	  [FE]  AssertionFailedError  	100	2	replace
2222	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  ')')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  ')')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  ')')  {	  }    else    if(c    ==    'f')    {    }    else    if(c    {    'f')    {    	compilable	  [FE]  AssertionFailedError  	100	2	replace
2223	[BUG]  [BUGGY]  c=s.charAt(id  +  1,  c);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError      [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  c=s.charAt(id  +  1,  c);  [BUGGY]      }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(id  +  1,  c);	  c=s.charAt(id);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	57	None	replace
2224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
2225	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
2226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
2227	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
2228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
2229	[BUG]  [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'd')        {        }    else    if(c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'o')  {	  	compilable	  [FE]  AssertionFailedError  	182	2	add
2230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  't'  ||  c  ==  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
2231	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n')  {	  }    else    if(c    ==    'd'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
2232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
2233	[BUG]  [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}        else        if(c        ==        'o'        &&        s.charAt(2)        ==        'd')        {        }    else    if(c    ==    'o'    &&    s.charAt(4)    ==    'd')    {    }  else  if(c  ==  'r'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
