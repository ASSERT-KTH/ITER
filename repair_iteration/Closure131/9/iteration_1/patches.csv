bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	15	2	replace
2	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	15	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	15	2	replace
4	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	15	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	15	2	replace
6	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	15	2	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	15	2	replace
8	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'd')  {	  }    else    if(c    ==    'o'    ||    c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	15	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	27	2	replace
10	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	27	2	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	27	2	replace
12	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	27	2	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	32	2	replace
14	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	32	2	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	32	2	replace
16	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	32	2	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
18	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
20	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c!=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
22	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c!=  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c!=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
24	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  >=  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  >=  'o'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  >=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
26	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  >=  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'o'  ||  c  >=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'o'  ||  c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
28	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'O'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'O'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
29	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
30	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=false;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
31	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
32	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
34	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
36	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
38	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
40	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
41	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	29	3	add
42	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  RuntimeException  	29	3	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
44	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(4)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
46	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'f')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
48	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'f')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
50	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
52	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'd')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  c=s.charAt(0);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(0);	      c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
54	[BUG]  [BUGGY]  c=s.charAt(0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  c=s.charAt(0);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(0);	      c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  c=s.charAt(1);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(1);	      c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
56	[BUG]  [BUGGY]  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  c=s.charAt(1);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(1);	      c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
57	[BUG]  [BUGGY]  c=s.charAt(id);  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  c=s.charAt(id);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(id);	      c=s.charAt(2);    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	7	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  c=s.charAt(3);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	c=s.charAt(3);	      c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
59	[BUG]  [BUGGY]  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  c=s.charAt(3);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	c=s.charAt(3);	      c=s.charAt(2);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
60	[BUG]  [BUGGY]  case  2:  c=s.charAt(0);  break  complete;  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  2:  c=s.charAt(0);  break  complete;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(0);  break  complete;	      case    2:    c=s.charAt(1);    break    complete;    	non-compiled	[CE]  orphaned  case	3	None	replace
61	[BUG]  [BUGGY]  case  2:  c=s.charAt(3);  break  complete;  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  2:  c=s.charAt(3);  break  complete;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(3);  break  complete;	      case    2:    c=s.charAt(1);    break    complete;    	non-compiled	[CE]  orphaned  case	3	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
63	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
65	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
67	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
68	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	26	None	add
69	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	26	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	25	2	replace
71	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	25	2	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	25	2	replace
73	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	25	2	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	25	2	replace
75	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	25	2	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
77	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
78	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	24	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
80	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	24	2	add
81	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	24	None	add
82	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	24	None	add
83	[BUG]  [BUGGY]  case  4:  c=s.charAt(1);  break  complete;  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  4:  c=s.charAt(1);  break  complete;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(1);  break  complete;	      case    4:    c=s.charAt(2);    break    complete;    	non-compiled	[CE]  orphaned  case	17	None	replace
84	[BUG]  [BUGGY]  case  4:  c=s.charAt(0);  break  complete;  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  4:  c=s.charAt(0);  break  complete;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(0);  break  complete;	      case    4:    c=s.charAt(2);    break    complete;    	non-compiled	[CE]  orphaned  case	17	None	replace
85	[BUG]  [BUGGY]  case  4:  c=s.charAt(3);  break  complete;  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  4:  c=s.charAt(3);  break  complete;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(3);  break  complete;	      case    4:    c=s.charAt(2);    break    complete;    	non-compiled	[CE]  orphaned  case	17	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      c=s.charAt(2);  c=s.charAt(2);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        c=s.charAt(2);    c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
87	[BUG]  [BUGGY]      c=s.charAt(2);  c=s.charAt(2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      c=s.charAt(2);  c=s.charAt(2);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        c=s.charAt(2);    c=s.charAt(2);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      c=s.charAt(2);  c=s.charAt(3);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        c=s.charAt(2);    c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
89	[BUG]  [BUGGY]      c=s.charAt(2);  c=s.charAt(3);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      c=s.charAt(2);  c=s.charAt(3);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        c=s.charAt(2);    c=s.charAt(3);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      c=s.charAt(2);  c=s.charAt(1);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        c=s.charAt(2);    c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
91	[BUG]  [BUGGY]      c=s.charAt(2);  c=s.charAt(1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      c=s.charAt(2);  c=s.charAt(1);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        c=s.charAt(2);    c=s.charAt(1);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      c=s.charAt(2);  c=s.charAt(4);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        c=s.charAt(2);    c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
93	[BUG]  [BUGGY]      c=s.charAt(2);  c=s.charAt(4);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      c=s.charAt(2);  c=s.charAt(4);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        c=s.charAt(2);    c=s.charAt(4);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	8	2	add
95	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	8	2	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c!=  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	8	2	add
97	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c!=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c!=  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f')    {    }  else  if(c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	8	2	add
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  >=  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	8	2	add
99	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  >=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  >=  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f')    {    }  else  if(c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	8	2	add
100	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  {  'f')  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  {  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f')    {    }  else  if(c  {  'f')  {	  	non-compiled	[CE]  ')'  expected	8	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  ==  'F')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {	  	compilable	  [FE]  AssertionFailedError  	8	2	add
102	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  ==  'F')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  }  else  if(c  ==  'F')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f')    {    }  else  if(c  ==  'F')  {	  	compilable	  [FE]  AssertionFailedError  	8	2	add
103	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  else  if(c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  else  if(c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f')    {    else  if(c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	8	None	add
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	22	2	replace
105	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	22	2	replace
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	22	2	replace
107	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	22	2	replace
108	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  id=true;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	22	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
110	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
112	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
114	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
115	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	21	None	add
116	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	21	None	add
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
118	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'f')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'n')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
120	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'n')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'r')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
122	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'r')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
123	[BUG]  [BUGGY]  case  3:  c=s.charAt(1);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  3:  c=s.charAt(1);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  3:  c=s.charAt(1);	      case    3:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	2	None	replace
124	[BUG]  [BUGGY]  case  3:  c=s.charAt(0);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  3:  c=s.charAt(0);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  3:  c=s.charAt(0);	      case    3:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	2	None	replace
125	[BUG]  [BUGGY]  case  3:  c=s.charAt(3);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  3:  c=s.charAt(3);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  3:  c=s.charAt(3);	      case    3:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	2	None	replace
126	[BUG]  [BUGGY]  case  2:  c=s.charAt(0);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  2:  c=s.charAt(0);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(0);	      case    2:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	1	None	replace
127	[BUG]  [BUGGY]  case  2:  c=s.charAt(3);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  2:  c=s.charAt(3);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(3);	      case    2:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	1	None	replace
128	[BUG]  [BUGGY]  case  4:  c=s.charAt(1);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  4:  c=s.charAt(1);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(1);	      case    4:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	16	None	replace
129	[BUG]  [BUGGY]  case  4:  c=s.charAt(0);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  4:  c=s.charAt(0);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(0);	      case    4:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	16	None	replace
130	[BUG]  [BUGGY]  case  4:  c=s.charAt(3);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  4:  c=s.charAt(3);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(3);	      case    4:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	16	None	replace
131	[BUG]  [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(c)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
132	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
133	[BUG]  [BUGGY]  deal(s.charAt(2))  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  deal(s.charAt(2))  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
134	[BUG]  [BUGGY]  deal(s.charAt(2))  {  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  deal(s.charAt(2))  {  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  if(c  ==  't'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
135	[BUG]  [BUGGY]  deal(c)  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  deal(c)  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(c)  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
137	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
139	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'O'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
141	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'O'  ||  c  ==  'r')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
143	[BUG]  [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'r'  ||  c  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'r'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'r')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
145	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
147	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c!=  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
149	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c!=  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c!=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
151	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  >=  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  >=  'o'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  >=  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
153	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'o'  ||  c  >=  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'o'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
154	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  else  if(c  ==  'o'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  else  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    else  if(c  ==  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
156	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
158	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c!=  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c!=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
160	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c!=  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c!=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
162	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  >=  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  >=  'o'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
164	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'o'  ||  c  >=  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'o'  ||  c  >=  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
165	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  else  if(c  ==  'o'  ||  c  ==  'r')  {  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  else  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    else  if(c  ==  'o'  ||  c  ==  'r')  {	  	non-compiled	[CE]  'else'  without  'if'	18	None	add
166	[BUG]  [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(c)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
167	[BUG]  [BUGGY]  deal(s.charAt(2))  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  deal(s.charAt(2))  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	deal(s.charAt(2))  {  if(s.charAt(1)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
168	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  c  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
169	[BUG]  [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	Context.checkState(c  ==  't'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
171	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
173	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
175	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(3)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
177	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(1)!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
179	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c!=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
181	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  >=  'o'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	12	2	add
183	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	12	2	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c!=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	12	2	add
185	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c!=  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c!=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd')    {    }  else  if(c!=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	12	2	add
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  >=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	12	2	add
187	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  >=  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  >=  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd')    {    }  else  if(c  >=  'd')  {	  	compilable	  [FE]  AssertionFailedError  	12	2	add
188	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  {  'd')  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  {  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd')    {    }  else  if(c  {  'd')  {	  	non-compiled	[CE]  ')'  expected	12	None	add
189	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  >>  'd')  {  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  >>  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd')    {    }  else  if(c  >>  'd')  {	  	non-compiled	[CE]  incompatible  types	12	None	add
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  ==  'D')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {	  	compilable	  [FE]  AssertionFailedError  	12	2	add
191	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  ==  'D')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  }  else  if(c  ==  'D')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd')    {    }  else  if(c  ==  'D')  {	  	compilable	  [FE]  AssertionFailedError  	12	2	add
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  &&  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
193	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  &&  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
195	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
197	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  =='s'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'O'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
199	[BUG]  [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'O'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
200	[BUG]  [BUGGY]  case  2:  c=s.charAt(id);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  2:  c=s.charAt(id);  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(id);	      case    2:    c=s.charAt(1);    	non-compiled	[CE]  orphaned  case	5	None	replace
201	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  RuntimeException  	30	3	replace
202	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  ||  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  RuntimeException  	30	3	replace
203	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	24	None	add
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'a')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
205	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'a')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
207	[BUG]  [BUGGY]  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
208	[BUG]  [BUGGY]  case  2:  c=s.charAt(2);  break  1;  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  2:  c=s.charAt(2);  break  1;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(2);  break  1;	      case    2:    c=s.charAt(2);    break    complete;    	non-compiled	[CE]  orphaned  case	4	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	32	2	replace
210	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'o'  ||  s.charAt(1)  ==  'd')  {	  }    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	32	2	replace
211	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
212	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
213	[BUG]  [BUGGY]  case  4:  c=s.charAt(2);  break  1;  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  4:  c=s.charAt(2);  break  1;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  4:  c=s.charAt(2);  break  1;	      case    4:    c=s.charAt(2);    break    complete;    	non-compiled	[CE]  orphaned  case	17	None	replace
214	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  else  if(c  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  else  if(c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd')    {    else  if(c  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	12	None	add
215	[BUG]  [BUGGY]  }  else  if(c  ==  'd')  {  if(c  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd')  {  if(c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'd')    {    if(c  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	12	None	add
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
217	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  ||  c  ==  'o'  ||  c  ==  'f')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'n'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
219	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'o')  {	  }    else    if(c    ==    'o'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
220	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	27	None	replace
221	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  if(c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f')    {    if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	8	None	add
222	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(2))  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f')  {  case  3:  switch(s.charAt(2))  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'f')    {    case  3:  switch(s.charAt(2))  {	  	non-compiled	[CE]  orphaned  case	8	None	add
223	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  if(c  ==  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    if(c  ==  'o'  ||  c  ==  'r')  {	  	non-compiled	[CE]  orphaned  case	18	None	add
224	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  {  'o'  ||  c  ==  'r')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  {  'o'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  {  'o'  ||  c  ==  'r')  {	  	non-compiled	[CE]  ')'  expected	18	None	add
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
226	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'r')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
227	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
228	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
229	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  else  if(c  ==  'o'  ||  c  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  else  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    else  if(c  ==  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
230	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  if(c  ==  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    if(c  ==  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	14	None	add
231	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  {  'o'  ||  c  ==  'd')  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  {  'o'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  {  'o'  ||  c  ==  'd')  {	  	non-compiled	[CE]  ')'  expected	14	None	add
232	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break	  	non-compiled	[CE]  ';'  expected	21	None	add
233	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;	  	non-compiled	[CE]  orphaned  case	21	None	add
234	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  If(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  If(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  ';'  expected	21	None	add
235	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
237	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'o'  &&  s.charAt(0)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
238	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  if(c  ==  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    if(c  ==  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	10	None	add
239	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  {  'o'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  {  'o'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  {  'o'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	10	None	add
240	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break	  	non-compiled	[CE]  ';'  expected	26	None	add
241	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;	  	non-compiled	[CE]  orphaned  case	26	None	add
242	[BUG]  [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  If(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  If(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	        if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    If(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  ';'  expected	26	None	add
243	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	28	None	replace
244	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	22	None	replace
245	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {	  	non-compiled	[CE]  'else'  without  'if'	29	None	add
246	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	23	None	replace
247	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	23	None	replace
248	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
249	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
251	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'd')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'd')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
252	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
253	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'd'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'd'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
255	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'r')  {  }  else  if(c  ==  'O'  ||  c  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'r')    {    }  else  if(c  ==  'O'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	18	2	add
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
257	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'r')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  ||  c  ==  't')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
259	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  't')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  ||  c  ==  't')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
261	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'f'  &&  s.charAt(2)  ==  'd')  {	  }    else    if(c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
262	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	27	2	replace
264	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	27	2	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
266	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(1)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	31	2	add
267	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(1)    ==    'd')    {    if(c  ==  'o'  &&  s.charAt(1)  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	31	None	add
268	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
269	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  &&  s.charAt(2)  ==  'd')  {  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
270	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	if(c  ==  't')  {  if(s.charAt(  2)  ==  'r')  {  s.charAt(  1)  ==  'n')  {  id=false;  break  complete;  }  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  not  a  statement	25	None	replace
271	[BUG]  [BUGGY]  case  2:  c=s.charAt(2);  break  partial;  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  case  2:  c=s.charAt(2);  break  partial;  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	case  2:  c=s.charAt(2);  break  partial;	      case    2:    c=s.charAt(2);    break    complete;    	non-compiled	[CE]  orphaned  case	4	None	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  '-')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
273	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  '-')  {	  }    else    if(c    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
275	[BUG]  [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}  else  if(c  ==  'd'  &&  s.charAt(2)  ==  'o')  {	  }    else    if(c    ==    'o'    &&    s.charAt(2)    ==    'd')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
276	[BUG]  [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }  [BUGGY]    }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	parent  ==  if(c  ==  't')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'n')  {  break  complete;  }	      if(c    ==    't')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'n')    {    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
278	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'd'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'd'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	add	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
280	[BUG]  [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'o'  ||  c  ==  'f')  {  }  else  if(c  ==  'O'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	69	69	2	replace	}    else    if(c    ==    'o'    ||    c    ==    'f')    {    }  else  if(c  ==  'O'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	10	2	add
