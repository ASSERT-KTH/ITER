bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if  (X!=  null  &&  X!=  name  &&!X.equals(s))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	add	if  (X!=  null  &&  X!=  name  &&!X.equals(s))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  AssertionFailedError  	19	2	replace
2	[BUG]  [BUGGY]  if  (X!=  null  &&  X!=  name  &&!X.equals(s))return  false;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if  (X!=  null  &&  X!=  name  &&!X.equals(s))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	if  (X!=  null  &&  X!=  name  &&!X.equals(s))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  AssertionFailedError  	19	2	replace
3	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if  (X!=  null  ||  X!=  s  &&!X.equals(s))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	add	if  (X!=  null  ||  X!=  s  &&!X.equals(s))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  RuntimeException  	19	3	replace
4	[BUG]  [BUGGY]  if  (X!=  null  ||  X!=  s  &&!X.equals(s))return  false;  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if  (X!=  null  ||  X!=  s  &&!X.equals(s))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	if  (X!=  null  ||  X!=  s  &&!X.equals(s))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  RuntimeException  	19	3	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if(X!=  null  &&  X!=  s  &&!X.equals(name))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	add	if(X!=  null  &&  X!=  s  &&!X.equals(name))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  AssertionFailedError  	19	2	replace
6	[BUG]  [BUGGY]  if(X!=  null  &&  X!=  s  &&!X.equals(name))return  false;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if(X!=  null  &&  X!=  s  &&!X.equals(name))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	if(X!=  null  &&  X!=  s  &&!X.equals(name))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  AssertionFailedError  	19	2	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	add	  	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  AssertionFailedError  	19	2	replace
8	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	  	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  AssertionFailedError  	19	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    X= "keyword ";id=true;  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	add	    X= "keyword ";id=true;		compilable	  [FE]  AssertionFailedError  	20	2	add
10	[BUG]  [BUGGY]    X= "keyword ";id=true;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    X= "keyword ";id=true;  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	    X= "keyword ";id=true;		compilable	  [FE]  AssertionFailedError  	20	2	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    X= "protected ";id=true;  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	add	    X= "protected ";id=true;		compilable	  [FE]  AssertionFailedError  	20	2	add
12	[BUG]  [BUGGY]    X= "protected ";id=true;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    X= "protected ";id=true;  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	    X= "protected ";id=true;		compilable	  [FE]  AssertionFailedError  	20	2	add
13	[BUG]  [BUGGY]    s  =  s.charAt(0);  [CE]  incompatible  types  [FE]        AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    s  =  s.charAt(0);  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	    s  =  s.charAt(0);		non-compiled	[CE]  incompatible  types	20	None	add
14	[BUG]  [BUGGY]    s  =  s.substring(0,  c);  [CE]  variable  c  might  not  have  been  initialized  [FE]          AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    s  =  s.substring(0,  c);  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	    s  =  s.substring(0,  c);		non-compiled	[CE]  variable  c  might  not  have  been  initialized	20	None	add
15	[BUG]  [BUGGY]    s  =  s.charAt(1);  [CE]  incompatible  types  [FE]            AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    s  =  s.charAt(1);  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	    s  =  s.charAt(1);		non-compiled	[CE]  incompatible  types	20	None	add
16	[BUG]  [BUGGY]    X=s.charAt(0);  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    X=s.charAt(0);  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	    X=s.charAt(0);		non-compiled	[CE]  incompatible  types	20	None	add
17	[BUG]  [BUGGY]    s=s.charAt(2);  [CE]  incompatible  types  [FE]      AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    s=s.charAt(2);  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	    s=s.charAt(2);		non-compiled	[CE]  incompatible  types	20	None	add
18	[BUG]  [BUGGY]  if(X!=  null  &&  X!=  id  &&!X.equals(s))return  false;  [CE]  incomparable  types:  String  and  boolean  [FE]    AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if(X!=  null  &&  X!=  id  &&!X.equals(s))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	if(X!=  null  &&  X!=  id  &&!X.equals(s))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	non-compiled	[CE]  incomparable  types:  String  and  boolean	19	None	replace
19	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if(X!=  null  &&  X!=  s  ||!X.equals(s))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	add	if(X!=  null  &&  X!=  s  ||!X.equals(s))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  RuntimeException  	19	3	replace
20	[BUG]  [BUGGY]  if(X!=  null  &&  X!=  s  ||!X.equals(s))return  false;  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]  if(X!=  null  &&  X!=  s  ||!X.equals(s))return  false;  [BUGGY]  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	if(X!=  null  &&  X!=  s  ||!X.equals(s))return  false;	if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  	compilable	  [FE]  RuntimeException  	19	3	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    X= "keyword ";id=false;  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	add	    X= "keyword ";id=false;		compilable	  [FE]  AssertionFailedError  	20	2	add
22	[BUG]  [BUGGY]    X= "keyword ";id=false;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  else  if  (c=='p')  {  X= "protected ";id=true;  }  else  if  (c=='t')  {  X= "transient ";id=true;  }  break  partial;  case  10:  c=s.charAt(1);  if  (c=='m')  {  X= "implements ";id=true;  }  else  if  (c=='n')  {  X= "instanceof ";id=true;  }  break  partial;  case  12:  X= "synchronized ";id=true;  break  partial;  }    [BUGGY]    X= "keyword ";id=false;  [BUGGY]  if  (X!=null  &&  X!=s  &&  !X.equals(s))  return  false;  }  return  id;  }  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	185	185	2	replace	    X= "keyword ";id=false;		compilable	  [FE]  AssertionFailedError  	20	2	add
