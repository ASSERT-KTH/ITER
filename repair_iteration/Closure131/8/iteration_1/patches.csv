bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
2	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
4	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
6	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
8	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
10	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
12	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
14	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
16	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
18	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	27	2	add
19	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  {  'n'  ||  c  ==  ':')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  {  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  {  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  ')'  expected	27	None	add
20	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	33	None	replace
21	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
22	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	33	None	replace
23	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
24	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	11	None	replace
25	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
27	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
29	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
31	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
33	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
35	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
36	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  {  'n'  ||  c  ==  '-')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  {  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  {  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  ')'  expected	1	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	35	2	replace
38	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	35	2	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  '-')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
40	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  '-')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  '+')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
42	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  '+')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  ':')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
44	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  ':')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  '@')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
46	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  '@')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
48	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
50	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
52	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
54	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
56	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	29	2	add
57	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  {  'n'  ||  c  ==  '*')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  {  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  {  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  ')'  expected	29	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
59	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
61	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
63	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
65	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
67	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
68	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  {  'n'  ||  c  ==  '+')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  {  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  {  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  ')'  expected	7	None	add
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
70	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
72	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
74	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
76	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	26	2	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
78	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
80	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
82	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
84	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
85	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      	non-compiled	[CE]  orphaned  case	10	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      	compilable	  [FE]  AssertionFailedError  	10	2	replace
87	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      	compilable	  [FE]  AssertionFailedError  	10	2	replace
88	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	      	non-compiled	[CE]  orphaned  case	10	None	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
90	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
92	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
94	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
96	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
98	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
99	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'a')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  {  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  ')'  expected	21	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
101	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
103	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
105	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	15	2	add
106	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	15	None	add
107	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	15	None	add
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
109	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
111	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
113	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
115	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
117	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	25	2	add
118	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  {  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	25	None	add
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	28	2	replace
120	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	28	2	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	28	2	replace
122	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	28	2	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	28	2	replace
124	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	28	2	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	31	2	add
126	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	31	2	add
127	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	31	None	add
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	31	2	add
129	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	31	2	add
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	31	2	add
131	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	31	2	add
132	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	31	None	add
133	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
134	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
135	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
136	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
137	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
138	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
139	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
141	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
143	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
145	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
146	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
147	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
148	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
149	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
150	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
151	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	16	2	replace
153	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	16	2	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
155	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c!=  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
157	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c!=  '.')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c!=  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  >=  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
159	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  >=  '.')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  >=  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
160	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  {  '.')  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  {  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    }  else  if(c  {  '.')  {	  	non-compiled	[CE]  ')'  expected	5	None	add
161	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  >>  '.')  {  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  >>  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    }  else  if(c  >>  '.')  {	  	non-compiled	[CE]  incompatible  types	5	None	add
162	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  [BUGGY]  '.')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  }  else  if(c  [BUGGY]  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    }  else  if(c  [BUGGY]  '.')  {	  	non-compiled	[CE]  ')'  expected	5	None	add
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	24	2	replace
164	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	24	2	replace
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	24	2	replace
166	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	24	2	replace
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	24	2	replace
168	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	24	2	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	32	2	replace
170	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	32	2	replace
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	32	2	replace
172	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	32	2	replace
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
174	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
176	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
178	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
180	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  >=  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
182	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  >=  'A')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  >=  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
184	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	23	2	add
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
186	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
188	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
190	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
192	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
194	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
196	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
198	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
200	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
201	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
202	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
203	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
204	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	19	None	replace
205	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
206	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	19	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	34	2	add
208	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	34	2	add
209	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	34	None	add
210	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	34	None	add
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	34	2	add
212	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	34	2	add
213	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	34	None	add
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
215	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
217	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
219	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
221	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
223	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
224	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  {  'n'  ||  c  ==  'e')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  {  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  {  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  ')'  expected	3	None	add
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
226	[BUG]  [BUGGY]      if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
227	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  else  if(c  ==  'n'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'f')    {    else  if(c  ==  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	25	None	add
228	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
229	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
231	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
232	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  else  if(c  ==  '.')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  else  if(c  ==  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    else  if(c  ==  '.')  {	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
233	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  if(c  ==  '.')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  if(c  ==  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    if(c  ==  '.')  {	  	non-compiled	[CE]  orphaned  case	5	None	add
234	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
235	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	35	None	replace
236	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	35	None	replace
237	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	35	None	replace
238	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  else  if(c  ==  'n'  ||  c  ==  '*')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '*')    {    else  if(c  ==  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  'else'  without  'if'	29	None	add
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
240	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
241	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
242	[BUG]  [BUGGY]      if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	9	None	add
243	[BUG]  [BUGGY]      if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	9	None	add
244	[BUG]  [BUGGY]      if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	9	None	add
245	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	34	None	add
246	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;	  	non-compiled	[CE]  orphaned  case	34	None	add
247	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
248	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  else  if(c  ==  'n'  ||  c  ==  '+')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '+')    {    else  if(c  ==  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
249	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  else  if(c  ==  'n'  ||  c  ==  '-')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    '-')    {    else  if(c  ==  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'a'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
251	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'a'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
252	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	15	None	add
253	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break	  	non-compiled	[CE]  ';'  expected	15	None	add
254	[BUG]  [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	15	None	add
255	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	31	None	add
256	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break	  	non-compiled	[CE]  ';'  expected	31	None	add
257	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	31	None	add
258	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  else  if(c  ==  'n'  ||  c  ==  'a')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a')    {    else  if(c  ==  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  'else'  without  'if'	21	None	add
259	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  else  if(c  ==  'n'  ||  c  ==  'A')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    else  if(c  ==  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  'else'  without  'if'	23	None	add
260	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  {  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  ')'  expected	23	None	add
261	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	32	None	replace
262	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	32	None	replace
263	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	32	None	replace
264	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	16	None	replace
265	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	33	None	replace
266	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	33	None	replace
267	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  else  if(c  ==  'n'  ||  c  ==  ':')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    ':')    {    else  if(c  ==  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  'else'  without  'if'	27	None	add
268	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	19	None	replace
269	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
270	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
271	[BUG]  [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  false)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
273	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	30	2	replace
274	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }	      if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
275	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  else  if(c  ==  'n'  ||  c  ==  'e')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'e')    {    else  if(c  ==  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
276	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
277	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	35	2	replace
279	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	35	2	replace
280	[BUG]  [BUGGY]  }  else  if(c  ==  '.')  {  <  }  else  if(c  ==  '.')  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.')  {  <  }  else  if(c  ==  '.')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.')    {    <  }  else  if(c  ==  '.')  {	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	11	2	replace
282	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	11	2	replace
283	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
284	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	19	None	replace
285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  ',')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
286	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  ',')  {	  }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
287	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	      if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	33	None	replace
288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
289	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
291	[BUG]  [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	        if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
293	[BUG]  [BUGGY]      if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]      if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	        if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	16	2	replace
295	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	16	2	replace
296	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
297	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]    }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }	      if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
299	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
301	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	28	2	replace
303	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}    [BUGGY]  }  else  if(c  ==  ':')  {  [BUGGY]    if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	28	2	replace
